
./Debug/game.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
	GPIO_D.pupdr &= ~0xFFFF0000;
	GPIO_D.pupdr |= 0x00AA0000;
}

void startup(void) {
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f002 fb40 	bl	20002688 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <set_AI_speed_left>:
#include "object.h"

int player1Eaten = 0;
int player2Eaten = 0;

static int set_AI_speed_left(POBJECT o) {
20000010:	b590      	push	{r4, r7, lr}
20000012:	b083      	sub	sp, #12
20000014:	af00      	add	r7, sp, #0
20000016:	6078      	str	r0, [r7, #4]
	o->set_speed(o, -(o->maxSpeed), 0);
20000018:	687b      	ldr	r3, [r7, #4]
2000001a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
2000001c:	687b      	ldr	r3, [r7, #4]
2000001e:	695b      	ldr	r3, [r3, #20]
20000020:	4259      	negs	r1, r3
20000022:	687b      	ldr	r3, [r7, #4]
20000024:	2200      	movs	r2, #0
20000026:	0018      	movs	r0, r3
20000028:	47a0      	blx	r4
	return xcheckCollison(o);
2000002a:	687b      	ldr	r3, [r7, #4]
2000002c:	0018      	movs	r0, r3
2000002e:	f002 f983 	bl	20002338 <xcheckCollison>
20000032:	0003      	movs	r3, r0
}
20000034:	0018      	movs	r0, r3
20000036:	46bd      	mov	sp, r7
20000038:	b003      	add	sp, #12
2000003a:	bd90      	pop	{r4, r7, pc}

2000003c <set_AI_speed_right>:
static int set_AI_speed_right(POBJECT o) {
2000003c:	b590      	push	{r4, r7, lr}
2000003e:	b083      	sub	sp, #12
20000040:	af00      	add	r7, sp, #0
20000042:	6078      	str	r0, [r7, #4]
	o->set_speed(o, o->maxSpeed, 0);
20000044:	687b      	ldr	r3, [r7, #4]
20000046:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20000048:	687b      	ldr	r3, [r7, #4]
2000004a:	6959      	ldr	r1, [r3, #20]
2000004c:	687b      	ldr	r3, [r7, #4]
2000004e:	2200      	movs	r2, #0
20000050:	0018      	movs	r0, r3
20000052:	47a0      	blx	r4
	return xcheckCollison(o);
20000054:	687b      	ldr	r3, [r7, #4]
20000056:	0018      	movs	r0, r3
20000058:	f002 f96e 	bl	20002338 <xcheckCollison>
2000005c:	0003      	movs	r3, r0
}
2000005e:	0018      	movs	r0, r3
20000060:	46bd      	mov	sp, r7
20000062:	b003      	add	sp, #12
20000064:	bd90      	pop	{r4, r7, pc}

20000066 <set_AI_speed_up>:
static int set_AI_speed_up(POBJECT o) {
20000066:	b590      	push	{r4, r7, lr}
20000068:	b083      	sub	sp, #12
2000006a:	af00      	add	r7, sp, #0
2000006c:	6078      	str	r0, [r7, #4]
	o->set_speed(o, 0, -(o->maxSpeed));
2000006e:	687b      	ldr	r3, [r7, #4]
20000070:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20000072:	687b      	ldr	r3, [r7, #4]
20000074:	695b      	ldr	r3, [r3, #20]
20000076:	425a      	negs	r2, r3
20000078:	687b      	ldr	r3, [r7, #4]
2000007a:	2100      	movs	r1, #0
2000007c:	0018      	movs	r0, r3
2000007e:	47a0      	blx	r4
	return ycheckCollison(o);
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	0018      	movs	r0, r3
20000084:	f002 f9ae 	bl	200023e4 <ycheckCollison>
20000088:	0003      	movs	r3, r0
}
2000008a:	0018      	movs	r0, r3
2000008c:	46bd      	mov	sp, r7
2000008e:	b003      	add	sp, #12
20000090:	bd90      	pop	{r4, r7, pc}

20000092 <set_AI_speed_down>:
static int set_AI_speed_down(POBJECT o) {
20000092:	b590      	push	{r4, r7, lr}
20000094:	b083      	sub	sp, #12
20000096:	af00      	add	r7, sp, #0
20000098:	6078      	str	r0, [r7, #4]
	o->set_speed(o, 0, o->maxSpeed);
2000009a:	687b      	ldr	r3, [r7, #4]
2000009c:	6a9c      	ldr	r4, [r3, #40]	; 0x28
2000009e:	687b      	ldr	r3, [r7, #4]
200000a0:	695a      	ldr	r2, [r3, #20]
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	2100      	movs	r1, #0
200000a6:	0018      	movs	r0, r3
200000a8:	47a0      	blx	r4
	return ycheckCollison(o);
200000aa:	687b      	ldr	r3, [r7, #4]
200000ac:	0018      	movs	r0, r3
200000ae:	f002 f999 	bl	200023e4 <ycheckCollison>
200000b2:	0003      	movs	r3, r0
}
200000b4:	0018      	movs	r0, r3
200000b6:	46bd      	mov	sp, r7
200000b8:	b003      	add	sp, #12
200000ba:	bd90      	pop	{r4, r7, pc}

200000bc <set_speed_AI_prio>:


static void set_speed_AI_prio(POBJECT o, int (*prio1)(POBJECT), int (*prio2)(POBJECT), int (*prio3)(POBJECT), int (*prio4)(POBJECT) ) {
200000bc:	b580      	push	{r7, lr}
200000be:	b084      	sub	sp, #16
200000c0:	af00      	add	r7, sp, #0
200000c2:	60f8      	str	r0, [r7, #12]
200000c4:	60b9      	str	r1, [r7, #8]
200000c6:	607a      	str	r2, [r7, #4]
200000c8:	603b      	str	r3, [r7, #0]
	if (!prio1(o)) return;
200000ca:	68fa      	ldr	r2, [r7, #12]
200000cc:	68bb      	ldr	r3, [r7, #8]
200000ce:	0010      	movs	r0, r2
200000d0:	4798      	blx	r3
200000d2:	1e03      	subs	r3, r0, #0
200000d4:	d010      	beq.n	200000f8 <set_speed_AI_prio+0x3c>
	if (!prio2(o)) return;
200000d6:	68fa      	ldr	r2, [r7, #12]
200000d8:	687b      	ldr	r3, [r7, #4]
200000da:	0010      	movs	r0, r2
200000dc:	4798      	blx	r3
200000de:	1e03      	subs	r3, r0, #0
200000e0:	d00c      	beq.n	200000fc <set_speed_AI_prio+0x40>
	if (!prio3(o)) return;
200000e2:	68fa      	ldr	r2, [r7, #12]
200000e4:	683b      	ldr	r3, [r7, #0]
200000e6:	0010      	movs	r0, r2
200000e8:	4798      	blx	r3
200000ea:	1e03      	subs	r3, r0, #0
200000ec:	d008      	beq.n	20000100 <set_speed_AI_prio+0x44>
	if (!prio4(o)) return;
200000ee:	68fa      	ldr	r2, [r7, #12]
200000f0:	69bb      	ldr	r3, [r7, #24]
200000f2:	0010      	movs	r0, r2
200000f4:	4798      	blx	r3
200000f6:	e004      	b.n	20000102 <set_speed_AI_prio+0x46>
	if (!prio1(o)) return;
200000f8:	46c0      	nop			; (mov r8, r8)
200000fa:	e002      	b.n	20000102 <set_speed_AI_prio+0x46>
	if (!prio2(o)) return;
200000fc:	46c0      	nop			; (mov r8, r8)
200000fe:	e000      	b.n	20000102 <set_speed_AI_prio+0x46>
	if (!prio3(o)) return;
20000100:	46c0      	nop			; (mov r8, r8)
}
20000102:	46bd      	mov	sp, r7
20000104:	b004      	add	sp, #16
20000106:	bd80      	pop	{r7, pc}

20000108 <chooseAIDirection>:

void chooseAIDirection(POBJECT o, POBJECT p1, POBJECT p2) {
20000108:	b5f0      	push	{r4, r5, r6, r7, lr}
2000010a:	b093      	sub	sp, #76	; 0x4c
2000010c:	af02      	add	r7, sp, #8
2000010e:	6278      	str	r0, [r7, #36]	; 0x24
20000110:	6239      	str	r1, [r7, #32]
20000112:	61fa      	str	r2, [r7, #28]
	int p1Distancex = fabs((o->posx + o->geo->sizex/2)-(p1->posx + p1->geo->sizex/2));
20000114:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000116:	68da      	ldr	r2, [r3, #12]
20000118:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000011a:	681b      	ldr	r3, [r3, #0]
2000011c:	685b      	ldr	r3, [r3, #4]
2000011e:	2b00      	cmp	r3, #0
20000120:	da00      	bge.n	20000124 <chooseAIDirection+0x1c>
20000122:	3301      	adds	r3, #1
20000124:	105b      	asrs	r3, r3, #1
20000126:	18d2      	adds	r2, r2, r3
20000128:	6a3b      	ldr	r3, [r7, #32]
2000012a:	68d9      	ldr	r1, [r3, #12]
2000012c:	6a3b      	ldr	r3, [r7, #32]
2000012e:	681b      	ldr	r3, [r3, #0]
20000130:	685b      	ldr	r3, [r3, #4]
20000132:	2b00      	cmp	r3, #0
20000134:	da00      	bge.n	20000138 <chooseAIDirection+0x30>
20000136:	3301      	adds	r3, #1
20000138:	105b      	asrs	r3, r3, #1
2000013a:	18cb      	adds	r3, r1, r3
2000013c:	1ad3      	subs	r3, r2, r3
2000013e:	0018      	movs	r0, r3
20000140:	f003 fa10 	bl	20003564 <__aeabi_i2d>
20000144:	0002      	movs	r2, r0
20000146:	000b      	movs	r3, r1
20000148:	0011      	movs	r1, r2
2000014a:	6139      	str	r1, [r7, #16]
2000014c:	005b      	lsls	r3, r3, #1
2000014e:	085b      	lsrs	r3, r3, #1
20000150:	617b      	str	r3, [r7, #20]
20000152:	6938      	ldr	r0, [r7, #16]
20000154:	6979      	ldr	r1, [r7, #20]
20000156:	f003 f9d1 	bl	200034fc <__aeabi_d2iz>
2000015a:	0003      	movs	r3, r0
2000015c:	63fb      	str	r3, [r7, #60]	; 0x3c
	int p1Distancey = fabs((o->posy + o->geo->sizey/2)-(p1->posy + p1->geo->sizey/2));
2000015e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000160:	691a      	ldr	r2, [r3, #16]
20000162:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000164:	681b      	ldr	r3, [r3, #0]
20000166:	689b      	ldr	r3, [r3, #8]
20000168:	2b00      	cmp	r3, #0
2000016a:	da00      	bge.n	2000016e <chooseAIDirection+0x66>
2000016c:	3301      	adds	r3, #1
2000016e:	105b      	asrs	r3, r3, #1
20000170:	18d2      	adds	r2, r2, r3
20000172:	6a3b      	ldr	r3, [r7, #32]
20000174:	6919      	ldr	r1, [r3, #16]
20000176:	6a3b      	ldr	r3, [r7, #32]
20000178:	681b      	ldr	r3, [r3, #0]
2000017a:	689b      	ldr	r3, [r3, #8]
2000017c:	2b00      	cmp	r3, #0
2000017e:	da00      	bge.n	20000182 <chooseAIDirection+0x7a>
20000180:	3301      	adds	r3, #1
20000182:	105b      	asrs	r3, r3, #1
20000184:	18cb      	adds	r3, r1, r3
20000186:	1ad3      	subs	r3, r2, r3
20000188:	0018      	movs	r0, r3
2000018a:	f003 f9eb 	bl	20003564 <__aeabi_i2d>
2000018e:	0002      	movs	r2, r0
20000190:	000b      	movs	r3, r1
20000192:	0011      	movs	r1, r2
20000194:	60b9      	str	r1, [r7, #8]
20000196:	005b      	lsls	r3, r3, #1
20000198:	085b      	lsrs	r3, r3, #1
2000019a:	60fb      	str	r3, [r7, #12]
2000019c:	68b8      	ldr	r0, [r7, #8]
2000019e:	68f9      	ldr	r1, [r7, #12]
200001a0:	f003 f9ac 	bl	200034fc <__aeabi_d2iz>
200001a4:	0003      	movs	r3, r0
200001a6:	63bb      	str	r3, [r7, #56]	; 0x38
	int p2Distancex = fabs((o->posx + o->geo->sizex/2)-(p2->posx + p2->geo->sizex/2));
200001a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200001aa:	68da      	ldr	r2, [r3, #12]
200001ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200001ae:	681b      	ldr	r3, [r3, #0]
200001b0:	685b      	ldr	r3, [r3, #4]
200001b2:	2b00      	cmp	r3, #0
200001b4:	da00      	bge.n	200001b8 <chooseAIDirection+0xb0>
200001b6:	3301      	adds	r3, #1
200001b8:	105b      	asrs	r3, r3, #1
200001ba:	18d2      	adds	r2, r2, r3
200001bc:	69fb      	ldr	r3, [r7, #28]
200001be:	68d9      	ldr	r1, [r3, #12]
200001c0:	69fb      	ldr	r3, [r7, #28]
200001c2:	681b      	ldr	r3, [r3, #0]
200001c4:	685b      	ldr	r3, [r3, #4]
200001c6:	2b00      	cmp	r3, #0
200001c8:	da00      	bge.n	200001cc <chooseAIDirection+0xc4>
200001ca:	3301      	adds	r3, #1
200001cc:	105b      	asrs	r3, r3, #1
200001ce:	18cb      	adds	r3, r1, r3
200001d0:	1ad3      	subs	r3, r2, r3
200001d2:	0018      	movs	r0, r3
200001d4:	f003 f9c6 	bl	20003564 <__aeabi_i2d>
200001d8:	0002      	movs	r2, r0
200001da:	000b      	movs	r3, r1
200001dc:	0011      	movs	r1, r2
200001de:	6039      	str	r1, [r7, #0]
200001e0:	005b      	lsls	r3, r3, #1
200001e2:	085b      	lsrs	r3, r3, #1
200001e4:	607b      	str	r3, [r7, #4]
200001e6:	6838      	ldr	r0, [r7, #0]
200001e8:	6879      	ldr	r1, [r7, #4]
200001ea:	f003 f987 	bl	200034fc <__aeabi_d2iz>
200001ee:	0003      	movs	r3, r0
200001f0:	637b      	str	r3, [r7, #52]	; 0x34
	int p2Distancey = fabs((o->posy + o->geo->sizey/2)-(p2->posy + p2->geo->sizey/2));
200001f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200001f4:	691a      	ldr	r2, [r3, #16]
200001f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200001f8:	681b      	ldr	r3, [r3, #0]
200001fa:	689b      	ldr	r3, [r3, #8]
200001fc:	2b00      	cmp	r3, #0
200001fe:	da00      	bge.n	20000202 <chooseAIDirection+0xfa>
20000200:	3301      	adds	r3, #1
20000202:	105b      	asrs	r3, r3, #1
20000204:	18d2      	adds	r2, r2, r3
20000206:	69fb      	ldr	r3, [r7, #28]
20000208:	6919      	ldr	r1, [r3, #16]
2000020a:	69fb      	ldr	r3, [r7, #28]
2000020c:	681b      	ldr	r3, [r3, #0]
2000020e:	689b      	ldr	r3, [r3, #8]
20000210:	2b00      	cmp	r3, #0
20000212:	da00      	bge.n	20000216 <chooseAIDirection+0x10e>
20000214:	3301      	adds	r3, #1
20000216:	105b      	asrs	r3, r3, #1
20000218:	18cb      	adds	r3, r1, r3
2000021a:	1ad3      	subs	r3, r2, r3
2000021c:	0018      	movs	r0, r3
2000021e:	f003 f9a1 	bl	20003564 <__aeabi_i2d>
20000222:	0002      	movs	r2, r0
20000224:	000b      	movs	r3, r1
20000226:	0011      	movs	r1, r2
20000228:	000c      	movs	r4, r1
2000022a:	005b      	lsls	r3, r3, #1
2000022c:	085d      	lsrs	r5, r3, #1
2000022e:	0020      	movs	r0, r4
20000230:	0029      	movs	r1, r5
20000232:	f003 f963 	bl	200034fc <__aeabi_d2iz>
20000236:	0003      	movs	r3, r0
20000238:	633b      	str	r3, [r7, #48]	; 0x30
	int p1Distance = sqrt(pow(p1Distancex, 2) + pow(p1Distancey, 2));
2000023a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
2000023c:	f003 f992 	bl	20003564 <__aeabi_i2d>
20000240:	2300      	movs	r3, #0
20000242:	2480      	movs	r4, #128	; 0x80
20000244:	05e4      	lsls	r4, r4, #23
20000246:	001a      	movs	r2, r3
20000248:	0023      	movs	r3, r4
2000024a:	f004 fca7 	bl	20004b9c <pow>
2000024e:	0005      	movs	r5, r0
20000250:	000e      	movs	r6, r1
20000252:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20000254:	f003 f986 	bl	20003564 <__aeabi_i2d>
20000258:	2300      	movs	r3, #0
2000025a:	2480      	movs	r4, #128	; 0x80
2000025c:	05e4      	lsls	r4, r4, #23
2000025e:	001a      	movs	r2, r3
20000260:	0023      	movs	r3, r4
20000262:	f004 fc9b 	bl	20004b9c <pow>
20000266:	0003      	movs	r3, r0
20000268:	000c      	movs	r4, r1
2000026a:	001a      	movs	r2, r3
2000026c:	0023      	movs	r3, r4
2000026e:	0028      	movs	r0, r5
20000270:	0031      	movs	r1, r6
20000272:	f002 fe33 	bl	20002edc <__aeabi_dadd>
20000276:	0003      	movs	r3, r0
20000278:	000c      	movs	r4, r1
2000027a:	0018      	movs	r0, r3
2000027c:	0021      	movs	r1, r4
2000027e:	f004 fe39 	bl	20004ef4 <sqrt>
20000282:	0003      	movs	r3, r0
20000284:	000c      	movs	r4, r1
20000286:	0018      	movs	r0, r3
20000288:	0021      	movs	r1, r4
2000028a:	f003 f937 	bl	200034fc <__aeabi_d2iz>
2000028e:	0003      	movs	r3, r0
20000290:	62fb      	str	r3, [r7, #44]	; 0x2c
	int p2Distance = sqrt(pow(p2Distancex, 2) + pow(p2Distancey, 2));
20000292:	6b78      	ldr	r0, [r7, #52]	; 0x34
20000294:	f003 f966 	bl	20003564 <__aeabi_i2d>
20000298:	2300      	movs	r3, #0
2000029a:	2480      	movs	r4, #128	; 0x80
2000029c:	05e4      	lsls	r4, r4, #23
2000029e:	001a      	movs	r2, r3
200002a0:	0023      	movs	r3, r4
200002a2:	f004 fc7b 	bl	20004b9c <pow>
200002a6:	0005      	movs	r5, r0
200002a8:	000e      	movs	r6, r1
200002aa:	6b38      	ldr	r0, [r7, #48]	; 0x30
200002ac:	f003 f95a 	bl	20003564 <__aeabi_i2d>
200002b0:	2300      	movs	r3, #0
200002b2:	2480      	movs	r4, #128	; 0x80
200002b4:	05e4      	lsls	r4, r4, #23
200002b6:	001a      	movs	r2, r3
200002b8:	0023      	movs	r3, r4
200002ba:	f004 fc6f 	bl	20004b9c <pow>
200002be:	0003      	movs	r3, r0
200002c0:	000c      	movs	r4, r1
200002c2:	001a      	movs	r2, r3
200002c4:	0023      	movs	r3, r4
200002c6:	0028      	movs	r0, r5
200002c8:	0031      	movs	r1, r6
200002ca:	f002 fe07 	bl	20002edc <__aeabi_dadd>
200002ce:	0003      	movs	r3, r0
200002d0:	000c      	movs	r4, r1
200002d2:	0018      	movs	r0, r3
200002d4:	0021      	movs	r1, r4
200002d6:	f004 fe0d 	bl	20004ef4 <sqrt>
200002da:	0003      	movs	r3, r0
200002dc:	000c      	movs	r4, r1
200002de:	0018      	movs	r0, r3
200002e0:	0021      	movs	r1, r4
200002e2:	f003 f90b 	bl	200034fc <__aeabi_d2iz>
200002e6:	0003      	movs	r3, r0
200002e8:	62bb      	str	r3, [r7, #40]	; 0x28
	
	if(p1Distance < p2Distance) {
200002ea:	6afa      	ldr	r2, [r7, #44]	; 0x2c
200002ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
200002ee:	429a      	cmp	r2, r3
200002f0:	db00      	blt.n	200002f4 <chooseAIDirection+0x1ec>
200002f2:	e077      	b.n	200003e4 <chooseAIDirection+0x2dc>
		if(p1Distancey < p1Distancex) {
200002f4:	6bba      	ldr	r2, [r7, #56]	; 0x38
200002f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
200002f8:	429a      	cmp	r2, r3
200002fa:	da39      	bge.n	20000370 <chooseAIDirection+0x268>
			if(p1->posx < o->posx) {
200002fc:	6a3b      	ldr	r3, [r7, #32]
200002fe:	68da      	ldr	r2, [r3, #12]
20000300:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000302:	68db      	ldr	r3, [r3, #12]
20000304:	429a      	cmp	r2, r3
20000306:	da19      	bge.n	2000033c <chooseAIDirection+0x234>
				if(p1->posy < o->posy)
20000308:	6a3b      	ldr	r3, [r7, #32]
2000030a:	691a      	ldr	r2, [r3, #16]
2000030c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000030e:	691b      	ldr	r3, [r3, #16]
20000310:	429a      	cmp	r2, r3
20000312:	da09      	bge.n	20000328 <chooseAIDirection+0x220>
					set_speed_AI_prio(o, set_AI_speed_left, set_AI_speed_up, set_AI_speed_down, set_AI_speed_right);
20000314:	4c71      	ldr	r4, [pc, #452]	; (200004dc <chooseAIDirection+0x3d4>)
20000316:	4a72      	ldr	r2, [pc, #456]	; (200004e0 <chooseAIDirection+0x3d8>)
20000318:	4972      	ldr	r1, [pc, #456]	; (200004e4 <chooseAIDirection+0x3dc>)
2000031a:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000031c:	4b72      	ldr	r3, [pc, #456]	; (200004e8 <chooseAIDirection+0x3e0>)
2000031e:	9300      	str	r3, [sp, #0]
20000320:	0023      	movs	r3, r4
20000322:	f7ff fecb 	bl	200000bc <set_speed_AI_prio>
					set_speed_AI_prio(o, set_AI_speed_down, set_AI_speed_right, set_AI_speed_left, set_AI_speed_up);
			}
		}
	}
	
}
20000326:	e0d4      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_left, set_AI_speed_down, set_AI_speed_up, set_AI_speed_right);
20000328:	4c6d      	ldr	r4, [pc, #436]	; (200004e0 <chooseAIDirection+0x3d8>)
2000032a:	4a6c      	ldr	r2, [pc, #432]	; (200004dc <chooseAIDirection+0x3d4>)
2000032c:	496d      	ldr	r1, [pc, #436]	; (200004e4 <chooseAIDirection+0x3dc>)
2000032e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000330:	4b6d      	ldr	r3, [pc, #436]	; (200004e8 <chooseAIDirection+0x3e0>)
20000332:	9300      	str	r3, [sp, #0]
20000334:	0023      	movs	r3, r4
20000336:	f7ff fec1 	bl	200000bc <set_speed_AI_prio>
}
2000033a:	e0ca      	b.n	200004d2 <chooseAIDirection+0x3ca>
				if(p1->posy < o->posy)
2000033c:	6a3b      	ldr	r3, [r7, #32]
2000033e:	691a      	ldr	r2, [r3, #16]
20000340:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000342:	691b      	ldr	r3, [r3, #16]
20000344:	429a      	cmp	r2, r3
20000346:	da09      	bge.n	2000035c <chooseAIDirection+0x254>
					set_speed_AI_prio(o, set_AI_speed_right, set_AI_speed_up, set_AI_speed_down, set_AI_speed_left);
20000348:	4c64      	ldr	r4, [pc, #400]	; (200004dc <chooseAIDirection+0x3d4>)
2000034a:	4a65      	ldr	r2, [pc, #404]	; (200004e0 <chooseAIDirection+0x3d8>)
2000034c:	4966      	ldr	r1, [pc, #408]	; (200004e8 <chooseAIDirection+0x3e0>)
2000034e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000350:	4b64      	ldr	r3, [pc, #400]	; (200004e4 <chooseAIDirection+0x3dc>)
20000352:	9300      	str	r3, [sp, #0]
20000354:	0023      	movs	r3, r4
20000356:	f7ff feb1 	bl	200000bc <set_speed_AI_prio>
}
2000035a:	e0ba      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_right, set_AI_speed_down, set_AI_speed_up, set_AI_speed_left);
2000035c:	4c60      	ldr	r4, [pc, #384]	; (200004e0 <chooseAIDirection+0x3d8>)
2000035e:	4a5f      	ldr	r2, [pc, #380]	; (200004dc <chooseAIDirection+0x3d4>)
20000360:	4961      	ldr	r1, [pc, #388]	; (200004e8 <chooseAIDirection+0x3e0>)
20000362:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000364:	4b5f      	ldr	r3, [pc, #380]	; (200004e4 <chooseAIDirection+0x3dc>)
20000366:	9300      	str	r3, [sp, #0]
20000368:	0023      	movs	r3, r4
2000036a:	f7ff fea7 	bl	200000bc <set_speed_AI_prio>
}
2000036e:	e0b0      	b.n	200004d2 <chooseAIDirection+0x3ca>
			if(p1->posy < o->posy) {
20000370:	6a3b      	ldr	r3, [r7, #32]
20000372:	691a      	ldr	r2, [r3, #16]
20000374:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000376:	691b      	ldr	r3, [r3, #16]
20000378:	429a      	cmp	r2, r3
2000037a:	da19      	bge.n	200003b0 <chooseAIDirection+0x2a8>
				if(p1->posx < o->posx)
2000037c:	6a3b      	ldr	r3, [r7, #32]
2000037e:	68da      	ldr	r2, [r3, #12]
20000380:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000382:	68db      	ldr	r3, [r3, #12]
20000384:	429a      	cmp	r2, r3
20000386:	da09      	bge.n	2000039c <chooseAIDirection+0x294>
					set_speed_AI_prio(o, set_AI_speed_up, set_AI_speed_left, set_AI_speed_right, set_AI_speed_down);
20000388:	4c57      	ldr	r4, [pc, #348]	; (200004e8 <chooseAIDirection+0x3e0>)
2000038a:	4a56      	ldr	r2, [pc, #344]	; (200004e4 <chooseAIDirection+0x3dc>)
2000038c:	4954      	ldr	r1, [pc, #336]	; (200004e0 <chooseAIDirection+0x3d8>)
2000038e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000390:	4b52      	ldr	r3, [pc, #328]	; (200004dc <chooseAIDirection+0x3d4>)
20000392:	9300      	str	r3, [sp, #0]
20000394:	0023      	movs	r3, r4
20000396:	f7ff fe91 	bl	200000bc <set_speed_AI_prio>
}
2000039a:	e09a      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_up, set_AI_speed_right, set_AI_speed_left, set_AI_speed_down);
2000039c:	4c51      	ldr	r4, [pc, #324]	; (200004e4 <chooseAIDirection+0x3dc>)
2000039e:	4a52      	ldr	r2, [pc, #328]	; (200004e8 <chooseAIDirection+0x3e0>)
200003a0:	494f      	ldr	r1, [pc, #316]	; (200004e0 <chooseAIDirection+0x3d8>)
200003a2:	6a78      	ldr	r0, [r7, #36]	; 0x24
200003a4:	4b4d      	ldr	r3, [pc, #308]	; (200004dc <chooseAIDirection+0x3d4>)
200003a6:	9300      	str	r3, [sp, #0]
200003a8:	0023      	movs	r3, r4
200003aa:	f7ff fe87 	bl	200000bc <set_speed_AI_prio>
}
200003ae:	e090      	b.n	200004d2 <chooseAIDirection+0x3ca>
				if(p1->posx < o->posx)
200003b0:	6a3b      	ldr	r3, [r7, #32]
200003b2:	68da      	ldr	r2, [r3, #12]
200003b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003b6:	68db      	ldr	r3, [r3, #12]
200003b8:	429a      	cmp	r2, r3
200003ba:	da09      	bge.n	200003d0 <chooseAIDirection+0x2c8>
					set_speed_AI_prio(o, set_AI_speed_down, set_AI_speed_left, set_AI_speed_right, set_AI_speed_up);
200003bc:	4c4a      	ldr	r4, [pc, #296]	; (200004e8 <chooseAIDirection+0x3e0>)
200003be:	4a49      	ldr	r2, [pc, #292]	; (200004e4 <chooseAIDirection+0x3dc>)
200003c0:	4946      	ldr	r1, [pc, #280]	; (200004dc <chooseAIDirection+0x3d4>)
200003c2:	6a78      	ldr	r0, [r7, #36]	; 0x24
200003c4:	4b46      	ldr	r3, [pc, #280]	; (200004e0 <chooseAIDirection+0x3d8>)
200003c6:	9300      	str	r3, [sp, #0]
200003c8:	0023      	movs	r3, r4
200003ca:	f7ff fe77 	bl	200000bc <set_speed_AI_prio>
}
200003ce:	e080      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_down, set_AI_speed_right, set_AI_speed_left, set_AI_speed_up);
200003d0:	4c44      	ldr	r4, [pc, #272]	; (200004e4 <chooseAIDirection+0x3dc>)
200003d2:	4a45      	ldr	r2, [pc, #276]	; (200004e8 <chooseAIDirection+0x3e0>)
200003d4:	4941      	ldr	r1, [pc, #260]	; (200004dc <chooseAIDirection+0x3d4>)
200003d6:	6a78      	ldr	r0, [r7, #36]	; 0x24
200003d8:	4b41      	ldr	r3, [pc, #260]	; (200004e0 <chooseAIDirection+0x3d8>)
200003da:	9300      	str	r3, [sp, #0]
200003dc:	0023      	movs	r3, r4
200003de:	f7ff fe6d 	bl	200000bc <set_speed_AI_prio>
}
200003e2:	e076      	b.n	200004d2 <chooseAIDirection+0x3ca>
		if(p2Distancey < p2Distancex) {
200003e4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
200003e6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
200003e8:	429a      	cmp	r2, r3
200003ea:	da39      	bge.n	20000460 <chooseAIDirection+0x358>
			if(p2->posx < o->posx) {
200003ec:	69fb      	ldr	r3, [r7, #28]
200003ee:	68da      	ldr	r2, [r3, #12]
200003f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003f2:	68db      	ldr	r3, [r3, #12]
200003f4:	429a      	cmp	r2, r3
200003f6:	da19      	bge.n	2000042c <chooseAIDirection+0x324>
				if(p2->posy < o->posy)
200003f8:	69fb      	ldr	r3, [r7, #28]
200003fa:	691a      	ldr	r2, [r3, #16]
200003fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003fe:	691b      	ldr	r3, [r3, #16]
20000400:	429a      	cmp	r2, r3
20000402:	da09      	bge.n	20000418 <chooseAIDirection+0x310>
					set_speed_AI_prio(o, set_AI_speed_left, set_AI_speed_up, set_AI_speed_down, set_AI_speed_right);
20000404:	4c35      	ldr	r4, [pc, #212]	; (200004dc <chooseAIDirection+0x3d4>)
20000406:	4a36      	ldr	r2, [pc, #216]	; (200004e0 <chooseAIDirection+0x3d8>)
20000408:	4936      	ldr	r1, [pc, #216]	; (200004e4 <chooseAIDirection+0x3dc>)
2000040a:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000040c:	4b36      	ldr	r3, [pc, #216]	; (200004e8 <chooseAIDirection+0x3e0>)
2000040e:	9300      	str	r3, [sp, #0]
20000410:	0023      	movs	r3, r4
20000412:	f7ff fe53 	bl	200000bc <set_speed_AI_prio>
}
20000416:	e05c      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_left, set_AI_speed_down, set_AI_speed_up, set_AI_speed_right);
20000418:	4c31      	ldr	r4, [pc, #196]	; (200004e0 <chooseAIDirection+0x3d8>)
2000041a:	4a30      	ldr	r2, [pc, #192]	; (200004dc <chooseAIDirection+0x3d4>)
2000041c:	4931      	ldr	r1, [pc, #196]	; (200004e4 <chooseAIDirection+0x3dc>)
2000041e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000420:	4b31      	ldr	r3, [pc, #196]	; (200004e8 <chooseAIDirection+0x3e0>)
20000422:	9300      	str	r3, [sp, #0]
20000424:	0023      	movs	r3, r4
20000426:	f7ff fe49 	bl	200000bc <set_speed_AI_prio>
}
2000042a:	e052      	b.n	200004d2 <chooseAIDirection+0x3ca>
				if(p2->posy < o->posy)
2000042c:	69fb      	ldr	r3, [r7, #28]
2000042e:	691a      	ldr	r2, [r3, #16]
20000430:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000432:	691b      	ldr	r3, [r3, #16]
20000434:	429a      	cmp	r2, r3
20000436:	da09      	bge.n	2000044c <chooseAIDirection+0x344>
					set_speed_AI_prio(o, set_AI_speed_right, set_AI_speed_up, set_AI_speed_down, set_AI_speed_left);
20000438:	4c28      	ldr	r4, [pc, #160]	; (200004dc <chooseAIDirection+0x3d4>)
2000043a:	4a29      	ldr	r2, [pc, #164]	; (200004e0 <chooseAIDirection+0x3d8>)
2000043c:	492a      	ldr	r1, [pc, #168]	; (200004e8 <chooseAIDirection+0x3e0>)
2000043e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000440:	4b28      	ldr	r3, [pc, #160]	; (200004e4 <chooseAIDirection+0x3dc>)
20000442:	9300      	str	r3, [sp, #0]
20000444:	0023      	movs	r3, r4
20000446:	f7ff fe39 	bl	200000bc <set_speed_AI_prio>
}
2000044a:	e042      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_right, set_AI_speed_down, set_AI_speed_up, set_AI_speed_left);
2000044c:	4c24      	ldr	r4, [pc, #144]	; (200004e0 <chooseAIDirection+0x3d8>)
2000044e:	4a23      	ldr	r2, [pc, #140]	; (200004dc <chooseAIDirection+0x3d4>)
20000450:	4925      	ldr	r1, [pc, #148]	; (200004e8 <chooseAIDirection+0x3e0>)
20000452:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000454:	4b23      	ldr	r3, [pc, #140]	; (200004e4 <chooseAIDirection+0x3dc>)
20000456:	9300      	str	r3, [sp, #0]
20000458:	0023      	movs	r3, r4
2000045a:	f7ff fe2f 	bl	200000bc <set_speed_AI_prio>
}
2000045e:	e038      	b.n	200004d2 <chooseAIDirection+0x3ca>
			if(p2->posy < o->posy) {
20000460:	69fb      	ldr	r3, [r7, #28]
20000462:	691a      	ldr	r2, [r3, #16]
20000464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000466:	691b      	ldr	r3, [r3, #16]
20000468:	429a      	cmp	r2, r3
2000046a:	da19      	bge.n	200004a0 <chooseAIDirection+0x398>
				if(p2->posx < o->posx)
2000046c:	69fb      	ldr	r3, [r7, #28]
2000046e:	68da      	ldr	r2, [r3, #12]
20000470:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000472:	68db      	ldr	r3, [r3, #12]
20000474:	429a      	cmp	r2, r3
20000476:	da09      	bge.n	2000048c <chooseAIDirection+0x384>
					set_speed_AI_prio(o, set_AI_speed_up, set_AI_speed_left, set_AI_speed_right, set_AI_speed_down);
20000478:	4c1b      	ldr	r4, [pc, #108]	; (200004e8 <chooseAIDirection+0x3e0>)
2000047a:	4a1a      	ldr	r2, [pc, #104]	; (200004e4 <chooseAIDirection+0x3dc>)
2000047c:	4918      	ldr	r1, [pc, #96]	; (200004e0 <chooseAIDirection+0x3d8>)
2000047e:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000480:	4b16      	ldr	r3, [pc, #88]	; (200004dc <chooseAIDirection+0x3d4>)
20000482:	9300      	str	r3, [sp, #0]
20000484:	0023      	movs	r3, r4
20000486:	f7ff fe19 	bl	200000bc <set_speed_AI_prio>
}
2000048a:	e022      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_up, set_AI_speed_right, set_AI_speed_left, set_AI_speed_down);
2000048c:	4c15      	ldr	r4, [pc, #84]	; (200004e4 <chooseAIDirection+0x3dc>)
2000048e:	4a16      	ldr	r2, [pc, #88]	; (200004e8 <chooseAIDirection+0x3e0>)
20000490:	4913      	ldr	r1, [pc, #76]	; (200004e0 <chooseAIDirection+0x3d8>)
20000492:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000494:	4b11      	ldr	r3, [pc, #68]	; (200004dc <chooseAIDirection+0x3d4>)
20000496:	9300      	str	r3, [sp, #0]
20000498:	0023      	movs	r3, r4
2000049a:	f7ff fe0f 	bl	200000bc <set_speed_AI_prio>
}
2000049e:	e018      	b.n	200004d2 <chooseAIDirection+0x3ca>
				if(p2->posx < o->posx)
200004a0:	69fb      	ldr	r3, [r7, #28]
200004a2:	68da      	ldr	r2, [r3, #12]
200004a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200004a6:	68db      	ldr	r3, [r3, #12]
200004a8:	429a      	cmp	r2, r3
200004aa:	da09      	bge.n	200004c0 <chooseAIDirection+0x3b8>
					set_speed_AI_prio(o, set_AI_speed_down, set_AI_speed_left, set_AI_speed_right, set_AI_speed_up);
200004ac:	4c0e      	ldr	r4, [pc, #56]	; (200004e8 <chooseAIDirection+0x3e0>)
200004ae:	4a0d      	ldr	r2, [pc, #52]	; (200004e4 <chooseAIDirection+0x3dc>)
200004b0:	490a      	ldr	r1, [pc, #40]	; (200004dc <chooseAIDirection+0x3d4>)
200004b2:	6a78      	ldr	r0, [r7, #36]	; 0x24
200004b4:	4b0a      	ldr	r3, [pc, #40]	; (200004e0 <chooseAIDirection+0x3d8>)
200004b6:	9300      	str	r3, [sp, #0]
200004b8:	0023      	movs	r3, r4
200004ba:	f7ff fdff 	bl	200000bc <set_speed_AI_prio>
}
200004be:	e008      	b.n	200004d2 <chooseAIDirection+0x3ca>
					set_speed_AI_prio(o, set_AI_speed_down, set_AI_speed_right, set_AI_speed_left, set_AI_speed_up);
200004c0:	4c08      	ldr	r4, [pc, #32]	; (200004e4 <chooseAIDirection+0x3dc>)
200004c2:	4a09      	ldr	r2, [pc, #36]	; (200004e8 <chooseAIDirection+0x3e0>)
200004c4:	4905      	ldr	r1, [pc, #20]	; (200004dc <chooseAIDirection+0x3d4>)
200004c6:	6a78      	ldr	r0, [r7, #36]	; 0x24
200004c8:	4b05      	ldr	r3, [pc, #20]	; (200004e0 <chooseAIDirection+0x3d8>)
200004ca:	9300      	str	r3, [sp, #0]
200004cc:	0023      	movs	r3, r4
200004ce:	f7ff fdf5 	bl	200000bc <set_speed_AI_prio>
}
200004d2:	46c0      	nop			; (mov r8, r8)
200004d4:	46bd      	mov	sp, r7
200004d6:	b011      	add	sp, #68	; 0x44
200004d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
200004da:	46c0      	nop			; (mov r8, r8)
200004dc:	20000093 	mulcs	r0, r3, r0
200004e0:	20000067 	andcs	r0, r0, r7, rrx
200004e4:	20000011 	andcs	r0, r0, r1, lsl r0
200004e8:	2000003d 	andcs	r0, r0, sp, lsr r0

200004ec <xcollisionWithPlayer>:

static int xcollisionWithPlayer(POBJECT o, POBJECT player) {
200004ec:	b580      	push	{r7, lr}
200004ee:	b08a      	sub	sp, #40	; 0x28
200004f0:	af00      	add	r7, sp, #0
200004f2:	6078      	str	r0, [r7, #4]
200004f4:	6039      	str	r1, [r7, #0]
	int ymin = o->posy;						// upper side coord
200004f6:	687b      	ldr	r3, [r7, #4]
200004f8:	691b      	ldr	r3, [r3, #16]
200004fa:	627b      	str	r3, [r7, #36]	; 0x24
	int ymax = o->posy + o->geo->sizey - 1;	// lower side coord
200004fc:	687b      	ldr	r3, [r7, #4]
200004fe:	691a      	ldr	r2, [r3, #16]
20000500:	687b      	ldr	r3, [r7, #4]
20000502:	681b      	ldr	r3, [r3, #0]
20000504:	689b      	ldr	r3, [r3, #8]
20000506:	18d3      	adds	r3, r2, r3
20000508:	3b01      	subs	r3, #1
2000050a:	623b      	str	r3, [r7, #32]
	int xmin = o->posx;						// left side coord
2000050c:	687b      	ldr	r3, [r7, #4]
2000050e:	68db      	ldr	r3, [r3, #12]
20000510:	61fb      	str	r3, [r7, #28]
	int xmax = o->posx + o->geo->sizex - 1;	// right side coord
20000512:	687b      	ldr	r3, [r7, #4]
20000514:	68da      	ldr	r2, [r3, #12]
20000516:	687b      	ldr	r3, [r7, #4]
20000518:	681b      	ldr	r3, [r3, #0]
2000051a:	685b      	ldr	r3, [r3, #4]
2000051c:	18d3      	adds	r3, r2, r3
2000051e:	3b01      	subs	r3, #1
20000520:	61bb      	str	r3, [r7, #24]
	int pymin = player->posy;
20000522:	683b      	ldr	r3, [r7, #0]
20000524:	691b      	ldr	r3, [r3, #16]
20000526:	617b      	str	r3, [r7, #20]
	int pymax = player->posy + player->geo->sizey - 1;
20000528:	683b      	ldr	r3, [r7, #0]
2000052a:	691a      	ldr	r2, [r3, #16]
2000052c:	683b      	ldr	r3, [r7, #0]
2000052e:	681b      	ldr	r3, [r3, #0]
20000530:	689b      	ldr	r3, [r3, #8]
20000532:	18d3      	adds	r3, r2, r3
20000534:	3b01      	subs	r3, #1
20000536:	613b      	str	r3, [r7, #16]
	int pxmin = player->posx;
20000538:	683b      	ldr	r3, [r7, #0]
2000053a:	68db      	ldr	r3, [r3, #12]
2000053c:	60fb      	str	r3, [r7, #12]
	int pxmax = player->posx + player->geo->sizex - 1;
2000053e:	683b      	ldr	r3, [r7, #0]
20000540:	68da      	ldr	r2, [r3, #12]
20000542:	683b      	ldr	r3, [r7, #0]
20000544:	681b      	ldr	r3, [r3, #0]
20000546:	685b      	ldr	r3, [r3, #4]
20000548:	18d3      	adds	r3, r2, r3
2000054a:	3b01      	subs	r3, #1
2000054c:	60bb      	str	r3, [r7, #8]
	
	if( (xmin-1 == pxmax || xmax+1 == pxmin) && (ymin <= pymax && ymax >= pymin) ) {
2000054e:	69fb      	ldr	r3, [r7, #28]
20000550:	1e5a      	subs	r2, r3, #1
20000552:	68bb      	ldr	r3, [r7, #8]
20000554:	429a      	cmp	r2, r3
20000556:	d004      	beq.n	20000562 <xcollisionWithPlayer+0x76>
20000558:	69bb      	ldr	r3, [r7, #24]
2000055a:	1c5a      	adds	r2, r3, #1
2000055c:	68fb      	ldr	r3, [r7, #12]
2000055e:	429a      	cmp	r2, r3
20000560:	d109      	bne.n	20000576 <xcollisionWithPlayer+0x8a>
20000562:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20000564:	693b      	ldr	r3, [r7, #16]
20000566:	429a      	cmp	r2, r3
20000568:	dc05      	bgt.n	20000576 <xcollisionWithPlayer+0x8a>
2000056a:	6a3a      	ldr	r2, [r7, #32]
2000056c:	697b      	ldr	r3, [r7, #20]
2000056e:	429a      	cmp	r2, r3
20000570:	db01      	blt.n	20000576 <xcollisionWithPlayer+0x8a>
		return 1;
20000572:	2301      	movs	r3, #1
20000574:	e000      	b.n	20000578 <xcollisionWithPlayer+0x8c>
	}
	return 0;
20000576:	2300      	movs	r3, #0
}
20000578:	0018      	movs	r0, r3
2000057a:	46bd      	mov	sp, r7
2000057c:	b00a      	add	sp, #40	; 0x28
2000057e:	bd80      	pop	{r7, pc}

20000580 <ycollisionWithPlayer>:

static int ycollisionWithPlayer(POBJECT o, POBJECT player) {
20000580:	b580      	push	{r7, lr}
20000582:	b08a      	sub	sp, #40	; 0x28
20000584:	af00      	add	r7, sp, #0
20000586:	6078      	str	r0, [r7, #4]
20000588:	6039      	str	r1, [r7, #0]
	int ymin = o->posy;						// upper side coord
2000058a:	687b      	ldr	r3, [r7, #4]
2000058c:	691b      	ldr	r3, [r3, #16]
2000058e:	627b      	str	r3, [r7, #36]	; 0x24
	int ymax = o->posy + o->geo->sizey - 1;	// lower side coord
20000590:	687b      	ldr	r3, [r7, #4]
20000592:	691a      	ldr	r2, [r3, #16]
20000594:	687b      	ldr	r3, [r7, #4]
20000596:	681b      	ldr	r3, [r3, #0]
20000598:	689b      	ldr	r3, [r3, #8]
2000059a:	18d3      	adds	r3, r2, r3
2000059c:	3b01      	subs	r3, #1
2000059e:	623b      	str	r3, [r7, #32]
	int xmin = o->posx;						// left side coord
200005a0:	687b      	ldr	r3, [r7, #4]
200005a2:	68db      	ldr	r3, [r3, #12]
200005a4:	61fb      	str	r3, [r7, #28]
	int xmax = o->posx + o->geo->sizex - 1;	// right side coord
200005a6:	687b      	ldr	r3, [r7, #4]
200005a8:	68da      	ldr	r2, [r3, #12]
200005aa:	687b      	ldr	r3, [r7, #4]
200005ac:	681b      	ldr	r3, [r3, #0]
200005ae:	685b      	ldr	r3, [r3, #4]
200005b0:	18d3      	adds	r3, r2, r3
200005b2:	3b01      	subs	r3, #1
200005b4:	61bb      	str	r3, [r7, #24]
	int pymin = player->posy;
200005b6:	683b      	ldr	r3, [r7, #0]
200005b8:	691b      	ldr	r3, [r3, #16]
200005ba:	617b      	str	r3, [r7, #20]
	int pymax = player->posy + player->geo->sizey - 1;
200005bc:	683b      	ldr	r3, [r7, #0]
200005be:	691a      	ldr	r2, [r3, #16]
200005c0:	683b      	ldr	r3, [r7, #0]
200005c2:	681b      	ldr	r3, [r3, #0]
200005c4:	689b      	ldr	r3, [r3, #8]
200005c6:	18d3      	adds	r3, r2, r3
200005c8:	3b01      	subs	r3, #1
200005ca:	613b      	str	r3, [r7, #16]
	int pxmin = player->posx;
200005cc:	683b      	ldr	r3, [r7, #0]
200005ce:	68db      	ldr	r3, [r3, #12]
200005d0:	60fb      	str	r3, [r7, #12]
	int pxmax = player->posx + player->geo->sizex - 1;
200005d2:	683b      	ldr	r3, [r7, #0]
200005d4:	68da      	ldr	r2, [r3, #12]
200005d6:	683b      	ldr	r3, [r7, #0]
200005d8:	681b      	ldr	r3, [r3, #0]
200005da:	685b      	ldr	r3, [r3, #4]
200005dc:	18d3      	adds	r3, r2, r3
200005de:	3b01      	subs	r3, #1
200005e0:	60bb      	str	r3, [r7, #8]
	
	if( (ymin-1 == pymax || ymax+1 == pymin) && (xmin <= pxmax && xmax >= pxmin) ) {
200005e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200005e4:	1e5a      	subs	r2, r3, #1
200005e6:	693b      	ldr	r3, [r7, #16]
200005e8:	429a      	cmp	r2, r3
200005ea:	d004      	beq.n	200005f6 <ycollisionWithPlayer+0x76>
200005ec:	6a3b      	ldr	r3, [r7, #32]
200005ee:	1c5a      	adds	r2, r3, #1
200005f0:	697b      	ldr	r3, [r7, #20]
200005f2:	429a      	cmp	r2, r3
200005f4:	d109      	bne.n	2000060a <ycollisionWithPlayer+0x8a>
200005f6:	69fa      	ldr	r2, [r7, #28]
200005f8:	68bb      	ldr	r3, [r7, #8]
200005fa:	429a      	cmp	r2, r3
200005fc:	dc05      	bgt.n	2000060a <ycollisionWithPlayer+0x8a>
200005fe:	69ba      	ldr	r2, [r7, #24]
20000600:	68fb      	ldr	r3, [r7, #12]
20000602:	429a      	cmp	r2, r3
20000604:	db01      	blt.n	2000060a <ycollisionWithPlayer+0x8a>
		return 1;
20000606:	2301      	movs	r3, #1
20000608:	e000      	b.n	2000060c <ycollisionWithPlayer+0x8c>
	}
	return 0;
2000060a:	2300      	movs	r3, #0
}
2000060c:	0018      	movs	r0, r3
2000060e:	46bd      	mov	sp, r7
20000610:	b00a      	add	sp, #40	; 0x28
20000612:	bd80      	pop	{r7, pc}

20000614 <move_AI>:

void move_AI(POBJECT o) {
20000614:	b590      	push	{r4, r7, lr}
20000616:	b089      	sub	sp, #36	; 0x24
20000618:	af00      	add	r7, sp, #0
2000061a:	6078      	str	r0, [r7, #4]
	POBJECT p1 = &player1Object;		// p1 and p2 for catching check
2000061c:	4b55      	ldr	r3, [pc, #340]	; (20000774 <move_AI+0x160>)
2000061e:	617b      	str	r3, [r7, #20]
	POBJECT p2 = &player2Object;
20000620:	4b55      	ldr	r3, [pc, #340]	; (20000778 <move_AI+0x164>)
20000622:	613b      	str	r3, [r7, #16]
	int xsteps = abs(o->dirx);
20000624:	687b      	ldr	r3, [r7, #4]
20000626:	685b      	ldr	r3, [r3, #4]
20000628:	17da      	asrs	r2, r3, #31
2000062a:	189b      	adds	r3, r3, r2
2000062c:	4053      	eors	r3, r2
2000062e:	60fb      	str	r3, [r7, #12]
	int ysteps = abs(o->diry);
20000630:	687b      	ldr	r3, [r7, #4]
20000632:	689b      	ldr	r3, [r3, #8]
20000634:	17da      	asrs	r2, r3, #31
20000636:	189b      	adds	r3, r3, r2
20000638:	4053      	eors	r3, r2
2000063a:	60bb      	str	r3, [r7, #8]
	for(int i = 0; i < xsteps; i++)
2000063c:	2300      	movs	r3, #0
2000063e:	61fb      	str	r3, [r7, #28]
20000640:	e044      	b.n	200006cc <move_AI+0xb8>
	{
		if (xcheckCollison(o)) {
20000642:	687b      	ldr	r3, [r7, #4]
20000644:	0018      	movs	r0, r3
20000646:	f001 fe77 	bl	20002338 <xcheckCollison>
2000064a:	1e03      	subs	r3, r0, #0
2000064c:	d028      	beq.n	200006a0 <move_AI+0x8c>
			if(xcollisionWithPlayer(o, p1)) {
2000064e:	697a      	ldr	r2, [r7, #20]
20000650:	687b      	ldr	r3, [r7, #4]
20000652:	0011      	movs	r1, r2
20000654:	0018      	movs	r0, r3
20000656:	f7ff ff49 	bl	200004ec <xcollisionWithPlayer>
2000065a:	1e03      	subs	r3, r0, #0
2000065c:	d007      	beq.n	2000066e <move_AI+0x5a>
				player1Eaten = 1;
2000065e:	4b47      	ldr	r3, [pc, #284]	; (2000077c <move_AI+0x168>)
20000660:	2201      	movs	r2, #1
20000662:	601a      	str	r2, [r3, #0]
				p1->geo->numpoints=0;		// hide player
20000664:	697b      	ldr	r3, [r7, #20]
20000666:	681b      	ldr	r3, [r3, #0]
20000668:	2200      	movs	r2, #0
2000066a:	601a      	str	r2, [r3, #0]
2000066c:	e018      	b.n	200006a0 <move_AI+0x8c>
			} else if(xcollisionWithPlayer(o, p2)) {
2000066e:	693a      	ldr	r2, [r7, #16]
20000670:	687b      	ldr	r3, [r7, #4]
20000672:	0011      	movs	r1, r2
20000674:	0018      	movs	r0, r3
20000676:	f7ff ff39 	bl	200004ec <xcollisionWithPlayer>
2000067a:	1e03      	subs	r3, r0, #0
2000067c:	d007      	beq.n	2000068e <move_AI+0x7a>
				player2Eaten = 1;
2000067e:	4b40      	ldr	r3, [pc, #256]	; (20000780 <move_AI+0x16c>)
20000680:	2201      	movs	r2, #1
20000682:	601a      	str	r2, [r3, #0]
				p2->geo->numpoints=0;		// hide player
20000684:	693b      	ldr	r3, [r7, #16]
20000686:	681b      	ldr	r3, [r3, #0]
20000688:	2200      	movs	r2, #0
2000068a:	601a      	str	r2, [r3, #0]
2000068c:	e008      	b.n	200006a0 <move_AI+0x8c>
			} else {
				o->set_speed(o, 0, o->diry);
2000068e:	687b      	ldr	r3, [r7, #4]
20000690:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20000692:	687b      	ldr	r3, [r7, #4]
20000694:	689a      	ldr	r2, [r3, #8]
20000696:	687b      	ldr	r3, [r7, #4]
20000698:	2100      	movs	r1, #0
2000069a:	0018      	movs	r0, r3
2000069c:	47a0      	blx	r4
				break;
2000069e:	e019      	b.n	200006d4 <move_AI+0xc0>
			}
		}
		
		if (o->dirx > 0)
200006a0:	687b      	ldr	r3, [r7, #4]
200006a2:	685b      	ldr	r3, [r3, #4]
200006a4:	2b00      	cmp	r3, #0
200006a6:	dd05      	ble.n	200006b4 <move_AI+0xa0>
			o->posx++;
200006a8:	687b      	ldr	r3, [r7, #4]
200006aa:	68db      	ldr	r3, [r3, #12]
200006ac:	1c5a      	adds	r2, r3, #1
200006ae:	687b      	ldr	r3, [r7, #4]
200006b0:	60da      	str	r2, [r3, #12]
200006b2:	e008      	b.n	200006c6 <move_AI+0xb2>
		else if (o->dirx < 0)
200006b4:	687b      	ldr	r3, [r7, #4]
200006b6:	685b      	ldr	r3, [r3, #4]
200006b8:	2b00      	cmp	r3, #0
200006ba:	da04      	bge.n	200006c6 <move_AI+0xb2>
			o->posx--;
200006bc:	687b      	ldr	r3, [r7, #4]
200006be:	68db      	ldr	r3, [r3, #12]
200006c0:	1e5a      	subs	r2, r3, #1
200006c2:	687b      	ldr	r3, [r7, #4]
200006c4:	60da      	str	r2, [r3, #12]
	for(int i = 0; i < xsteps; i++)
200006c6:	69fb      	ldr	r3, [r7, #28]
200006c8:	3301      	adds	r3, #1
200006ca:	61fb      	str	r3, [r7, #28]
200006cc:	69fa      	ldr	r2, [r7, #28]
200006ce:	68fb      	ldr	r3, [r7, #12]
200006d0:	429a      	cmp	r2, r3
200006d2:	dbb6      	blt.n	20000642 <move_AI+0x2e>
	}
	
	for(int i = 0; i < ysteps; i++)
200006d4:	2300      	movs	r3, #0
200006d6:	61bb      	str	r3, [r7, #24]
200006d8:	e044      	b.n	20000764 <move_AI+0x150>
	{
		if (ycheckCollison(o)) {
200006da:	687b      	ldr	r3, [r7, #4]
200006dc:	0018      	movs	r0, r3
200006de:	f001 fe81 	bl	200023e4 <ycheckCollison>
200006e2:	1e03      	subs	r3, r0, #0
200006e4:	d028      	beq.n	20000738 <move_AI+0x124>
			if(ycollisionWithPlayer(o, p1)) {
200006e6:	697a      	ldr	r2, [r7, #20]
200006e8:	687b      	ldr	r3, [r7, #4]
200006ea:	0011      	movs	r1, r2
200006ec:	0018      	movs	r0, r3
200006ee:	f7ff ff47 	bl	20000580 <ycollisionWithPlayer>
200006f2:	1e03      	subs	r3, r0, #0
200006f4:	d007      	beq.n	20000706 <move_AI+0xf2>
				player1Eaten = 1;
200006f6:	4b21      	ldr	r3, [pc, #132]	; (2000077c <move_AI+0x168>)
200006f8:	2201      	movs	r2, #1
200006fa:	601a      	str	r2, [r3, #0]
				p1->geo->numpoints=0;		// hide player
200006fc:	697b      	ldr	r3, [r7, #20]
200006fe:	681b      	ldr	r3, [r3, #0]
20000700:	2200      	movs	r2, #0
20000702:	601a      	str	r2, [r3, #0]
20000704:	e018      	b.n	20000738 <move_AI+0x124>
			} else if(ycollisionWithPlayer(o, p2)) {
20000706:	693a      	ldr	r2, [r7, #16]
20000708:	687b      	ldr	r3, [r7, #4]
2000070a:	0011      	movs	r1, r2
2000070c:	0018      	movs	r0, r3
2000070e:	f7ff ff37 	bl	20000580 <ycollisionWithPlayer>
20000712:	1e03      	subs	r3, r0, #0
20000714:	d007      	beq.n	20000726 <move_AI+0x112>
				player2Eaten = 1;
20000716:	4b1a      	ldr	r3, [pc, #104]	; (20000780 <move_AI+0x16c>)
20000718:	2201      	movs	r2, #1
2000071a:	601a      	str	r2, [r3, #0]
				p2->geo->numpoints=0;		// hide player
2000071c:	693b      	ldr	r3, [r7, #16]
2000071e:	681b      	ldr	r3, [r3, #0]
20000720:	2200      	movs	r2, #0
20000722:	601a      	str	r2, [r3, #0]
20000724:	e008      	b.n	20000738 <move_AI+0x124>
			} else {
				o->set_speed(o, o->dirx, 0);
20000726:	687b      	ldr	r3, [r7, #4]
20000728:	6a9c      	ldr	r4, [r3, #40]	; 0x28
2000072a:	687b      	ldr	r3, [r7, #4]
2000072c:	6859      	ldr	r1, [r3, #4]
2000072e:	687b      	ldr	r3, [r7, #4]
20000730:	2200      	movs	r2, #0
20000732:	0018      	movs	r0, r3
20000734:	47a0      	blx	r4
				break;
20000736:	e019      	b.n	2000076c <move_AI+0x158>
			}
		}
		
		if (o->diry > 0)
20000738:	687b      	ldr	r3, [r7, #4]
2000073a:	689b      	ldr	r3, [r3, #8]
2000073c:	2b00      	cmp	r3, #0
2000073e:	dd05      	ble.n	2000074c <move_AI+0x138>
			o->posy++;
20000740:	687b      	ldr	r3, [r7, #4]
20000742:	691b      	ldr	r3, [r3, #16]
20000744:	1c5a      	adds	r2, r3, #1
20000746:	687b      	ldr	r3, [r7, #4]
20000748:	611a      	str	r2, [r3, #16]
2000074a:	e008      	b.n	2000075e <move_AI+0x14a>
		else if (o->diry < 0)
2000074c:	687b      	ldr	r3, [r7, #4]
2000074e:	689b      	ldr	r3, [r3, #8]
20000750:	2b00      	cmp	r3, #0
20000752:	da04      	bge.n	2000075e <move_AI+0x14a>
			o->posy--;
20000754:	687b      	ldr	r3, [r7, #4]
20000756:	691b      	ldr	r3, [r3, #16]
20000758:	1e5a      	subs	r2, r3, #1
2000075a:	687b      	ldr	r3, [r7, #4]
2000075c:	611a      	str	r2, [r3, #16]
	for(int i = 0; i < ysteps; i++)
2000075e:	69bb      	ldr	r3, [r7, #24]
20000760:	3301      	adds	r3, #1
20000762:	61bb      	str	r3, [r7, #24]
20000764:	69ba      	ldr	r2, [r7, #24]
20000766:	68bb      	ldr	r3, [r7, #8]
20000768:	429a      	cmp	r2, r3
2000076a:	dbb6      	blt.n	200006da <move_AI+0xc6>
	}
	
2000076c:	46c0      	nop			; (mov r8, r8)
2000076e:	46bd      	mov	sp, r7
20000770:	b009      	add	sp, #36	; 0x24
20000772:	bd90      	pop	{r4, r7, pc}
20000774:	20006e48 	andcs	r6, r0, r8, asr #28
20000778:	20006e74 	andcs	r6, r0, r4, ror lr
2000077c:	20005e3c 	andcs	r5, r0, ip, lsr lr
20000780:	20005e40 	andcs	r5, r0, r0, asr #28

20000784 <ascii_ctrl_bit_set>:
#define B_E				0x40	// Enable
#define B_SELECT		0x04	// 0 Graphics, 1 ASCII
#define B_RW			0x02	// 0 Write, 1 Read
#define B_RS			0x01	// 0 Command, 1 Data

static void ascii_ctrl_bit_set(unsigned char x) {
20000784:	b580      	push	{r7, lr}
20000786:	b084      	sub	sp, #16
20000788:	af00      	add	r7, sp, #0
2000078a:	0002      	movs	r2, r0
2000078c:	1dfb      	adds	r3, r7, #7
2000078e:	701a      	strb	r2, [r3, #0]
	unsigned char c;
	c = GPIO_E.odrLow;
20000790:	4a0c      	ldr	r2, [pc, #48]	; (200007c4 <ascii_ctrl_bit_set+0x40>)
20000792:	230f      	movs	r3, #15
20000794:	18fb      	adds	r3, r7, r3
20000796:	7d12      	ldrb	r2, [r2, #20]
20000798:	701a      	strb	r2, [r3, #0]
	c |= ( B_SELECT | x );
2000079a:	1dfa      	adds	r2, r7, #7
2000079c:	230f      	movs	r3, #15
2000079e:	18fb      	adds	r3, r7, r3
200007a0:	7812      	ldrb	r2, [r2, #0]
200007a2:	781b      	ldrb	r3, [r3, #0]
200007a4:	4313      	orrs	r3, r2
200007a6:	b2da      	uxtb	r2, r3
200007a8:	230f      	movs	r3, #15
200007aa:	18fb      	adds	r3, r7, r3
200007ac:	2104      	movs	r1, #4
200007ae:	430a      	orrs	r2, r1
200007b0:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = c;
200007b2:	4a04      	ldr	r2, [pc, #16]	; (200007c4 <ascii_ctrl_bit_set+0x40>)
200007b4:	230f      	movs	r3, #15
200007b6:	18fb      	adds	r3, r7, r3
200007b8:	781b      	ldrb	r3, [r3, #0]
200007ba:	7513      	strb	r3, [r2, #20]
}
200007bc:	46c0      	nop			; (mov r8, r8)
200007be:	46bd      	mov	sp, r7
200007c0:	b004      	add	sp, #16
200007c2:	bd80      	pop	{r7, pc}
200007c4:	40021000 	andmi	r1, r2, r0

200007c8 <ascii_ctrl_bit_clear>:

static void ascii_ctrl_bit_clear(unsigned char x) {
200007c8:	b580      	push	{r7, lr}
200007ca:	b084      	sub	sp, #16
200007cc:	af00      	add	r7, sp, #0
200007ce:	0002      	movs	r2, r0
200007d0:	1dfb      	adds	r3, r7, #7
200007d2:	701a      	strb	r2, [r3, #0]
	unsigned char c;
	c = GPIO_E.odrLow;
200007d4:	4a0f      	ldr	r2, [pc, #60]	; (20000814 <ascii_ctrl_bit_clear+0x4c>)
200007d6:	230f      	movs	r3, #15
200007d8:	18fb      	adds	r3, r7, r3
200007da:	7d12      	ldrb	r2, [r2, #20]
200007dc:	701a      	strb	r2, [r3, #0]
	c = B_SELECT | ( c & ~x );
200007de:	1dfb      	adds	r3, r7, #7
200007e0:	781b      	ldrb	r3, [r3, #0]
200007e2:	b25b      	sxtb	r3, r3
200007e4:	43db      	mvns	r3, r3
200007e6:	b25b      	sxtb	r3, r3
200007e8:	220f      	movs	r2, #15
200007ea:	18ba      	adds	r2, r7, r2
200007ec:	7812      	ldrb	r2, [r2, #0]
200007ee:	b252      	sxtb	r2, r2
200007f0:	4013      	ands	r3, r2
200007f2:	b25b      	sxtb	r3, r3
200007f4:	2204      	movs	r2, #4
200007f6:	4313      	orrs	r3, r2
200007f8:	b25a      	sxtb	r2, r3
200007fa:	230f      	movs	r3, #15
200007fc:	18fb      	adds	r3, r7, r3
200007fe:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = c;
20000800:	4a04      	ldr	r2, [pc, #16]	; (20000814 <ascii_ctrl_bit_clear+0x4c>)
20000802:	230f      	movs	r3, #15
20000804:	18fb      	adds	r3, r7, r3
20000806:	781b      	ldrb	r3, [r3, #0]
20000808:	7513      	strb	r3, [r2, #20]
}
2000080a:	46c0      	nop			; (mov r8, r8)
2000080c:	46bd      	mov	sp, r7
2000080e:	b004      	add	sp, #16
20000810:	bd80      	pop	{r7, pc}
20000812:	46c0      	nop			; (mov r8, r8)
20000814:	40021000 	andmi	r1, r2, r0

20000818 <ascii_write_controller>:

static void ascii_write_controller(unsigned char byte) {
20000818:	b580      	push	{r7, lr}
2000081a:	b082      	sub	sp, #8
2000081c:	af00      	add	r7, sp, #0
2000081e:	0002      	movs	r2, r0
20000820:	1dfb      	adds	r3, r7, #7
20000822:	701a      	strb	r2, [r3, #0]
	delay_250ns();
20000824:	f000 f952 	bl	20000acc <delay_250ns>
	ascii_ctrl_bit_set(B_E);
20000828:	2040      	movs	r0, #64	; 0x40
2000082a:	f7ff ffab 	bl	20000784 <ascii_ctrl_bit_set>
	GPIO_E.odrHigh = byte;
2000082e:	4a06      	ldr	r2, [pc, #24]	; (20000848 <ascii_write_controller+0x30>)
20000830:	1dfb      	adds	r3, r7, #7
20000832:	781b      	ldrb	r3, [r3, #0]
20000834:	7553      	strb	r3, [r2, #21]
	delay_250ns();
20000836:	f000 f949 	bl	20000acc <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
2000083a:	2040      	movs	r0, #64	; 0x40
2000083c:	f7ff ffc4 	bl	200007c8 <ascii_ctrl_bit_clear>
}
20000840:	46c0      	nop			; (mov r8, r8)
20000842:	46bd      	mov	sp, r7
20000844:	b002      	add	sp, #8
20000846:	bd80      	pop	{r7, pc}
20000848:	40021000 	andmi	r1, r2, r0

2000084c <ascii_read_controller>:

static unsigned char ascii_read_controller(void) {
2000084c:	b580      	push	{r7, lr}
2000084e:	b082      	sub	sp, #8
20000850:	af00      	add	r7, sp, #0
	unsigned char rv;
	ascii_ctrl_bit_set(B_E);
20000852:	2040      	movs	r0, #64	; 0x40
20000854:	f7ff ff96 	bl	20000784 <ascii_ctrl_bit_set>
	delay_250ns(); //min 360ns
20000858:	f000 f938 	bl	20000acc <delay_250ns>
	delay_250ns();
2000085c:	f000 f936 	bl	20000acc <delay_250ns>
	rv = GPIO_E.idrHigh;
20000860:	4a08      	ldr	r2, [pc, #32]	; (20000884 <ascii_read_controller+0x38>)
20000862:	1dfb      	adds	r3, r7, #7
20000864:	7c52      	ldrb	r2, [r2, #17]
20000866:	701a      	strb	r2, [r3, #0]
	
	*((unsigned char *) 0x40020C15) = rv;
20000868:	4a07      	ldr	r2, [pc, #28]	; (20000888 <ascii_read_controller+0x3c>)
2000086a:	1dfb      	adds	r3, r7, #7
2000086c:	781b      	ldrb	r3, [r3, #0]
2000086e:	7013      	strb	r3, [r2, #0]
	
	ascii_ctrl_bit_clear(B_E);
20000870:	2040      	movs	r0, #64	; 0x40
20000872:	f7ff ffa9 	bl	200007c8 <ascii_ctrl_bit_clear>
	return rv;
20000876:	1dfb      	adds	r3, r7, #7
20000878:	781b      	ldrb	r3, [r3, #0]
}
2000087a:	0018      	movs	r0, r3
2000087c:	46bd      	mov	sp, r7
2000087e:	b002      	add	sp, #8
20000880:	bd80      	pop	{r7, pc}
20000882:	46c0      	nop			; (mov r8, r8)
20000884:	40021000 	andmi	r1, r2, r0
20000888:	40020c15 	andmi	r0, r2, r5, lsl ip

2000088c <ascii_write_cmd>:

static void ascii_write_cmd(unsigned char command) {
2000088c:	b580      	push	{r7, lr}
2000088e:	b082      	sub	sp, #8
20000890:	af00      	add	r7, sp, #0
20000892:	0002      	movs	r2, r0
20000894:	1dfb      	adds	r3, r7, #7
20000896:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20000898:	2001      	movs	r0, #1
2000089a:	f7ff ff95 	bl	200007c8 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
2000089e:	2002      	movs	r0, #2
200008a0:	f7ff ff92 	bl	200007c8 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
200008a4:	1dfb      	adds	r3, r7, #7
200008a6:	781b      	ldrb	r3, [r3, #0]
200008a8:	0018      	movs	r0, r3
200008aa:	f7ff ffb5 	bl	20000818 <ascii_write_controller>
}
200008ae:	46c0      	nop			; (mov r8, r8)
200008b0:	46bd      	mov	sp, r7
200008b2:	b002      	add	sp, #8
200008b4:	bd80      	pop	{r7, pc}

200008b6 <ascii_write_data>:

static void ascii_write_data(unsigned char data) {
200008b6:	b580      	push	{r7, lr}
200008b8:	b082      	sub	sp, #8
200008ba:	af00      	add	r7, sp, #0
200008bc:	0002      	movs	r2, r0
200008be:	1dfb      	adds	r3, r7, #7
200008c0:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200008c2:	2001      	movs	r0, #1
200008c4:	f7ff ff5e 	bl	20000784 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
200008c8:	2002      	movs	r0, #2
200008ca:	f7ff ff7d 	bl	200007c8 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
200008ce:	1dfb      	adds	r3, r7, #7
200008d0:	781b      	ldrb	r3, [r3, #0]
200008d2:	0018      	movs	r0, r3
200008d4:	f7ff ffa0 	bl	20000818 <ascii_write_controller>
}
200008d8:	46c0      	nop			; (mov r8, r8)
200008da:	46bd      	mov	sp, r7
200008dc:	b002      	add	sp, #8
200008de:	bd80      	pop	{r7, pc}

200008e0 <ascii_read_status>:

static unsigned char ascii_read_status(void) {
200008e0:	b590      	push	{r4, r7, lr}
200008e2:	b083      	sub	sp, #12
200008e4:	af00      	add	r7, sp, #0
	GPIO_E.moder = 0x00005555;
200008e6:	4b0b      	ldr	r3, [pc, #44]	; (20000914 <ascii_read_status+0x34>)
200008e8:	4a0b      	ldr	r2, [pc, #44]	; (20000918 <ascii_read_status+0x38>)
200008ea:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200008ec:	2001      	movs	r0, #1
200008ee:	f7ff ff6b 	bl	200007c8 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
200008f2:	2002      	movs	r0, #2
200008f4:	f7ff ff46 	bl	20000784 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
200008f8:	1dfc      	adds	r4, r7, #7
200008fa:	f7ff ffa7 	bl	2000084c <ascii_read_controller>
200008fe:	0003      	movs	r3, r0
20000900:	7023      	strb	r3, [r4, #0]
	GPIO_E.moder = 0x55555555;
20000902:	4b04      	ldr	r3, [pc, #16]	; (20000914 <ascii_read_status+0x34>)
20000904:	4a05      	ldr	r2, [pc, #20]	; (2000091c <ascii_read_status+0x3c>)
20000906:	601a      	str	r2, [r3, #0]
	return rv;
20000908:	1dfb      	adds	r3, r7, #7
2000090a:	781b      	ldrb	r3, [r3, #0]
}
2000090c:	0018      	movs	r0, r3
2000090e:	46bd      	mov	sp, r7
20000910:	b003      	add	sp, #12
20000912:	bd90      	pop	{r4, r7, pc}
20000914:	40021000 	andmi	r1, r2, r0
20000918:	00005555 	andeq	r5, r0, r5, asr r5
2000091c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000920 <ascii_read_data>:

static unsigned char ascii_read_data(void) {
20000920:	b590      	push	{r4, r7, lr}
20000922:	b083      	sub	sp, #12
20000924:	af00      	add	r7, sp, #0
	GPIO_E.moder = 0x00005555;
20000926:	4b0b      	ldr	r3, [pc, #44]	; (20000954 <ascii_read_data+0x34>)
20000928:	4a0b      	ldr	r2, [pc, #44]	; (20000958 <ascii_read_data+0x38>)
2000092a:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000092c:	2001      	movs	r0, #1
2000092e:	f7ff ff29 	bl	20000784 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20000932:	2002      	movs	r0, #2
20000934:	f7ff ff26 	bl	20000784 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
20000938:	1dfc      	adds	r4, r7, #7
2000093a:	f7ff ff87 	bl	2000084c <ascii_read_controller>
2000093e:	0003      	movs	r3, r0
20000940:	7023      	strb	r3, [r4, #0]

	GPIO_E.moder = 0x55555555;
20000942:	4b04      	ldr	r3, [pc, #16]	; (20000954 <ascii_read_data+0x34>)
20000944:	4a05      	ldr	r2, [pc, #20]	; (2000095c <ascii_read_data+0x3c>)
20000946:	601a      	str	r2, [r3, #0]
	return rv;
20000948:	1dfb      	adds	r3, r7, #7
2000094a:	781b      	ldrb	r3, [r3, #0]
}
2000094c:	0018      	movs	r0, r3
2000094e:	46bd      	mov	sp, r7
20000950:	b003      	add	sp, #12
20000952:	bd90      	pop	{r4, r7, pc}
20000954:	40021000 	andmi	r1, r2, r0
20000958:	00005555 	andeq	r5, r0, r5, asr r5
2000095c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000960 <ascii_command>:

static void ascii_command(unsigned char command, int usdelay) {
20000960:	b580      	push	{r7, lr}
20000962:	b082      	sub	sp, #8
20000964:	af00      	add	r7, sp, #0
20000966:	0002      	movs	r2, r0
20000968:	6039      	str	r1, [r7, #0]
2000096a:	1dfb      	adds	r3, r7, #7
2000096c:	701a      	strb	r2, [r3, #0]
	*((unsigned char *) 0x40020C14) = 0x03;
2000096e:	4b0f      	ldr	r3, [pc, #60]	; (200009ac <ascii_command+0x4c>)
20000970:	2203      	movs	r2, #3
20000972:	701a      	strb	r2, [r3, #0]
	while ( (ascii_read_status() & 0x80) == 0x80)
20000974:	46c0      	nop			; (mov r8, r8)
20000976:	f7ff ffb3 	bl	200008e0 <ascii_read_status>
2000097a:	0003      	movs	r3, r0
2000097c:	001a      	movs	r2, r3
2000097e:	2380      	movs	r3, #128	; 0x80
20000980:	4013      	ands	r3, r2
20000982:	2b80      	cmp	r3, #128	; 0x80
20000984:	d0f7      	beq.n	20000976 <ascii_command+0x16>
	{}
	*((unsigned char *) 0x40020C14) = 0x0F;
20000986:	4b09      	ldr	r3, [pc, #36]	; (200009ac <ascii_command+0x4c>)
20000988:	220f      	movs	r2, #15
2000098a:	701a      	strb	r2, [r3, #0]
	delay_micro(8);
2000098c:	2008      	movs	r0, #8
2000098e:	f000 f8e1 	bl	20000b54 <delay_micro>
	ascii_write_cmd(command);
20000992:	1dfb      	adds	r3, r7, #7
20000994:	781b      	ldrb	r3, [r3, #0]
20000996:	0018      	movs	r0, r3
20000998:	f7ff ff78 	bl	2000088c <ascii_write_cmd>
	delay_micro(usdelay);
2000099c:	683b      	ldr	r3, [r7, #0]
2000099e:	0018      	movs	r0, r3
200009a0:	f000 f8d8 	bl	20000b54 <delay_micro>
}
200009a4:	46c0      	nop			; (mov r8, r8)
200009a6:	46bd      	mov	sp, r7
200009a8:	b002      	add	sp, #8
200009aa:	bd80      	pop	{r7, pc}
200009ac:	40020c14 	andmi	r0, r2, r4, lsl ip

200009b0 <init_ascii>:

void init_ascii(void) {
200009b0:	b580      	push	{r7, lr}
200009b2:	af00      	add	r7, sp, #0
	ascii_command(0x38, 39);	//Function Set
200009b4:	2127      	movs	r1, #39	; 0x27
200009b6:	2038      	movs	r0, #56	; 0x38
200009b8:	f7ff ffd2 	bl	20000960 <ascii_command>
	ascii_command(0x0E, 39);	//Display Control
200009bc:	2127      	movs	r1, #39	; 0x27
200009be:	200e      	movs	r0, #14
200009c0:	f7ff ffce 	bl	20000960 <ascii_command>
	ascii_command(0x01, 1530);	//Clear Display
200009c4:	4b05      	ldr	r3, [pc, #20]	; (200009dc <init_ascii+0x2c>)
200009c6:	0019      	movs	r1, r3
200009c8:	2001      	movs	r0, #1
200009ca:	f7ff ffc9 	bl	20000960 <ascii_command>
	ascii_command(0x06, 39);	//Entry Mode Set
200009ce:	2127      	movs	r1, #39	; 0x27
200009d0:	2006      	movs	r0, #6
200009d2:	f7ff ffc5 	bl	20000960 <ascii_command>
}
200009d6:	46c0      	nop			; (mov r8, r8)
200009d8:	46bd      	mov	sp, r7
200009da:	bd80      	pop	{r7, pc}
200009dc:	000005fa 	strdeq	r0, [r0], -sl

200009e0 <ascii_gotoxy>:

static void ascii_gotoxy(int x, int y) {
200009e0:	b580      	push	{r7, lr}
200009e2:	b084      	sub	sp, #16
200009e4:	af00      	add	r7, sp, #0
200009e6:	6078      	str	r0, [r7, #4]
200009e8:	6039      	str	r1, [r7, #0]
	int address = x-1;
200009ea:	687b      	ldr	r3, [r7, #4]
200009ec:	3b01      	subs	r3, #1
200009ee:	60fb      	str	r3, [r7, #12]
	if (y == 2) {
200009f0:	683b      	ldr	r3, [r7, #0]
200009f2:	2b02      	cmp	r3, #2
200009f4:	d102      	bne.n	200009fc <ascii_gotoxy+0x1c>
		address += 0x40;
200009f6:	68fb      	ldr	r3, [r7, #12]
200009f8:	3340      	adds	r3, #64	; 0x40
200009fa:	60fb      	str	r3, [r7, #12]
	}
	ascii_command(0x80 | address, 39);
200009fc:	68fb      	ldr	r3, [r7, #12]
200009fe:	b25b      	sxtb	r3, r3
20000a00:	2280      	movs	r2, #128	; 0x80
20000a02:	4252      	negs	r2, r2
20000a04:	4313      	orrs	r3, r2
20000a06:	b25b      	sxtb	r3, r3
20000a08:	b2db      	uxtb	r3, r3
20000a0a:	2127      	movs	r1, #39	; 0x27
20000a0c:	0018      	movs	r0, r3
20000a0e:	f7ff ffa7 	bl	20000960 <ascii_command>
}
20000a12:	46c0      	nop			; (mov r8, r8)
20000a14:	46bd      	mov	sp, r7
20000a16:	b004      	add	sp, #16
20000a18:	bd80      	pop	{r7, pc}

20000a1a <ascii_write_char>:

static void ascii_write_char(unsigned char c) {
20000a1a:	b580      	push	{r7, lr}
20000a1c:	b082      	sub	sp, #8
20000a1e:	af00      	add	r7, sp, #0
20000a20:	0002      	movs	r2, r0
20000a22:	1dfb      	adds	r3, r7, #7
20000a24:	701a      	strb	r2, [r3, #0]
	while ( (ascii_read_status() & 0x80) == 0x80)
20000a26:	46c0      	nop			; (mov r8, r8)
20000a28:	f7ff ff5a 	bl	200008e0 <ascii_read_status>
20000a2c:	0003      	movs	r3, r0
20000a2e:	001a      	movs	r2, r3
20000a30:	2380      	movs	r3, #128	; 0x80
20000a32:	4013      	ands	r3, r2
20000a34:	2b80      	cmp	r3, #128	; 0x80
20000a36:	d0f7      	beq.n	20000a28 <ascii_write_char+0xe>
	{}
	delay_micro(8);
20000a38:	2008      	movs	r0, #8
20000a3a:	f000 f88b 	bl	20000b54 <delay_micro>
	ascii_write_data(c);
20000a3e:	1dfb      	adds	r3, r7, #7
20000a40:	781b      	ldrb	r3, [r3, #0]
20000a42:	0018      	movs	r0, r3
20000a44:	f7ff ff37 	bl	200008b6 <ascii_write_data>
	delay_micro(43);
20000a48:	202b      	movs	r0, #43	; 0x2b
20000a4a:	f000 f883 	bl	20000b54 <delay_micro>
}
20000a4e:	46c0      	nop			; (mov r8, r8)
20000a50:	46bd      	mov	sp, r7
20000a52:	b002      	add	sp, #8
20000a54:	bd80      	pop	{r7, pc}

20000a56 <ascii_clear>:

void ascii_clear(void) {
20000a56:	b580      	push	{r7, lr}
20000a58:	af00      	add	r7, sp, #0
	ascii_command(0x01, 1530);	//Clear Display
20000a5a:	4b04      	ldr	r3, [pc, #16]	; (20000a6c <ascii_clear+0x16>)
20000a5c:	0019      	movs	r1, r3
20000a5e:	2001      	movs	r0, #1
20000a60:	f7ff ff7e 	bl	20000960 <ascii_command>
}
20000a64:	46c0      	nop			; (mov r8, r8)
20000a66:	46bd      	mov	sp, r7
20000a68:	bd80      	pop	{r7, pc}
20000a6a:	46c0      	nop			; (mov r8, r8)
20000a6c:	000005fa 	strdeq	r0, [r0], -sl

20000a70 <ascii_write>:

void ascii_write(char string1[], char string2[]) {
20000a70:	b580      	push	{r7, lr}
20000a72:	b084      	sub	sp, #16
20000a74:	af00      	add	r7, sp, #0
20000a76:	6078      	str	r0, [r7, #4]
20000a78:	6039      	str	r1, [r7, #0]
	char *s;
	
	ascii_gotoxy(1,1);
20000a7a:	2101      	movs	r1, #1
20000a7c:	2001      	movs	r0, #1
20000a7e:	f7ff ffaf 	bl	200009e0 <ascii_gotoxy>
	s = string1;
20000a82:	687b      	ldr	r3, [r7, #4]
20000a84:	60fb      	str	r3, [r7, #12]
	while(*s) {
20000a86:	e006      	b.n	20000a96 <ascii_write+0x26>
		ascii_write_char(*s++);
20000a88:	68fb      	ldr	r3, [r7, #12]
20000a8a:	1c5a      	adds	r2, r3, #1
20000a8c:	60fa      	str	r2, [r7, #12]
20000a8e:	781b      	ldrb	r3, [r3, #0]
20000a90:	0018      	movs	r0, r3
20000a92:	f7ff ffc2 	bl	20000a1a <ascii_write_char>
	while(*s) {
20000a96:	68fb      	ldr	r3, [r7, #12]
20000a98:	781b      	ldrb	r3, [r3, #0]
20000a9a:	2b00      	cmp	r3, #0
20000a9c:	d1f4      	bne.n	20000a88 <ascii_write+0x18>
	}
	ascii_gotoxy(1,2);
20000a9e:	2102      	movs	r1, #2
20000aa0:	2001      	movs	r0, #1
20000aa2:	f7ff ff9d 	bl	200009e0 <ascii_gotoxy>
	s = string2;
20000aa6:	683b      	ldr	r3, [r7, #0]
20000aa8:	60fb      	str	r3, [r7, #12]
	while(*s){
20000aaa:	e006      	b.n	20000aba <ascii_write+0x4a>
		ascii_write_char(*s++);
20000aac:	68fb      	ldr	r3, [r7, #12]
20000aae:	1c5a      	adds	r2, r3, #1
20000ab0:	60fa      	str	r2, [r7, #12]
20000ab2:	781b      	ldrb	r3, [r3, #0]
20000ab4:	0018      	movs	r0, r3
20000ab6:	f7ff ffb0 	bl	20000a1a <ascii_write_char>
	while(*s){
20000aba:	68fb      	ldr	r3, [r7, #12]
20000abc:	781b      	ldrb	r3, [r3, #0]
20000abe:	2b00      	cmp	r3, #0
20000ac0:	d1f4      	bne.n	20000aac <ascii_write+0x3c>
	}
20000ac2:	46c0      	nop			; (mov r8, r8)
20000ac4:	46bd      	mov	sp, r7
20000ac6:	b004      	add	sp, #16
20000ac8:	bd80      	pop	{r7, pc}
20000aca:	46c0      	nop			; (mov r8, r8)

20000acc <delay_250ns>:
#define STK				0xE000E010
#define STK_CTRL		((volatile unsigned int *)		(STK))
#define STK_LOAD		((volatile unsigned int *)		(STK+0x4))
#define STK_VAL			((volatile unsigned int *)		(STK+0x8))

void delay_250ns(void) {
20000acc:	b580      	push	{r7, lr}
20000ace:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
20000ad0:	4b0c      	ldr	r3, [pc, #48]	; (20000b04 <delay_250ns+0x38>)
20000ad2:	2200      	movs	r2, #0
20000ad4:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
20000ad6:	4b0c      	ldr	r3, [pc, #48]	; (20000b08 <delay_250ns+0x3c>)
20000ad8:	2229      	movs	r2, #41	; 0x29
20000ada:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000adc:	4b0b      	ldr	r3, [pc, #44]	; (20000b0c <delay_250ns+0x40>)
20000ade:	2200      	movs	r2, #0
20000ae0:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000ae2:	4b08      	ldr	r3, [pc, #32]	; (20000b04 <delay_250ns+0x38>)
20000ae4:	2205      	movs	r2, #5
20000ae6:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 )
20000ae8:	46c0      	nop			; (mov r8, r8)
20000aea:	4b06      	ldr	r3, [pc, #24]	; (20000b04 <delay_250ns+0x38>)
20000aec:	681a      	ldr	r2, [r3, #0]
20000aee:	2380      	movs	r3, #128	; 0x80
20000af0:	025b      	lsls	r3, r3, #9
20000af2:	4013      	ands	r3, r2
20000af4:	d0f9      	beq.n	20000aea <delay_250ns+0x1e>
	{}
	*STK_CTRL = 0;
20000af6:	4b03      	ldr	r3, [pc, #12]	; (20000b04 <delay_250ns+0x38>)
20000af8:	2200      	movs	r2, #0
20000afa:	601a      	str	r2, [r3, #0]
}
20000afc:	46c0      	nop			; (mov r8, r8)
20000afe:	46bd      	mov	sp, r7
20000b00:	bd80      	pop	{r7, pc}
20000b02:	46c0      	nop			; (mov r8, r8)
20000b04:	e000e010 	and	lr, r0, r0, lsl r0
20000b08:	e000e014 	and	lr, r0, r4, lsl r0
20000b0c:	e000e018 	and	lr, r0, r8, lsl r0

20000b10 <delay_500ns>:

void delay_500ns(void) {
20000b10:	b580      	push	{r7, lr}
20000b12:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
20000b14:	4b0c      	ldr	r3, [pc, #48]	; (20000b48 <delay_500ns+0x38>)
20000b16:	2200      	movs	r2, #0
20000b18:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/2) -1 );
20000b1a:	4b0c      	ldr	r3, [pc, #48]	; (20000b4c <delay_500ns+0x3c>)
20000b1c:	2253      	movs	r2, #83	; 0x53
20000b1e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000b20:	4b0b      	ldr	r3, [pc, #44]	; (20000b50 <delay_500ns+0x40>)
20000b22:	2200      	movs	r2, #0
20000b24:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000b26:	4b08      	ldr	r3, [pc, #32]	; (20000b48 <delay_500ns+0x38>)
20000b28:	2205      	movs	r2, #5
20000b2a:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 )
20000b2c:	46c0      	nop			; (mov r8, r8)
20000b2e:	4b06      	ldr	r3, [pc, #24]	; (20000b48 <delay_500ns+0x38>)
20000b30:	681a      	ldr	r2, [r3, #0]
20000b32:	2380      	movs	r3, #128	; 0x80
20000b34:	025b      	lsls	r3, r3, #9
20000b36:	4013      	ands	r3, r2
20000b38:	d0f9      	beq.n	20000b2e <delay_500ns+0x1e>
	{}
	*STK_CTRL = 0;
20000b3a:	4b03      	ldr	r3, [pc, #12]	; (20000b48 <delay_500ns+0x38>)
20000b3c:	2200      	movs	r2, #0
20000b3e:	601a      	str	r2, [r3, #0]
}
20000b40:	46c0      	nop			; (mov r8, r8)
20000b42:	46bd      	mov	sp, r7
20000b44:	bd80      	pop	{r7, pc}
20000b46:	46c0      	nop			; (mov r8, r8)
20000b48:	e000e010 	and	lr, r0, r0, lsl r0
20000b4c:	e000e014 	and	lr, r0, r4, lsl r0
20000b50:	e000e018 	and	lr, r0, r8, lsl r0

20000b54 <delay_micro>:

void delay_micro(unsigned int us) {
20000b54:	b580      	push	{r7, lr}
20000b56:	b082      	sub	sp, #8
20000b58:	af00      	add	r7, sp, #0
20000b5a:	6078      	str	r0, [r7, #4]
	while(us--) {
20000b5c:	e007      	b.n	20000b6e <delay_micro+0x1a>
		delay_250ns();
20000b5e:	f7ff ffb5 	bl	20000acc <delay_250ns>
		delay_250ns();
20000b62:	f7ff ffb3 	bl	20000acc <delay_250ns>
		delay_250ns();
20000b66:	f7ff ffb1 	bl	20000acc <delay_250ns>
		delay_250ns();
20000b6a:	f7ff ffaf 	bl	20000acc <delay_250ns>
	while(us--) {
20000b6e:	687b      	ldr	r3, [r7, #4]
20000b70:	1e5a      	subs	r2, r3, #1
20000b72:	607a      	str	r2, [r7, #4]
20000b74:	2b00      	cmp	r3, #0
20000b76:	d1f2      	bne.n	20000b5e <delay_micro+0xa>
	}
}
20000b78:	46c0      	nop			; (mov r8, r8)
20000b7a:	46bd      	mov	sp, r7
20000b7c:	b002      	add	sp, #8
20000b7e:	bd80      	pop	{r7, pc}

20000b80 <delay_milli>:

void delay_milli(unsigned int ms) {
20000b80:	b580      	push	{r7, lr}
20000b82:	b082      	sub	sp, #8
20000b84:	af00      	add	r7, sp, #0
20000b86:	6078      	str	r0, [r7, #4]
	while(ms--)
20000b88:	e004      	b.n	20000b94 <delay_milli+0x14>
	{
#ifdef SIMULATOR
		delay_micro(2);
#else
		delay_micro(1000);
20000b8a:	23fa      	movs	r3, #250	; 0xfa
20000b8c:	009b      	lsls	r3, r3, #2
20000b8e:	0018      	movs	r0, r3
20000b90:	f7ff ffe0 	bl	20000b54 <delay_micro>
	while(ms--)
20000b94:	687b      	ldr	r3, [r7, #4]
20000b96:	1e5a      	subs	r2, r3, #1
20000b98:	607a      	str	r2, [r7, #4]
20000b9a:	2b00      	cmp	r3, #0
20000b9c:	d1f5      	bne.n	20000b8a <delay_milli+0xa>
#endif
	}
20000b9e:	46c0      	nop			; (mov r8, r8)
20000ba0:	46bd      	mov	sp, r7
20000ba2:	b002      	add	sp, #8
20000ba4:	bd80      	pop	{r7, pc}
20000ba6:	46c0      	nop			; (mov r8, r8)

20000ba8 <graphic_ctrl_bit_set>:
#define LCD_SET_PAGE	0xB8	// Set vertical coordinate
#define LCD_DISP_START	0xC0	// Start address
#define LCD_BUSY		0x80	// Read busy status

//Controlregister
static void graphic_ctrl_bit_set(uint8_t x) {
20000ba8:	b580      	push	{r7, lr}
20000baa:	b084      	sub	sp, #16
20000bac:	af00      	add	r7, sp, #0
20000bae:	0002      	movs	r2, r0
20000bb0:	1dfb      	adds	r3, r7, #7
20000bb2:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = GPIO_E.odrLow;
20000bb4:	4a12      	ldr	r2, [pc, #72]	; (20000c00 <graphic_ctrl_bit_set+0x58>)
20000bb6:	230f      	movs	r3, #15
20000bb8:	18fb      	adds	r3, r7, r3
20000bba:	7d12      	ldrb	r2, [r2, #20]
20000bbc:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT;
20000bbe:	230f      	movs	r3, #15
20000bc0:	18fb      	adds	r3, r7, r3
20000bc2:	220f      	movs	r2, #15
20000bc4:	18ba      	adds	r2, r7, r2
20000bc6:	7812      	ldrb	r2, [r2, #0]
20000bc8:	2104      	movs	r1, #4
20000bca:	438a      	bics	r2, r1
20000bcc:	701a      	strb	r2, [r3, #0]
	c |= ( ~B_SELECT & x );
20000bce:	1dfb      	adds	r3, r7, #7
20000bd0:	781b      	ldrb	r3, [r3, #0]
20000bd2:	b25b      	sxtb	r3, r3
20000bd4:	2204      	movs	r2, #4
20000bd6:	4393      	bics	r3, r2
20000bd8:	b25a      	sxtb	r2, r3
20000bda:	230f      	movs	r3, #15
20000bdc:	18fb      	adds	r3, r7, r3
20000bde:	781b      	ldrb	r3, [r3, #0]
20000be0:	b25b      	sxtb	r3, r3
20000be2:	4313      	orrs	r3, r2
20000be4:	b25a      	sxtb	r2, r3
20000be6:	230f      	movs	r3, #15
20000be8:	18fb      	adds	r3, r7, r3
20000bea:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = c;
20000bec:	4a04      	ldr	r2, [pc, #16]	; (20000c00 <graphic_ctrl_bit_set+0x58>)
20000bee:	230f      	movs	r3, #15
20000bf0:	18fb      	adds	r3, r7, r3
20000bf2:	781b      	ldrb	r3, [r3, #0]
20000bf4:	7513      	strb	r3, [r2, #20]
}
20000bf6:	46c0      	nop			; (mov r8, r8)
20000bf8:	46bd      	mov	sp, r7
20000bfa:	b004      	add	sp, #16
20000bfc:	bd80      	pop	{r7, pc}
20000bfe:	46c0      	nop			; (mov r8, r8)
20000c00:	40021000 	andmi	r1, r2, r0

20000c04 <graphic_ctrl_bit_clear>:

static void graphic_ctrl_bit_clear(uint8_t x) {
20000c04:	b580      	push	{r7, lr}
20000c06:	b084      	sub	sp, #16
20000c08:	af00      	add	r7, sp, #0
20000c0a:	0002      	movs	r2, r0
20000c0c:	1dfb      	adds	r3, r7, #7
20000c0e:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = GPIO_E.odrLow;
20000c10:	4a11      	ldr	r2, [pc, #68]	; (20000c58 <graphic_ctrl_bit_clear+0x54>)
20000c12:	230f      	movs	r3, #15
20000c14:	18fb      	adds	r3, r7, r3
20000c16:	7d12      	ldrb	r2, [r2, #20]
20000c18:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT;
20000c1a:	230f      	movs	r3, #15
20000c1c:	18fb      	adds	r3, r7, r3
20000c1e:	220f      	movs	r2, #15
20000c20:	18ba      	adds	r2, r7, r2
20000c22:	7812      	ldrb	r2, [r2, #0]
20000c24:	2104      	movs	r1, #4
20000c26:	438a      	bics	r2, r1
20000c28:	701a      	strb	r2, [r3, #0]
	c &= ~x;
20000c2a:	1dfb      	adds	r3, r7, #7
20000c2c:	781b      	ldrb	r3, [r3, #0]
20000c2e:	b25b      	sxtb	r3, r3
20000c30:	43db      	mvns	r3, r3
20000c32:	b25b      	sxtb	r3, r3
20000c34:	220f      	movs	r2, #15
20000c36:	18ba      	adds	r2, r7, r2
20000c38:	7812      	ldrb	r2, [r2, #0]
20000c3a:	b252      	sxtb	r2, r2
20000c3c:	4013      	ands	r3, r2
20000c3e:	b25a      	sxtb	r2, r3
20000c40:	230f      	movs	r3, #15
20000c42:	18fb      	adds	r3, r7, r3
20000c44:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = c;
20000c46:	4a04      	ldr	r2, [pc, #16]	; (20000c58 <graphic_ctrl_bit_clear+0x54>)
20000c48:	230f      	movs	r3, #15
20000c4a:	18fb      	adds	r3, r7, r3
20000c4c:	781b      	ldrb	r3, [r3, #0]
20000c4e:	7513      	strb	r3, [r2, #20]
}
20000c50:	46c0      	nop			; (mov r8, r8)
20000c52:	46bd      	mov	sp, r7
20000c54:	b004      	add	sp, #16
20000c56:	bd80      	pop	{r7, pc}
20000c58:	40021000 	andmi	r1, r2, r0

20000c5c <select_controller>:

//Select chip
static void select_controller(uint8_t controller) {
20000c5c:	b580      	push	{r7, lr}
20000c5e:	b082      	sub	sp, #8
20000c60:	af00      	add	r7, sp, #0
20000c62:	0002      	movs	r2, r0
20000c64:	1dfb      	adds	r3, r7, #7
20000c66:	701a      	strb	r2, [r3, #0]
	switch(controller) {
20000c68:	1dfb      	adds	r3, r7, #7
20000c6a:	781b      	ldrb	r3, [r3, #0]
20000c6c:	2b08      	cmp	r3, #8
20000c6e:	d00f      	beq.n	20000c90 <select_controller+0x34>
20000c70:	dc02      	bgt.n	20000c78 <select_controller+0x1c>
20000c72:	2b00      	cmp	r3, #0
20000c74:	d005      	beq.n	20000c82 <select_controller+0x26>
		case (B_CS1 | B_CS2):
			graphic_ctrl_bit_set(B_CS1);
			graphic_ctrl_bit_set(B_CS2);
			break;
	}
}
20000c76:	e020      	b.n	20000cba <select_controller+0x5e>
	switch(controller) {
20000c78:	2b10      	cmp	r3, #16
20000c7a:	d010      	beq.n	20000c9e <select_controller+0x42>
20000c7c:	2b18      	cmp	r3, #24
20000c7e:	d015      	beq.n	20000cac <select_controller+0x50>
}
20000c80:	e01b      	b.n	20000cba <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1);
20000c82:	2008      	movs	r0, #8
20000c84:	f7ff ffbe 	bl	20000c04 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_clear(B_CS2);
20000c88:	2010      	movs	r0, #16
20000c8a:	f7ff ffbb 	bl	20000c04 <graphic_ctrl_bit_clear>
			break;
20000c8e:	e014      	b.n	20000cba <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1);
20000c90:	2008      	movs	r0, #8
20000c92:	f7ff ff89 	bl	20000ba8 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_clear(B_CS2);
20000c96:	2010      	movs	r0, #16
20000c98:	f7ff ffb4 	bl	20000c04 <graphic_ctrl_bit_clear>
			break;
20000c9c:	e00d      	b.n	20000cba <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1);
20000c9e:	2008      	movs	r0, #8
20000ca0:	f7ff ffb0 	bl	20000c04 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_set(B_CS2);
20000ca4:	2010      	movs	r0, #16
20000ca6:	f7ff ff7f 	bl	20000ba8 <graphic_ctrl_bit_set>
			break;
20000caa:	e006      	b.n	20000cba <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1);
20000cac:	2008      	movs	r0, #8
20000cae:	f7ff ff7b 	bl	20000ba8 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_set(B_CS2);
20000cb2:	2010      	movs	r0, #16
20000cb4:	f7ff ff78 	bl	20000ba8 <graphic_ctrl_bit_set>
			break;
20000cb8:	46c0      	nop			; (mov r8, r8)
}
20000cba:	46c0      	nop			; (mov r8, r8)
20000cbc:	46bd      	mov	sp, r7
20000cbe:	b002      	add	sp, #8
20000cc0:	bd80      	pop	{r7, pc}

20000cc2 <graphic_wait_ready>:


static void graphic_wait_ready(void) {
20000cc2:	b580      	push	{r7, lr}
20000cc4:	b082      	sub	sp, #8
20000cc6:	af00      	add	r7, sp, #0
	
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
20000cc8:	2040      	movs	r0, #64	; 0x40
20000cca:	f7ff ff9b 	bl	20000c04 <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x00005555;		// 15-8 input, 7-0 output
20000cce:	4b16      	ldr	r3, [pc, #88]	; (20000d28 <graphic_wait_ready+0x66>)
20000cd0:	4a16      	ldr	r2, [pc, #88]	; (20000d2c <graphic_wait_ready+0x6a>)
20000cd2:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20000cd4:	2001      	movs	r0, #1
20000cd6:	f7ff ff95 	bl	20000c04 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW);
20000cda:	2002      	movs	r0, #2
20000cdc:	f7ff ff64 	bl	20000ba8 <graphic_ctrl_bit_set>
	delay_500ns();
20000ce0:	f7ff ff16 	bl	20000b10 <delay_500ns>
	
	while (1) {
		graphic_ctrl_bit_set(B_E);
20000ce4:	2040      	movs	r0, #64	; 0x40
20000ce6:	f7ff ff5f 	bl	20000ba8 <graphic_ctrl_bit_set>
		delay_500ns();
20000cea:	f7ff ff11 	bl	20000b10 <delay_500ns>
		c = GPIO_E.idrHigh & LCD_BUSY;
20000cee:	4b0e      	ldr	r3, [pc, #56]	; (20000d28 <graphic_wait_ready+0x66>)
20000cf0:	7c5b      	ldrb	r3, [r3, #17]
20000cf2:	b2da      	uxtb	r2, r3
20000cf4:	1dfb      	adds	r3, r7, #7
20000cf6:	217f      	movs	r1, #127	; 0x7f
20000cf8:	438a      	bics	r2, r1
20000cfa:	701a      	strb	r2, [r3, #0]
		graphic_ctrl_bit_clear(B_E);
20000cfc:	2040      	movs	r0, #64	; 0x40
20000cfe:	f7ff ff81 	bl	20000c04 <graphic_ctrl_bit_clear>
		delay_500ns();
20000d02:	f7ff ff05 	bl	20000b10 <delay_500ns>
		if (c == 0) break;
20000d06:	1dfb      	adds	r3, r7, #7
20000d08:	781b      	ldrb	r3, [r3, #0]
20000d0a:	2b00      	cmp	r3, #0
20000d0c:	d000      	beq.n	20000d10 <graphic_wait_ready+0x4e>
		graphic_ctrl_bit_set(B_E);
20000d0e:	e7e9      	b.n	20000ce4 <graphic_wait_ready+0x22>
		if (c == 0) break;
20000d10:	46c0      	nop			; (mov r8, r8)
	}
	
	graphic_ctrl_bit_set(B_E);												//?
20000d12:	2040      	movs	r0, #64	; 0x40
20000d14:	f7ff ff48 	bl	20000ba8 <graphic_ctrl_bit_set>
	GPIO_E.moder = 0x55555555;		// 15-0 output
20000d18:	4b03      	ldr	r3, [pc, #12]	; (20000d28 <graphic_wait_ready+0x66>)
20000d1a:	4a05      	ldr	r2, [pc, #20]	; (20000d30 <graphic_wait_ready+0x6e>)
20000d1c:	601a      	str	r2, [r3, #0]
}
20000d1e:	46c0      	nop			; (mov r8, r8)
20000d20:	46bd      	mov	sp, r7
20000d22:	b002      	add	sp, #8
20000d24:	bd80      	pop	{r7, pc}
20000d26:	46c0      	nop			; (mov r8, r8)
20000d28:	40021000 	andmi	r1, r2, r0
20000d2c:	00005555 	andeq	r5, r0, r5, asr r5
20000d30:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000d34 <graphic_read>:

//Read
static uint8_t graphic_read(uint8_t controller) {
20000d34:	b580      	push	{r7, lr}
20000d36:	b084      	sub	sp, #16
20000d38:	af00      	add	r7, sp, #0
20000d3a:	0002      	movs	r2, r0
20000d3c:	1dfb      	adds	r3, r7, #7
20000d3e:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
20000d40:	2040      	movs	r0, #64	; 0x40
20000d42:	f7ff ff5f 	bl	20000c04 <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x00005555;		// 15-8 input, 7-0 output
20000d46:	4b1e      	ldr	r3, [pc, #120]	; (20000dc0 <graphic_read+0x8c>)
20000d48:	4a1e      	ldr	r2, [pc, #120]	; (20000dc4 <graphic_read+0x90>)
20000d4a:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
20000d4c:	2001      	movs	r0, #1
20000d4e:	f7ff ff2b 	bl	20000ba8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW);
20000d52:	2002      	movs	r0, #2
20000d54:	f7ff ff28 	bl	20000ba8 <graphic_ctrl_bit_set>
	select_controller(controller);
20000d58:	1dfb      	adds	r3, r7, #7
20000d5a:	781b      	ldrb	r3, [r3, #0]
20000d5c:	0018      	movs	r0, r3
20000d5e:	f7ff ff7d 	bl	20000c5c <select_controller>
	delay_500ns();
20000d62:	f7ff fed5 	bl	20000b10 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20000d66:	2040      	movs	r0, #64	; 0x40
20000d68:	f7ff ff1e 	bl	20000ba8 <graphic_ctrl_bit_set>
	delay_500ns();
20000d6c:	f7ff fed0 	bl	20000b10 <delay_500ns>
	c = GPIO_E.idrHigh;
20000d70:	4a13      	ldr	r2, [pc, #76]	; (20000dc0 <graphic_read+0x8c>)
20000d72:	230f      	movs	r3, #15
20000d74:	18fb      	adds	r3, r7, r3
20000d76:	7c52      	ldrb	r2, [r2, #17]
20000d78:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000d7a:	2040      	movs	r0, #64	; 0x40
20000d7c:	f7ff ff42 	bl	20000c04 <graphic_ctrl_bit_clear>
	GPIO_E.moder = 0x55555555;		// 15-0 output
20000d80:	4b0f      	ldr	r3, [pc, #60]	; (20000dc0 <graphic_read+0x8c>)
20000d82:	4a11      	ldr	r2, [pc, #68]	; (20000dc8 <graphic_read+0x94>)
20000d84:	601a      	str	r2, [r3, #0]
	
	if (controller & B_CS1) {
20000d86:	1dfb      	adds	r3, r7, #7
20000d88:	781b      	ldrb	r3, [r3, #0]
20000d8a:	2208      	movs	r2, #8
20000d8c:	4013      	ands	r3, r2
20000d8e:	d005      	beq.n	20000d9c <graphic_read+0x68>
		select_controller(B_CS1);
20000d90:	2008      	movs	r0, #8
20000d92:	f7ff ff63 	bl	20000c5c <select_controller>
		graphic_wait_ready();
20000d96:	f7ff ff94 	bl	20000cc2 <graphic_wait_ready>
20000d9a:	e009      	b.n	20000db0 <graphic_read+0x7c>
	} else if (controller & B_CS2) {
20000d9c:	1dfb      	adds	r3, r7, #7
20000d9e:	781b      	ldrb	r3, [r3, #0]
20000da0:	2210      	movs	r2, #16
20000da2:	4013      	ands	r3, r2
20000da4:	d004      	beq.n	20000db0 <graphic_read+0x7c>
		select_controller(B_CS2);
20000da6:	2010      	movs	r0, #16
20000da8:	f7ff ff58 	bl	20000c5c <select_controller>
		graphic_wait_ready();
20000dac:	f7ff ff89 	bl	20000cc2 <graphic_wait_ready>
	}
	return c;
20000db0:	230f      	movs	r3, #15
20000db2:	18fb      	adds	r3, r7, r3
20000db4:	781b      	ldrb	r3, [r3, #0]
}
20000db6:	0018      	movs	r0, r3
20000db8:	46bd      	mov	sp, r7
20000dba:	b004      	add	sp, #16
20000dbc:	bd80      	pop	{r7, pc}
20000dbe:	46c0      	nop			; (mov r8, r8)
20000dc0:	40021000 	andmi	r1, r2, r0
20000dc4:	00005555 	andeq	r5, r0, r5, asr r5
20000dc8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000dcc <graphic_read_data>:

static uint8_t graphic_read_data(uint8_t controller) {
20000dcc:	b580      	push	{r7, lr}
20000dce:	b082      	sub	sp, #8
20000dd0:	af00      	add	r7, sp, #0
20000dd2:	0002      	movs	r2, r0
20000dd4:	1dfb      	adds	r3, r7, #7
20000dd6:	701a      	strb	r2, [r3, #0]
	graphic_read(controller);
20000dd8:	1dfb      	adds	r3, r7, #7
20000dda:	781b      	ldrb	r3, [r3, #0]
20000ddc:	0018      	movs	r0, r3
20000dde:	f7ff ffa9 	bl	20000d34 <graphic_read>
	return graphic_read(controller);
20000de2:	1dfb      	adds	r3, r7, #7
20000de4:	781b      	ldrb	r3, [r3, #0]
20000de6:	0018      	movs	r0, r3
20000de8:	f7ff ffa4 	bl	20000d34 <graphic_read>
20000dec:	0003      	movs	r3, r0
}
20000dee:	0018      	movs	r0, r3
20000df0:	46bd      	mov	sp, r7
20000df2:	b002      	add	sp, #8
20000df4:	bd80      	pop	{r7, pc}

20000df6 <graphic_write>:

//Write
static void graphic_write(uint8_t value, uint8_t controller) {
20000df6:	b580      	push	{r7, lr}
20000df8:	b082      	sub	sp, #8
20000dfa:	af00      	add	r7, sp, #0
20000dfc:	0002      	movs	r2, r0
20000dfe:	1dfb      	adds	r3, r7, #7
20000e00:	701a      	strb	r2, [r3, #0]
20000e02:	1dbb      	adds	r3, r7, #6
20000e04:	1c0a      	adds	r2, r1, #0
20000e06:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrHigh = value;
20000e08:	4a19      	ldr	r2, [pc, #100]	; (20000e70 <graphic_write+0x7a>)
20000e0a:	1dfb      	adds	r3, r7, #7
20000e0c:	781b      	ldrb	r3, [r3, #0]
20000e0e:	7553      	strb	r3, [r2, #21]
	select_controller(controller);
20000e10:	1dbb      	adds	r3, r7, #6
20000e12:	781b      	ldrb	r3, [r3, #0]
20000e14:	0018      	movs	r0, r3
20000e16:	f7ff ff21 	bl	20000c5c <select_controller>
	delay_500ns();
20000e1a:	f7ff fe79 	bl	20000b10 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20000e1e:	2040      	movs	r0, #64	; 0x40
20000e20:	f7ff fec2 	bl	20000ba8 <graphic_ctrl_bit_set>
	delay_500ns();
20000e24:	f7ff fe74 	bl	20000b10 <delay_500ns>
	graphic_ctrl_bit_clear( B_E );
20000e28:	2040      	movs	r0, #64	; 0x40
20000e2a:	f7ff feeb 	bl	20000c04 <graphic_ctrl_bit_clear>
	if(controller & B_CS1) {
20000e2e:	1dbb      	adds	r3, r7, #6
20000e30:	781b      	ldrb	r3, [r3, #0]
20000e32:	2208      	movs	r2, #8
20000e34:	4013      	ands	r3, r2
20000e36:	d004      	beq.n	20000e42 <graphic_write+0x4c>
		select_controller(B_CS1);
20000e38:	2008      	movs	r0, #8
20000e3a:	f7ff ff0f 	bl	20000c5c <select_controller>
		graphic_wait_ready();
20000e3e:	f7ff ff40 	bl	20000cc2 <graphic_wait_ready>
	}
	if(controller & B_CS2) {
20000e42:	1dbb      	adds	r3, r7, #6
20000e44:	781b      	ldrb	r3, [r3, #0]
20000e46:	2210      	movs	r2, #16
20000e48:	4013      	ands	r3, r2
20000e4a:	d004      	beq.n	20000e56 <graphic_write+0x60>
		select_controller(B_CS2);
20000e4c:	2010      	movs	r0, #16
20000e4e:	f7ff ff05 	bl	20000c5c <select_controller>
		graphic_wait_ready();
20000e52:	f7ff ff36 	bl	20000cc2 <graphic_wait_ready>
	}
	GPIO_E.odrHigh = 0;														//?
20000e56:	4b06      	ldr	r3, [pc, #24]	; (20000e70 <graphic_write+0x7a>)
20000e58:	2200      	movs	r2, #0
20000e5a:	755a      	strb	r2, [r3, #21]
	graphic_ctrl_bit_set(B_E);												//?
20000e5c:	2040      	movs	r0, #64	; 0x40
20000e5e:	f7ff fea3 	bl	20000ba8 <graphic_ctrl_bit_set>
	select_controller(0);													//?
20000e62:	2000      	movs	r0, #0
20000e64:	f7ff fefa 	bl	20000c5c <select_controller>
}
20000e68:	46c0      	nop			; (mov r8, r8)
20000e6a:	46bd      	mov	sp, r7
20000e6c:	b002      	add	sp, #8
20000e6e:	bd80      	pop	{r7, pc}
20000e70:	40021000 	andmi	r1, r2, r0

20000e74 <graphic_write_command>:

static void graphic_write_command(uint8_t command, uint8_t controller) {
20000e74:	b580      	push	{r7, lr}
20000e76:	b082      	sub	sp, #8
20000e78:	af00      	add	r7, sp, #0
20000e7a:	0002      	movs	r2, r0
20000e7c:	1dfb      	adds	r3, r7, #7
20000e7e:	701a      	strb	r2, [r3, #0]
20000e80:	1dbb      	adds	r3, r7, #6
20000e82:	1c0a      	adds	r2, r1, #0
20000e84:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000e86:	2040      	movs	r0, #64	; 0x40
20000e88:	f7ff febc 	bl	20000c04 <graphic_ctrl_bit_clear>
	select_controller(controller);
20000e8c:	1dbb      	adds	r3, r7, #6
20000e8e:	781b      	ldrb	r3, [r3, #0]
20000e90:	0018      	movs	r0, r3
20000e92:	f7ff fee3 	bl	20000c5c <select_controller>
	graphic_ctrl_bit_clear(B_RS|B_RW);
20000e96:	2003      	movs	r0, #3
20000e98:	f7ff feb4 	bl	20000c04 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20000e9c:	1dbb      	adds	r3, r7, #6
20000e9e:	781a      	ldrb	r2, [r3, #0]
20000ea0:	1dfb      	adds	r3, r7, #7
20000ea2:	781b      	ldrb	r3, [r3, #0]
20000ea4:	0011      	movs	r1, r2
20000ea6:	0018      	movs	r0, r3
20000ea8:	f7ff ffa5 	bl	20000df6 <graphic_write>
}
20000eac:	46c0      	nop			; (mov r8, r8)
20000eae:	46bd      	mov	sp, r7
20000eb0:	b002      	add	sp, #8
20000eb2:	bd80      	pop	{r7, pc}

20000eb4 <graphic_write_data>:

static void graphic_write_data(uint8_t data, uint8_t controller) {
20000eb4:	b580      	push	{r7, lr}
20000eb6:	b082      	sub	sp, #8
20000eb8:	af00      	add	r7, sp, #0
20000eba:	0002      	movs	r2, r0
20000ebc:	1dfb      	adds	r3, r7, #7
20000ebe:	701a      	strb	r2, [r3, #0]
20000ec0:	1dbb      	adds	r3, r7, #6
20000ec2:	1c0a      	adds	r2, r1, #0
20000ec4:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20000ec6:	2040      	movs	r0, #64	; 0x40
20000ec8:	f7ff fe9c 	bl	20000c04 <graphic_ctrl_bit_clear>
	select_controller(controller);
20000ecc:	1dbb      	adds	r3, r7, #6
20000ece:	781b      	ldrb	r3, [r3, #0]
20000ed0:	0018      	movs	r0, r3
20000ed2:	f7ff fec3 	bl	20000c5c <select_controller>
	graphic_ctrl_bit_set(B_RS);
20000ed6:	2001      	movs	r0, #1
20000ed8:	f7ff fe66 	bl	20000ba8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
20000edc:	2002      	movs	r0, #2
20000ede:	f7ff fe91 	bl	20000c04 <graphic_ctrl_bit_clear>
	graphic_write(data, controller);
20000ee2:	1dbb      	adds	r3, r7, #6
20000ee4:	781a      	ldrb	r2, [r3, #0]
20000ee6:	1dfb      	adds	r3, r7, #7
20000ee8:	781b      	ldrb	r3, [r3, #0]
20000eea:	0011      	movs	r1, r2
20000eec:	0018      	movs	r0, r3
20000eee:	f7ff ff82 	bl	20000df6 <graphic_write>
}
20000ef2:	46c0      	nop			; (mov r8, r8)
20000ef4:	46bd      	mov	sp, r7
20000ef6:	b002      	add	sp, #8
20000ef8:	bd80      	pop	{r7, pc}

20000efa <init_graphic>:

void init_graphic(void) {
20000efa:	b580      	push	{r7, lr}
20000efc:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
20000efe:	2040      	movs	r0, #64	; 0x40
20000f00:	f7ff fe52 	bl	20000ba8 <graphic_ctrl_bit_set>
	delay_micro(10);
20000f04:	200a      	movs	r0, #10
20000f06:	f7ff fe25 	bl	20000b54 <delay_micro>
	graphic_ctrl_bit_clear(B_CS1|B_CS2|B_RST|B_E);
20000f0a:	2078      	movs	r0, #120	; 0x78
20000f0c:	f7ff fe7a 	bl	20000c04 <graphic_ctrl_bit_clear>
	delay_milli(30);
20000f10:	201e      	movs	r0, #30
20000f12:	f7ff fe35 	bl	20000b80 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
20000f16:	2020      	movs	r0, #32
20000f18:	f7ff fe46 	bl	20000ba8 <graphic_ctrl_bit_set>
	delay_milli(100);														//?
20000f1c:	2064      	movs	r0, #100	; 0x64
20000f1e:	f7ff fe2f 	bl	20000b80 <delay_milli>
	graphic_write_command(LCD_OFF,			B_CS1|B_CS2);
20000f22:	2118      	movs	r1, #24
20000f24:	203e      	movs	r0, #62	; 0x3e
20000f26:	f7ff ffa5 	bl	20000e74 <graphic_write_command>
	graphic_write_command(LCD_ON,			B_CS1|B_CS2);
20000f2a:	2118      	movs	r1, #24
20000f2c:	203f      	movs	r0, #63	; 0x3f
20000f2e:	f7ff ffa1 	bl	20000e74 <graphic_write_command>
	graphic_write_command(LCD_DISP_START,	B_CS1|B_CS2);
20000f32:	2118      	movs	r1, #24
20000f34:	20c0      	movs	r0, #192	; 0xc0
20000f36:	f7ff ff9d 	bl	20000e74 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD,		B_CS1|B_CS2);
20000f3a:	2118      	movs	r1, #24
20000f3c:	2040      	movs	r0, #64	; 0x40
20000f3e:	f7ff ff99 	bl	20000e74 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE,		B_CS1|B_CS2);
20000f42:	2118      	movs	r1, #24
20000f44:	20b8      	movs	r0, #184	; 0xb8
20000f46:	f7ff ff95 	bl	20000e74 <graphic_write_command>
	select_controller(0);
20000f4a:	2000      	movs	r0, #0
20000f4c:	f7ff fe86 	bl	20000c5c <select_controller>
}
20000f50:	46c0      	nop			; (mov r8, r8)
20000f52:	46bd      	mov	sp, r7
20000f54:	bd80      	pop	{r7, pc}

20000f56 <graphic_clear_screen>:

void graphic_clear_screen(void) {
20000f56:	b580      	push	{r7, lr}
20000f58:	b082      	sub	sp, #8
20000f5a:	af00      	add	r7, sp, #0
	uint8_t page, add;
	for(page=0; page<=7; page++) {
20000f5c:	1dfb      	adds	r3, r7, #7
20000f5e:	2200      	movs	r2, #0
20000f60:	701a      	strb	r2, [r3, #0]
20000f62:	e023      	b.n	20000fac <graphic_clear_screen+0x56>
		graphic_write_command(LCD_SET_PAGE	| page,		B_CS1|B_CS2);
20000f64:	1dfb      	adds	r3, r7, #7
20000f66:	781b      	ldrb	r3, [r3, #0]
20000f68:	2248      	movs	r2, #72	; 0x48
20000f6a:	4252      	negs	r2, r2
20000f6c:	4313      	orrs	r3, r2
20000f6e:	b2db      	uxtb	r3, r3
20000f70:	2118      	movs	r1, #24
20000f72:	0018      	movs	r0, r3
20000f74:	f7ff ff7e 	bl	20000e74 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD	| 0,		B_CS1|B_CS2);
20000f78:	2118      	movs	r1, #24
20000f7a:	2040      	movs	r0, #64	; 0x40
20000f7c:	f7ff ff7a 	bl	20000e74 <graphic_write_command>
		for(add=0; add<=63; add++) {
20000f80:	1dbb      	adds	r3, r7, #6
20000f82:	2200      	movs	r2, #0
20000f84:	701a      	strb	r2, [r3, #0]
20000f86:	e008      	b.n	20000f9a <graphic_clear_screen+0x44>
			graphic_write_data(0, B_CS1|B_CS2);
20000f88:	2118      	movs	r1, #24
20000f8a:	2000      	movs	r0, #0
20000f8c:	f7ff ff92 	bl	20000eb4 <graphic_write_data>
		for(add=0; add<=63; add++) {
20000f90:	1dbb      	adds	r3, r7, #6
20000f92:	781a      	ldrb	r2, [r3, #0]
20000f94:	1dbb      	adds	r3, r7, #6
20000f96:	3201      	adds	r2, #1
20000f98:	701a      	strb	r2, [r3, #0]
20000f9a:	1dbb      	adds	r3, r7, #6
20000f9c:	781b      	ldrb	r3, [r3, #0]
20000f9e:	2b3f      	cmp	r3, #63	; 0x3f
20000fa0:	d9f2      	bls.n	20000f88 <graphic_clear_screen+0x32>
	for(page=0; page<=7; page++) {
20000fa2:	1dfb      	adds	r3, r7, #7
20000fa4:	781a      	ldrb	r2, [r3, #0]
20000fa6:	1dfb      	adds	r3, r7, #7
20000fa8:	3201      	adds	r2, #1
20000faa:	701a      	strb	r2, [r3, #0]
20000fac:	1dfb      	adds	r3, r7, #7
20000fae:	781b      	ldrb	r3, [r3, #0]
20000fb0:	2b07      	cmp	r3, #7
20000fb2:	d9d7      	bls.n	20000f64 <graphic_clear_screen+0xe>
		}
	}
}
20000fb4:	46c0      	nop			; (mov r8, r8)
20000fb6:	46bd      	mov	sp, r7
20000fb8:	b002      	add	sp, #8
20000fba:	bd80      	pop	{r7, pc}

20000fbc <pixelSim>:

// Set or clear a single pixel
void pixelSim(int x, int y, int set) {		// SIMULATOR
20000fbc:	b590      	push	{r4, r7, lr}
20000fbe:	b089      	sub	sp, #36	; 0x24
20000fc0:	af00      	add	r7, sp, #0
20000fc2:	60f8      	str	r0, [r7, #12]
20000fc4:	60b9      	str	r1, [r7, #8]
20000fc6:	607a      	str	r2, [r7, #4]
	uint8_t mask, c, controller;
	int index;
	if((x < 1) || (x > 128) || (y < 1) || (y > 64)) return;
20000fc8:	68fb      	ldr	r3, [r7, #12]
20000fca:	2b00      	cmp	r3, #0
20000fcc:	dc00      	bgt.n	20000fd0 <pixelSim+0x14>
20000fce:	e095      	b.n	200010fc <pixelSim+0x140>
20000fd0:	68fb      	ldr	r3, [r7, #12]
20000fd2:	2b80      	cmp	r3, #128	; 0x80
20000fd4:	dd00      	ble.n	20000fd8 <pixelSim+0x1c>
20000fd6:	e091      	b.n	200010fc <pixelSim+0x140>
20000fd8:	68bb      	ldr	r3, [r7, #8]
20000fda:	2b00      	cmp	r3, #0
20000fdc:	dc00      	bgt.n	20000fe0 <pixelSim+0x24>
20000fde:	e08d      	b.n	200010fc <pixelSim+0x140>
20000fe0:	68bb      	ldr	r3, [r7, #8]
20000fe2:	2b40      	cmp	r3, #64	; 0x40
20000fe4:	dd00      	ble.n	20000fe8 <pixelSim+0x2c>
20000fe6:	e089      	b.n	200010fc <pixelSim+0x140>
	x-=1;
20000fe8:	68fb      	ldr	r3, [r7, #12]
20000fea:	3b01      	subs	r3, #1
20000fec:	60fb      	str	r3, [r7, #12]
	y-=1;
20000fee:	68bb      	ldr	r3, [r7, #8]
20000ff0:	3b01      	subs	r3, #1
20000ff2:	60bb      	str	r3, [r7, #8]
	
	index = y/8;
20000ff4:	68bb      	ldr	r3, [r7, #8]
20000ff6:	2b00      	cmp	r3, #0
20000ff8:	da00      	bge.n	20000ffc <pixelSim+0x40>
20000ffa:	3307      	adds	r3, #7
20000ffc:	10db      	asrs	r3, r3, #3
20000ffe:	61bb      	str	r3, [r7, #24]
	mask = 1 << (y%8);
20001000:	68bb      	ldr	r3, [r7, #8]
20001002:	4a40      	ldr	r2, [pc, #256]	; (20001104 <pixelSim+0x148>)
20001004:	4013      	ands	r3, r2
20001006:	d504      	bpl.n	20001012 <pixelSim+0x56>
20001008:	3b01      	subs	r3, #1
2000100a:	2208      	movs	r2, #8
2000100c:	4252      	negs	r2, r2
2000100e:	4313      	orrs	r3, r2
20001010:	3301      	adds	r3, #1
20001012:	001a      	movs	r2, r3
20001014:	2301      	movs	r3, #1
20001016:	4093      	lsls	r3, r2
20001018:	001a      	movs	r2, r3
2000101a:	231f      	movs	r3, #31
2000101c:	18fb      	adds	r3, r7, r3
2000101e:	701a      	strb	r2, [r3, #0]
	
	if(set == 0)
20001020:	687b      	ldr	r3, [r7, #4]
20001022:	2b00      	cmp	r3, #0
20001024:	d106      	bne.n	20001034 <pixelSim+0x78>
		mask = ~mask;
20001026:	231f      	movs	r3, #31
20001028:	18fb      	adds	r3, r7, r3
2000102a:	221f      	movs	r2, #31
2000102c:	18ba      	adds	r2, r7, r2
2000102e:	7812      	ldrb	r2, [r2, #0]
20001030:	43d2      	mvns	r2, r2
20001032:	701a      	strb	r2, [r3, #0]
	
	if(x > 63) {
20001034:	68fb      	ldr	r3, [r7, #12]
20001036:	2b3f      	cmp	r3, #63	; 0x3f
20001038:	dd07      	ble.n	2000104a <pixelSim+0x8e>
		controller = B_CS2;
2000103a:	231e      	movs	r3, #30
2000103c:	18fb      	adds	r3, r7, r3
2000103e:	2210      	movs	r2, #16
20001040:	701a      	strb	r2, [r3, #0]
		x -= 64;
20001042:	68fb      	ldr	r3, [r7, #12]
20001044:	3b40      	subs	r3, #64	; 0x40
20001046:	60fb      	str	r3, [r7, #12]
20001048:	e003      	b.n	20001052 <pixelSim+0x96>
	}else {
		controller = B_CS1;
2000104a:	231e      	movs	r3, #30
2000104c:	18fb      	adds	r3, r7, r3
2000104e:	2208      	movs	r2, #8
20001050:	701a      	strb	r2, [r3, #0]
	}
	graphic_write_command(LCD_SET_ADD	| x,		controller);
20001052:	68fb      	ldr	r3, [r7, #12]
20001054:	b25b      	sxtb	r3, r3
20001056:	2240      	movs	r2, #64	; 0x40
20001058:	4313      	orrs	r3, r2
2000105a:	b25b      	sxtb	r3, r3
2000105c:	b2da      	uxtb	r2, r3
2000105e:	231e      	movs	r3, #30
20001060:	18fb      	adds	r3, r7, r3
20001062:	781b      	ldrb	r3, [r3, #0]
20001064:	0019      	movs	r1, r3
20001066:	0010      	movs	r0, r2
20001068:	f7ff ff04 	bl	20000e74 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE	| index,	controller);
2000106c:	69bb      	ldr	r3, [r7, #24]
2000106e:	b25b      	sxtb	r3, r3
20001070:	2248      	movs	r2, #72	; 0x48
20001072:	4252      	negs	r2, r2
20001074:	4313      	orrs	r3, r2
20001076:	b25b      	sxtb	r3, r3
20001078:	b2da      	uxtb	r2, r3
2000107a:	231e      	movs	r3, #30
2000107c:	18fb      	adds	r3, r7, r3
2000107e:	781b      	ldrb	r3, [r3, #0]
20001080:	0019      	movs	r1, r3
20001082:	0010      	movs	r0, r2
20001084:	f7ff fef6 	bl	20000e74 <graphic_write_command>
	c = graphic_read_data(controller);
20001088:	2317      	movs	r3, #23
2000108a:	18fc      	adds	r4, r7, r3
2000108c:	231e      	movs	r3, #30
2000108e:	18fb      	adds	r3, r7, r3
20001090:	781b      	ldrb	r3, [r3, #0]
20001092:	0018      	movs	r0, r3
20001094:	f7ff fe9a 	bl	20000dcc <graphic_read_data>
20001098:	0003      	movs	r3, r0
2000109a:	7023      	strb	r3, [r4, #0]
	graphic_write_command(LCD_SET_ADD	| x,		controller);	// counteracts auto incrementation
2000109c:	68fb      	ldr	r3, [r7, #12]
2000109e:	b25b      	sxtb	r3, r3
200010a0:	2240      	movs	r2, #64	; 0x40
200010a2:	4313      	orrs	r3, r2
200010a4:	b25b      	sxtb	r3, r3
200010a6:	b2da      	uxtb	r2, r3
200010a8:	231e      	movs	r3, #30
200010aa:	18fb      	adds	r3, r7, r3
200010ac:	781b      	ldrb	r3, [r3, #0]
200010ae:	0019      	movs	r1, r3
200010b0:	0010      	movs	r0, r2
200010b2:	f7ff fedf 	bl	20000e74 <graphic_write_command>
	
	if(set==1)
200010b6:	687b      	ldr	r3, [r7, #4]
200010b8:	2b01      	cmp	r3, #1
200010ba:	d10a      	bne.n	200010d2 <pixelSim+0x116>
		mask |= c;
200010bc:	231f      	movs	r3, #31
200010be:	18fb      	adds	r3, r7, r3
200010c0:	221f      	movs	r2, #31
200010c2:	18b9      	adds	r1, r7, r2
200010c4:	2217      	movs	r2, #23
200010c6:	18ba      	adds	r2, r7, r2
200010c8:	7809      	ldrb	r1, [r1, #0]
200010ca:	7812      	ldrb	r2, [r2, #0]
200010cc:	430a      	orrs	r2, r1
200010ce:	701a      	strb	r2, [r3, #0]
200010d0:	e009      	b.n	200010e6 <pixelSim+0x12a>
	else
		mask &= c;
200010d2:	231f      	movs	r3, #31
200010d4:	18fb      	adds	r3, r7, r3
200010d6:	221f      	movs	r2, #31
200010d8:	18ba      	adds	r2, r7, r2
200010da:	2117      	movs	r1, #23
200010dc:	1879      	adds	r1, r7, r1
200010de:	7812      	ldrb	r2, [r2, #0]
200010e0:	7809      	ldrb	r1, [r1, #0]
200010e2:	400a      	ands	r2, r1
200010e4:	701a      	strb	r2, [r3, #0]
	
	graphic_write_data(mask, controller);
200010e6:	231e      	movs	r3, #30
200010e8:	18fb      	adds	r3, r7, r3
200010ea:	781a      	ldrb	r2, [r3, #0]
200010ec:	231f      	movs	r3, #31
200010ee:	18fb      	adds	r3, r7, r3
200010f0:	781b      	ldrb	r3, [r3, #0]
200010f2:	0011      	movs	r1, r2
200010f4:	0018      	movs	r0, r3
200010f6:	f7ff fedd 	bl	20000eb4 <graphic_write_data>
200010fa:	e000      	b.n	200010fe <pixelSim+0x142>
	if((x < 1) || (x > 128) || (y < 1) || (y > 64)) return;
200010fc:	46c0      	nop			; (mov r8, r8)
}
200010fe:	46bd      	mov	sp, r7
20001100:	b009      	add	sp, #36	; 0x24
20001102:	bd90      	pop	{r4, r7, pc}
20001104:	80000007 	andhi	r0, r0, r7

20001108 <clearBuffer>:

uint8_t frameBuffer0[1024], frameBuffer1[1024]; // 1024 = 128 * 64 / 8
uint8_t *backBuffer = frameBuffer0;
uint8_t *frontBuffer = frameBuffer1;

void clearBuffer(void) {
20001108:	b580      	push	{r7, lr}
2000110a:	b082      	sub	sp, #8
2000110c:	af00      	add	r7, sp, #0
	for (int i = 0; i < 1024; i++)
2000110e:	2300      	movs	r3, #0
20001110:	607b      	str	r3, [r7, #4]
20001112:	e008      	b.n	20001126 <clearBuffer+0x1e>
		backBuffer[i] = 0;
20001114:	4b08      	ldr	r3, [pc, #32]	; (20001138 <clearBuffer+0x30>)
20001116:	681a      	ldr	r2, [r3, #0]
20001118:	687b      	ldr	r3, [r7, #4]
2000111a:	18d3      	adds	r3, r2, r3
2000111c:	2200      	movs	r2, #0
2000111e:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 1024; i++)
20001120:	687b      	ldr	r3, [r7, #4]
20001122:	3301      	adds	r3, #1
20001124:	607b      	str	r3, [r7, #4]
20001126:	687b      	ldr	r3, [r7, #4]
20001128:	4a04      	ldr	r2, [pc, #16]	; (2000113c <clearBuffer+0x34>)
2000112a:	4293      	cmp	r3, r2
2000112c:	ddf2      	ble.n	20001114 <clearBuffer+0xc>
}
2000112e:	46c0      	nop			; (mov r8, r8)
20001130:	46bd      	mov	sp, r7
20001132:	b002      	add	sp, #8
20001134:	bd80      	pop	{r7, pc}
20001136:	46c0      	nop			; (mov r8, r8)
20001138:	20006660 	andcs	r6, r0, r0, ror #12
2000113c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20001140 <clearBuffers>:

void clearBuffers(void) {
20001140:	b580      	push	{r7, lr}
20001142:	b082      	sub	sp, #8
20001144:	af00      	add	r7, sp, #0
	for (int i = 0; i < 1024; i++)
20001146:	2300      	movs	r3, #0
20001148:	607b      	str	r3, [r7, #4]
2000114a:	e00e      	b.n	2000116a <clearBuffers+0x2a>
		backBuffer[i] = frontBuffer[i] = 0;
2000114c:	4b0b      	ldr	r3, [pc, #44]	; (2000117c <clearBuffers+0x3c>)
2000114e:	681a      	ldr	r2, [r3, #0]
20001150:	687b      	ldr	r3, [r7, #4]
20001152:	18d2      	adds	r2, r2, r3
20001154:	4b0a      	ldr	r3, [pc, #40]	; (20001180 <clearBuffers+0x40>)
20001156:	6819      	ldr	r1, [r3, #0]
20001158:	687b      	ldr	r3, [r7, #4]
2000115a:	18cb      	adds	r3, r1, r3
2000115c:	2100      	movs	r1, #0
2000115e:	7019      	strb	r1, [r3, #0]
20001160:	781b      	ldrb	r3, [r3, #0]
20001162:	7013      	strb	r3, [r2, #0]
	for (int i = 0; i < 1024; i++)
20001164:	687b      	ldr	r3, [r7, #4]
20001166:	3301      	adds	r3, #1
20001168:	607b      	str	r3, [r7, #4]
2000116a:	687b      	ldr	r3, [r7, #4]
2000116c:	4a05      	ldr	r2, [pc, #20]	; (20001184 <clearBuffers+0x44>)
2000116e:	4293      	cmp	r3, r2
20001170:	ddec      	ble.n	2000114c <clearBuffers+0xc>
}
20001172:	46c0      	nop			; (mov r8, r8)
20001174:	46bd      	mov	sp, r7
20001176:	b002      	add	sp, #8
20001178:	bd80      	pop	{r7, pc}
2000117a:	46c0      	nop			; (mov r8, r8)
2000117c:	20006660 	andcs	r6, r0, r0, ror #12
20001180:	20006664 	andcs	r6, r0, r4, ror #12
20001184:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20001188 <pixel>:

void pixel(int x, int y) {
20001188:	b580      	push	{r7, lr}
2000118a:	b084      	sub	sp, #16
2000118c:	af00      	add	r7, sp, #0
2000118e:	6078      	str	r0, [r7, #4]
20001190:	6039      	str	r1, [r7, #0]
	if((x < 1) || (x > 128) || (y < 1) || (y > 64))
20001192:	687b      	ldr	r3, [r7, #4]
20001194:	2b00      	cmp	r3, #0
20001196:	dd44      	ble.n	20001222 <pixel+0x9a>
20001198:	687b      	ldr	r3, [r7, #4]
2000119a:	2b80      	cmp	r3, #128	; 0x80
2000119c:	dc41      	bgt.n	20001222 <pixel+0x9a>
2000119e:	683b      	ldr	r3, [r7, #0]
200011a0:	2b00      	cmp	r3, #0
200011a2:	dd3e      	ble.n	20001222 <pixel+0x9a>
200011a4:	683b      	ldr	r3, [r7, #0]
200011a6:	2b40      	cmp	r3, #64	; 0x40
200011a8:	dc3b      	bgt.n	20001222 <pixel+0x9a>
		return;
	x-=1;
200011aa:	687b      	ldr	r3, [r7, #4]
200011ac:	3b01      	subs	r3, #1
200011ae:	607b      	str	r3, [r7, #4]
	y-=1;
200011b0:	683b      	ldr	r3, [r7, #0]
200011b2:	3b01      	subs	r3, #1
200011b4:	603b      	str	r3, [r7, #0]
	
	uint8_t mask = 1 << (y%8);
200011b6:	683b      	ldr	r3, [r7, #0]
200011b8:	4a1c      	ldr	r2, [pc, #112]	; (2000122c <pixel+0xa4>)
200011ba:	4013      	ands	r3, r2
200011bc:	d504      	bpl.n	200011c8 <pixel+0x40>
200011be:	3b01      	subs	r3, #1
200011c0:	2208      	movs	r2, #8
200011c2:	4252      	negs	r2, r2
200011c4:	4313      	orrs	r3, r2
200011c6:	3301      	adds	r3, #1
200011c8:	001a      	movs	r2, r3
200011ca:	2301      	movs	r3, #1
200011cc:	4093      	lsls	r3, r2
200011ce:	001a      	movs	r2, r3
200011d0:	230b      	movs	r3, #11
200011d2:	18fb      	adds	r3, r7, r3
200011d4:	701a      	strb	r2, [r3, #0]
	
	int index = 0;
200011d6:	2300      	movs	r3, #0
200011d8:	60fb      	str	r3, [r7, #12]
	
	if(x >= 64) {
200011da:	687b      	ldr	r3, [r7, #4]
200011dc:	2b3f      	cmp	r3, #63	; 0x3f
200011de:	dd05      	ble.n	200011ec <pixel+0x64>
		x -= 64;
200011e0:	687b      	ldr	r3, [r7, #4]
200011e2:	3b40      	subs	r3, #64	; 0x40
200011e4:	607b      	str	r3, [r7, #4]
		index = 512;
200011e6:	2380      	movs	r3, #128	; 0x80
200011e8:	009b      	lsls	r3, r3, #2
200011ea:	60fb      	str	r3, [r7, #12]
	}
	index += x + (y/8)*64;
200011ec:	683b      	ldr	r3, [r7, #0]
200011ee:	2b00      	cmp	r3, #0
200011f0:	da00      	bge.n	200011f4 <pixel+0x6c>
200011f2:	3307      	adds	r3, #7
200011f4:	10db      	asrs	r3, r3, #3
200011f6:	019a      	lsls	r2, r3, #6
200011f8:	687b      	ldr	r3, [r7, #4]
200011fa:	18d3      	adds	r3, r2, r3
200011fc:	68fa      	ldr	r2, [r7, #12]
200011fe:	18d3      	adds	r3, r2, r3
20001200:	60fb      	str	r3, [r7, #12]
	
	backBuffer[index] |= mask;
20001202:	4b0b      	ldr	r3, [pc, #44]	; (20001230 <pixel+0xa8>)
20001204:	681a      	ldr	r2, [r3, #0]
20001206:	68fb      	ldr	r3, [r7, #12]
20001208:	18d2      	adds	r2, r2, r3
2000120a:	4b09      	ldr	r3, [pc, #36]	; (20001230 <pixel+0xa8>)
2000120c:	6819      	ldr	r1, [r3, #0]
2000120e:	68fb      	ldr	r3, [r7, #12]
20001210:	18cb      	adds	r3, r1, r3
20001212:	7819      	ldrb	r1, [r3, #0]
20001214:	230b      	movs	r3, #11
20001216:	18fb      	adds	r3, r7, r3
20001218:	781b      	ldrb	r3, [r3, #0]
2000121a:	430b      	orrs	r3, r1
2000121c:	b2db      	uxtb	r3, r3
2000121e:	7013      	strb	r3, [r2, #0]
20001220:	e000      	b.n	20001224 <pixel+0x9c>
		return;
20001222:	46c0      	nop			; (mov r8, r8)
}
20001224:	46bd      	mov	sp, r7
20001226:	b004      	add	sp, #16
20001228:	bd80      	pop	{r7, pc}
2000122a:	46c0      	nop			; (mov r8, r8)
2000122c:	80000007 	andhi	r0, r0, r7
20001230:	20006660 	andcs	r6, r0, r0, ror #12

20001234 <read_pixel>:

int read_pixel(int x, int y) {
20001234:	b580      	push	{r7, lr}
20001236:	b084      	sub	sp, #16
20001238:	af00      	add	r7, sp, #0
2000123a:	6078      	str	r0, [r7, #4]
2000123c:	6039      	str	r1, [r7, #0]
	uint8_t mask;
	int index = 0;
2000123e:	2300      	movs	r3, #0
20001240:	60fb      	str	r3, [r7, #12]
	if((x < 1) || (x > 128) || (y < 1) || (y > 64)) return;
20001242:	687b      	ldr	r3, [r7, #4]
20001244:	2b00      	cmp	r3, #0
20001246:	dd42      	ble.n	200012ce <read_pixel+0x9a>
20001248:	687b      	ldr	r3, [r7, #4]
2000124a:	2b80      	cmp	r3, #128	; 0x80
2000124c:	dc3f      	bgt.n	200012ce <read_pixel+0x9a>
2000124e:	683b      	ldr	r3, [r7, #0]
20001250:	2b00      	cmp	r3, #0
20001252:	dd3c      	ble.n	200012ce <read_pixel+0x9a>
20001254:	683b      	ldr	r3, [r7, #0]
20001256:	2b40      	cmp	r3, #64	; 0x40
20001258:	dc39      	bgt.n	200012ce <read_pixel+0x9a>
	x-=1;
2000125a:	687b      	ldr	r3, [r7, #4]
2000125c:	3b01      	subs	r3, #1
2000125e:	607b      	str	r3, [r7, #4]
	y-=1;
20001260:	683b      	ldr	r3, [r7, #0]
20001262:	3b01      	subs	r3, #1
20001264:	603b      	str	r3, [r7, #0]
	
	mask = 1 << (y%8);
20001266:	683b      	ldr	r3, [r7, #0]
20001268:	4a1c      	ldr	r2, [pc, #112]	; (200012dc <read_pixel+0xa8>)
2000126a:	4013      	ands	r3, r2
2000126c:	d504      	bpl.n	20001278 <read_pixel+0x44>
2000126e:	3b01      	subs	r3, #1
20001270:	2208      	movs	r2, #8
20001272:	4252      	negs	r2, r2
20001274:	4313      	orrs	r3, r2
20001276:	3301      	adds	r3, #1
20001278:	001a      	movs	r2, r3
2000127a:	2301      	movs	r3, #1
2000127c:	4093      	lsls	r3, r2
2000127e:	001a      	movs	r2, r3
20001280:	230b      	movs	r3, #11
20001282:	18fb      	adds	r3, r7, r3
20001284:	701a      	strb	r2, [r3, #0]
	
	if(x > 63) {
20001286:	687b      	ldr	r3, [r7, #4]
20001288:	2b3f      	cmp	r3, #63	; 0x3f
2000128a:	dd05      	ble.n	20001298 <read_pixel+0x64>
		x -= 64;
2000128c:	687b      	ldr	r3, [r7, #4]
2000128e:	3b40      	subs	r3, #64	; 0x40
20001290:	607b      	str	r3, [r7, #4]
		index = 512;
20001292:	2380      	movs	r3, #128	; 0x80
20001294:	009b      	lsls	r3, r3, #2
20001296:	60fb      	str	r3, [r7, #12]
	}
	
	index += x + (y/8)*64;
20001298:	683b      	ldr	r3, [r7, #0]
2000129a:	2b00      	cmp	r3, #0
2000129c:	da00      	bge.n	200012a0 <read_pixel+0x6c>
2000129e:	3307      	adds	r3, #7
200012a0:	10db      	asrs	r3, r3, #3
200012a2:	019a      	lsls	r2, r3, #6
200012a4:	687b      	ldr	r3, [r7, #4]
200012a6:	18d3      	adds	r3, r2, r3
200012a8:	68fa      	ldr	r2, [r7, #12]
200012aa:	18d3      	adds	r3, r2, r3
200012ac:	60fb      	str	r3, [r7, #12]
	
	if ( (backBuffer[index] & mask) == 0)
200012ae:	4b0c      	ldr	r3, [pc, #48]	; (200012e0 <read_pixel+0xac>)
200012b0:	681a      	ldr	r2, [r3, #0]
200012b2:	68fb      	ldr	r3, [r7, #12]
200012b4:	18d3      	adds	r3, r2, r3
200012b6:	781b      	ldrb	r3, [r3, #0]
200012b8:	220b      	movs	r2, #11
200012ba:	18ba      	adds	r2, r7, r2
200012bc:	7812      	ldrb	r2, [r2, #0]
200012be:	4013      	ands	r3, r2
200012c0:	b2db      	uxtb	r3, r3
200012c2:	2b00      	cmp	r3, #0
200012c4:	d101      	bne.n	200012ca <read_pixel+0x96>
		return 0;
200012c6:	2300      	movs	r3, #0
200012c8:	e003      	b.n	200012d2 <read_pixel+0x9e>
	else
		return 1;
200012ca:	2301      	movs	r3, #1
200012cc:	e001      	b.n	200012d2 <read_pixel+0x9e>
	if((x < 1) || (x > 128) || (y < 1) || (y > 64)) return;
200012ce:	46c0      	nop			; (mov r8, r8)
200012d0:	46c0      	nop			; (mov r8, r8)
}
200012d2:	0018      	movs	r0, r3
200012d4:	46bd      	mov	sp, r7
200012d6:	b004      	add	sp, #16
200012d8:	bd80      	pop	{r7, pc}
200012da:	46c0      	nop			; (mov r8, r8)
200012dc:	80000007 	andhi	r0, r0, r7
200012e0:	20006660 	andcs	r6, r0, r0, ror #12

200012e4 <graphic_draw_screen>:

static void graphic_draw_screen(void) {
200012e4:	b580      	push	{r7, lr}
200012e6:	b084      	sub	sp, #16
200012e8:	af00      	add	r7, sp, #0
	uint8_t i, j, controller, c;
	bool bUpdateAddr = true;
200012ea:	2301      	movs	r3, #1
200012ec:	60bb      	str	r3, [r7, #8]
	unsigned int k = 0;
200012ee:	2300      	movs	r3, #0
200012f0:	607b      	str	r3, [r7, #4]
	for(c = 0; c < 2; c++) {							// loop over both controllers (the two displays)
200012f2:	230d      	movs	r3, #13
200012f4:	18fb      	adds	r3, r7, r3
200012f6:	2200      	movs	r2, #0
200012f8:	701a      	strb	r2, [r3, #0]
200012fa:	e073      	b.n	200013e4 <graphic_draw_screen+0x100>
		controller = (c == 0) ? B_CS1 : B_CS2;
200012fc:	230d      	movs	r3, #13
200012fe:	18fb      	adds	r3, r7, r3
20001300:	781b      	ldrb	r3, [r3, #0]
20001302:	2b00      	cmp	r3, #0
20001304:	d101      	bne.n	2000130a <graphic_draw_screen+0x26>
20001306:	2208      	movs	r2, #8
20001308:	e000      	b.n	2000130c <graphic_draw_screen+0x28>
2000130a:	2210      	movs	r2, #16
2000130c:	1cfb      	adds	r3, r7, #3
2000130e:	701a      	strb	r2, [r3, #0]
		for(j = 0; j < 8; j++) {						// loop over pages
20001310:	230e      	movs	r3, #14
20001312:	18fb      	adds	r3, r7, r3
20001314:	2200      	movs	r2, #0
20001316:	701a      	strb	r2, [r3, #0]
20001318:	e058      	b.n	200013cc <graphic_draw_screen+0xe8>
			graphic_write_command(LCD_SET_PAGE | j, controller);
2000131a:	230e      	movs	r3, #14
2000131c:	18fb      	adds	r3, r7, r3
2000131e:	781b      	ldrb	r3, [r3, #0]
20001320:	2248      	movs	r2, #72	; 0x48
20001322:	4252      	negs	r2, r2
20001324:	4313      	orrs	r3, r2
20001326:	b2da      	uxtb	r2, r3
20001328:	1cfb      	adds	r3, r7, #3
2000132a:	781b      	ldrb	r3, [r3, #0]
2000132c:	0019      	movs	r1, r3
2000132e:	0010      	movs	r0, r2
20001330:	f7ff fda0 	bl	20000e74 <graphic_write_command>
			graphic_write_command(LCD_SET_ADD | 0, controller);
20001334:	1cfb      	adds	r3, r7, #3
20001336:	781b      	ldrb	r3, [r3, #0]
20001338:	0019      	movs	r1, r3
2000133a:	2040      	movs	r0, #64	; 0x40
2000133c:	f7ff fd9a 	bl	20000e74 <graphic_write_command>
			for(i = 0; i <= 63; i++, k++) {				// loop over addresses
20001340:	230f      	movs	r3, #15
20001342:	18fb      	adds	r3, r7, r3
20001344:	2200      	movs	r2, #0
20001346:	701a      	strb	r2, [r3, #0]
20001348:	e034      	b.n	200013b4 <graphic_draw_screen+0xd0>
				// update display only where it is different from last frame
				if(backBuffer[k] != frontBuffer[k]) {
2000134a:	4b2b      	ldr	r3, [pc, #172]	; (200013f8 <graphic_draw_screen+0x114>)
2000134c:	681a      	ldr	r2, [r3, #0]
2000134e:	687b      	ldr	r3, [r7, #4]
20001350:	18d3      	adds	r3, r2, r3
20001352:	781a      	ldrb	r2, [r3, #0]
20001354:	4b29      	ldr	r3, [pc, #164]	; (200013fc <graphic_draw_screen+0x118>)
20001356:	6819      	ldr	r1, [r3, #0]
20001358:	687b      	ldr	r3, [r7, #4]
2000135a:	18cb      	adds	r3, r1, r3
2000135c:	781b      	ldrb	r3, [r3, #0]
2000135e:	429a      	cmp	r2, r3
20001360:	d01c      	beq.n	2000139c <graphic_draw_screen+0xb8>
					if(bUpdateAddr)
20001362:	68bb      	ldr	r3, [r7, #8]
20001364:	2b00      	cmp	r3, #0
20001366:	d00b      	beq.n	20001380 <graphic_draw_screen+0x9c>
						graphic_write_command(LCD_SET_ADD | i, controller);
20001368:	230f      	movs	r3, #15
2000136a:	18fb      	adds	r3, r7, r3
2000136c:	781b      	ldrb	r3, [r3, #0]
2000136e:	2240      	movs	r2, #64	; 0x40
20001370:	4313      	orrs	r3, r2
20001372:	b2da      	uxtb	r2, r3
20001374:	1cfb      	adds	r3, r7, #3
20001376:	781b      	ldrb	r3, [r3, #0]
20001378:	0019      	movs	r1, r3
2000137a:	0010      	movs	r0, r2
2000137c:	f7ff fd7a 	bl	20000e74 <graphic_write_command>
					graphic_write_data(backBuffer[k], controller);
20001380:	4b1d      	ldr	r3, [pc, #116]	; (200013f8 <graphic_draw_screen+0x114>)
20001382:	681a      	ldr	r2, [r3, #0]
20001384:	687b      	ldr	r3, [r7, #4]
20001386:	18d3      	adds	r3, r2, r3
20001388:	781a      	ldrb	r2, [r3, #0]
2000138a:	1cfb      	adds	r3, r7, #3
2000138c:	781b      	ldrb	r3, [r3, #0]
2000138e:	0019      	movs	r1, r3
20001390:	0010      	movs	r0, r2
20001392:	f7ff fd8f 	bl	20000eb4 <graphic_write_data>
					bUpdateAddr = false;
20001396:	2300      	movs	r3, #0
20001398:	60bb      	str	r3, [r7, #8]
2000139a:	e001      	b.n	200013a0 <graphic_draw_screen+0xbc>
				} else {
					bUpdateAddr = true;
2000139c:	2301      	movs	r3, #1
2000139e:	60bb      	str	r3, [r7, #8]
			for(i = 0; i <= 63; i++, k++) {				// loop over addresses
200013a0:	230f      	movs	r3, #15
200013a2:	18fb      	adds	r3, r7, r3
200013a4:	781a      	ldrb	r2, [r3, #0]
200013a6:	230f      	movs	r3, #15
200013a8:	18fb      	adds	r3, r7, r3
200013aa:	3201      	adds	r2, #1
200013ac:	701a      	strb	r2, [r3, #0]
200013ae:	687b      	ldr	r3, [r7, #4]
200013b0:	3301      	adds	r3, #1
200013b2:	607b      	str	r3, [r7, #4]
200013b4:	230f      	movs	r3, #15
200013b6:	18fb      	adds	r3, r7, r3
200013b8:	781b      	ldrb	r3, [r3, #0]
200013ba:	2b3f      	cmp	r3, #63	; 0x3f
200013bc:	d9c5      	bls.n	2000134a <graphic_draw_screen+0x66>
		for(j = 0; j < 8; j++) {						// loop over pages
200013be:	230e      	movs	r3, #14
200013c0:	18fb      	adds	r3, r7, r3
200013c2:	781a      	ldrb	r2, [r3, #0]
200013c4:	230e      	movs	r3, #14
200013c6:	18fb      	adds	r3, r7, r3
200013c8:	3201      	adds	r2, #1
200013ca:	701a      	strb	r2, [r3, #0]
200013cc:	230e      	movs	r3, #14
200013ce:	18fb      	adds	r3, r7, r3
200013d0:	781b      	ldrb	r3, [r3, #0]
200013d2:	2b07      	cmp	r3, #7
200013d4:	d9a1      	bls.n	2000131a <graphic_draw_screen+0x36>
	for(c = 0; c < 2; c++) {							// loop over both controllers (the two displays)
200013d6:	230d      	movs	r3, #13
200013d8:	18fb      	adds	r3, r7, r3
200013da:	781a      	ldrb	r2, [r3, #0]
200013dc:	230d      	movs	r3, #13
200013de:	18fb      	adds	r3, r7, r3
200013e0:	3201      	adds	r2, #1
200013e2:	701a      	strb	r2, [r3, #0]
200013e4:	230d      	movs	r3, #13
200013e6:	18fb      	adds	r3, r7, r3
200013e8:	781b      	ldrb	r3, [r3, #0]
200013ea:	2b01      	cmp	r3, #1
200013ec:	d986      	bls.n	200012fc <graphic_draw_screen+0x18>
				}
			}
		}
	}
}
200013ee:	46c0      	nop			; (mov r8, r8)
200013f0:	46bd      	mov	sp, r7
200013f2:	b004      	add	sp, #16
200013f4:	bd80      	pop	{r7, pc}
200013f6:	46c0      	nop			; (mov r8, r8)
200013f8:	20006660 	andcs	r6, r0, r0, ror #12
200013fc:	20006664 	andcs	r6, r0, r4, ror #12

20001400 <swapBuffers>:

void swapBuffers(void) {
20001400:	b580      	push	{r7, lr}
20001402:	b082      	sub	sp, #8
20001404:	af00      	add	r7, sp, #0
	graphic_draw_screen();
20001406:	f7ff ff6d 	bl	200012e4 <graphic_draw_screen>
	unsigned char* tmp = frontBuffer; // swap front/backbuffers
2000140a:	4b07      	ldr	r3, [pc, #28]	; (20001428 <swapBuffers+0x28>)
2000140c:	681b      	ldr	r3, [r3, #0]
2000140e:	607b      	str	r3, [r7, #4]
	frontBuffer = backBuffer;
20001410:	4b06      	ldr	r3, [pc, #24]	; (2000142c <swapBuffers+0x2c>)
20001412:	681a      	ldr	r2, [r3, #0]
20001414:	4b04      	ldr	r3, [pc, #16]	; (20001428 <swapBuffers+0x28>)
20001416:	601a      	str	r2, [r3, #0]
	backBuffer = tmp;
20001418:	4b04      	ldr	r3, [pc, #16]	; (2000142c <swapBuffers+0x2c>)
2000141a:	687a      	ldr	r2, [r7, #4]
2000141c:	601a      	str	r2, [r3, #0]
}
2000141e:	46c0      	nop			; (mov r8, r8)
20001420:	46bd      	mov	sp, r7
20001422:	b002      	add	sp, #8
20001424:	bd80      	pop	{r7, pc}
20001426:	46c0      	nop			; (mov r8, r8)
20001428:	20006664 	andcs	r6, r0, r4, ror #12
2000142c:	20006660 	andcs	r6, r0, r0, ror #12

20001430 <activateRow>:
#define KEYPAD_C

#include "ports.h"

//set one of b4-b7 to 1
static void activateRow(int row) {
20001430:	b580      	push	{r7, lr}
20001432:	b082      	sub	sp, #8
20001434:	af00      	add	r7, sp, #0
20001436:	6078      	str	r0, [r7, #4]
	GPIO_D.odrHigh &= ~0xF0;
20001438:	4a0c      	ldr	r2, [pc, #48]	; (2000146c <activateRow+0x3c>)
2000143a:	4b0c      	ldr	r3, [pc, #48]	; (2000146c <activateRow+0x3c>)
2000143c:	7d5b      	ldrb	r3, [r3, #21]
2000143e:	b2db      	uxtb	r3, r3
20001440:	210f      	movs	r1, #15
20001442:	400b      	ands	r3, r1
20001444:	b2db      	uxtb	r3, r3
20001446:	7553      	strb	r3, [r2, #21]
	GPIO_D.odrHigh |= 0x08<<row;
20001448:	4908      	ldr	r1, [pc, #32]	; (2000146c <activateRow+0x3c>)
2000144a:	4b08      	ldr	r3, [pc, #32]	; (2000146c <activateRow+0x3c>)
2000144c:	7d5b      	ldrb	r3, [r3, #21]
2000144e:	b2db      	uxtb	r3, r3
20001450:	b25a      	sxtb	r2, r3
20001452:	2008      	movs	r0, #8
20001454:	687b      	ldr	r3, [r7, #4]
20001456:	4098      	lsls	r0, r3
20001458:	0003      	movs	r3, r0
2000145a:	b25b      	sxtb	r3, r3
2000145c:	4313      	orrs	r3, r2
2000145e:	b25b      	sxtb	r3, r3
20001460:	b2db      	uxtb	r3, r3
20001462:	754b      	strb	r3, [r1, #21]
}
20001464:	46c0      	nop			; (mov r8, r8)
20001466:	46bd      	mov	sp, r7
20001468:	b002      	add	sp, #8
2000146a:	bd80      	pop	{r7, pc}
2000146c:	40020c00 	andmi	r0, r2, r0, lsl #24

20001470 <readColumn>:

//return the column of the pressed key
static int readColumn(void) {
20001470:	b580      	push	{r7, lr}
20001472:	b082      	sub	sp, #8
20001474:	af00      	add	r7, sp, #0
	for(int i=0; i<=4; i++) {
20001476:	2300      	movs	r3, #0
20001478:	607b      	str	r3, [r7, #4]
2000147a:	e00e      	b.n	2000149a <readColumn+0x2a>
		if ( (GPIO_D.idrHigh & 0x0F)>>i == 0 ) {
2000147c:	4b0b      	ldr	r3, [pc, #44]	; (200014ac <readColumn+0x3c>)
2000147e:	7c5b      	ldrb	r3, [r3, #17]
20001480:	b2db      	uxtb	r3, r3
20001482:	001a      	movs	r2, r3
20001484:	230f      	movs	r3, #15
20001486:	401a      	ands	r2, r3
20001488:	687b      	ldr	r3, [r7, #4]
2000148a:	411a      	asrs	r2, r3
2000148c:	1e13      	subs	r3, r2, #0
2000148e:	d101      	bne.n	20001494 <readColumn+0x24>
			return i;
20001490:	687b      	ldr	r3, [r7, #4]
20001492:	e006      	b.n	200014a2 <readColumn+0x32>
	for(int i=0; i<=4; i++) {
20001494:	687b      	ldr	r3, [r7, #4]
20001496:	3301      	adds	r3, #1
20001498:	607b      	str	r3, [r7, #4]
2000149a:	687b      	ldr	r3, [r7, #4]
2000149c:	2b04      	cmp	r3, #4
2000149e:	dded      	ble.n	2000147c <readColumn+0xc>
		}
	}
	return 0;
200014a0:	2300      	movs	r3, #0
}
200014a2:	0018      	movs	r0, r3
200014a4:	46bd      	mov	sp, r7
200014a6:	b002      	add	sp, #8
200014a8:	bd80      	pop	{r7, pc}
200014aa:	46c0      	nop			; (mov r8, r8)
200014ac:	40020c00 	andmi	r0, r2, r0, lsl #24

200014b0 <readColumn1_2>:

static int readColumn1_2(void) {
200014b0:	b580      	push	{r7, lr}
200014b2:	b082      	sub	sp, #8
200014b4:	af00      	add	r7, sp, #0
	for(int i=0; i<=2; i++) {
200014b6:	2300      	movs	r3, #0
200014b8:	607b      	str	r3, [r7, #4]
200014ba:	e00e      	b.n	200014da <readColumn1_2+0x2a>
		if ( (GPIO_D.idrHigh & 0x03)>>i == 0 ) {
200014bc:	4b0b      	ldr	r3, [pc, #44]	; (200014ec <readColumn1_2+0x3c>)
200014be:	7c5b      	ldrb	r3, [r3, #17]
200014c0:	b2db      	uxtb	r3, r3
200014c2:	001a      	movs	r2, r3
200014c4:	2303      	movs	r3, #3
200014c6:	401a      	ands	r2, r3
200014c8:	687b      	ldr	r3, [r7, #4]
200014ca:	411a      	asrs	r2, r3
200014cc:	1e13      	subs	r3, r2, #0
200014ce:	d101      	bne.n	200014d4 <readColumn1_2+0x24>
			return i;
200014d0:	687b      	ldr	r3, [r7, #4]
200014d2:	e006      	b.n	200014e2 <readColumn1_2+0x32>
	for(int i=0; i<=2; i++) {
200014d4:	687b      	ldr	r3, [r7, #4]
200014d6:	3301      	adds	r3, #1
200014d8:	607b      	str	r3, [r7, #4]
200014da:	687b      	ldr	r3, [r7, #4]
200014dc:	2b02      	cmp	r3, #2
200014de:	dded      	ble.n	200014bc <readColumn1_2+0xc>
		}
	}
	return 0;
200014e0:	2300      	movs	r3, #0
}
200014e2:	0018      	movs	r0, r3
200014e4:	46bd      	mov	sp, r7
200014e6:	b002      	add	sp, #8
200014e8:	bd80      	pop	{r7, pc}
200014ea:	46c0      	nop			; (mov r8, r8)
200014ec:	40020c00 	andmi	r0, r2, r0, lsl #24

200014f0 <readColumn3_4>:

static int readColumn3_4(void) {
200014f0:	b580      	push	{r7, lr}
200014f2:	b082      	sub	sp, #8
200014f4:	af00      	add	r7, sp, #0
	for(int i=0; i<=4; i++) {
200014f6:	2300      	movs	r3, #0
200014f8:	607b      	str	r3, [r7, #4]
200014fa:	e00e      	b.n	2000151a <readColumn3_4+0x2a>
		if ( (GPIO_D.idrHigh & 0x0C)>>i == 0 ) {
200014fc:	4b0b      	ldr	r3, [pc, #44]	; (2000152c <readColumn3_4+0x3c>)
200014fe:	7c5b      	ldrb	r3, [r3, #17]
20001500:	b2db      	uxtb	r3, r3
20001502:	001a      	movs	r2, r3
20001504:	230c      	movs	r3, #12
20001506:	401a      	ands	r2, r3
20001508:	687b      	ldr	r3, [r7, #4]
2000150a:	411a      	asrs	r2, r3
2000150c:	1e13      	subs	r3, r2, #0
2000150e:	d101      	bne.n	20001514 <readColumn3_4+0x24>
			return i;
20001510:	687b      	ldr	r3, [r7, #4]
20001512:	e006      	b.n	20001522 <readColumn3_4+0x32>
	for(int i=0; i<=4; i++) {
20001514:	687b      	ldr	r3, [r7, #4]
20001516:	3301      	adds	r3, #1
20001518:	607b      	str	r3, [r7, #4]
2000151a:	687b      	ldr	r3, [r7, #4]
2000151c:	2b04      	cmp	r3, #4
2000151e:	dded      	ble.n	200014fc <readColumn3_4+0xc>
		}
	}
	return 0;
20001520:	2300      	movs	r3, #0
}
20001522:	0018      	movs	r0, r3
20001524:	46bd      	mov	sp, r7
20001526:	b002      	add	sp, #8
20001528:	bd80      	pop	{r7, pc}
2000152a:	46c0      	nop			; (mov r8, r8)
2000152c:	40020c00 	andmi	r0, r2, r0, lsl #24

20001530 <keyb>:

// return the keycode of the pressed key
unsigned char keyb(void) {
20001530:	b580      	push	{r7, lr}
20001532:	b082      	sub	sp, #8
20001534:	af00      	add	r7, sp, #0
	for(int row = 1; row<=4; row++) {
20001536:	2301      	movs	r3, #1
20001538:	607b      	str	r3, [r7, #4]
2000153a:	e034      	b.n	200015a6 <keyb+0x76>
		activateRow(row);
2000153c:	687b      	ldr	r3, [r7, #4]
2000153e:	0018      	movs	r0, r3
20001540:	f7ff ff76 	bl	20001430 <activateRow>
		int column = readColumn();
20001544:	f7ff ff94 	bl	20001470 <readColumn>
20001548:	0003      	movs	r3, r0
2000154a:	603b      	str	r3, [r7, #0]
		
		if (column != 0) {
2000154c:	683b      	ldr	r3, [r7, #0]
2000154e:	2b00      	cmp	r3, #0
20001550:	d026      	beq.n	200015a0 <keyb+0x70>
			if (row<4 && column<4) {
20001552:	687b      	ldr	r3, [r7, #4]
20001554:	2b03      	cmp	r3, #3
20001556:	dc0f      	bgt.n	20001578 <keyb+0x48>
20001558:	683b      	ldr	r3, [r7, #0]
2000155a:	2b03      	cmp	r3, #3
2000155c:	dc0c      	bgt.n	20001578 <keyb+0x48>
				return (row-1)*3+column;
2000155e:	687b      	ldr	r3, [r7, #4]
20001560:	3b01      	subs	r3, #1
20001562:	b2db      	uxtb	r3, r3
20001564:	1c1a      	adds	r2, r3, #0
20001566:	1c13      	adds	r3, r2, #0
20001568:	18db      	adds	r3, r3, r3
2000156a:	189b      	adds	r3, r3, r2
2000156c:	b2da      	uxtb	r2, r3
2000156e:	683b      	ldr	r3, [r7, #0]
20001570:	b2db      	uxtb	r3, r3
20001572:	18d3      	adds	r3, r2, r3
20001574:	b2db      	uxtb	r3, r3
20001576:	e01a      	b.n	200015ae <keyb+0x7e>
			} else if (column==4) {
20001578:	683b      	ldr	r3, [r7, #0]
2000157a:	2b04      	cmp	r3, #4
2000157c:	d104      	bne.n	20001588 <keyb+0x58>
				return 9+row;
2000157e:	687b      	ldr	r3, [r7, #4]
20001580:	b2db      	uxtb	r3, r3
20001582:	3309      	adds	r3, #9
20001584:	b2db      	uxtb	r3, r3
20001586:	e012      	b.n	200015ae <keyb+0x7e>
			} else {
				if (column==1) {
20001588:	683b      	ldr	r3, [r7, #0]
2000158a:	2b01      	cmp	r3, #1
2000158c:	d101      	bne.n	20001592 <keyb+0x62>
					return 14;
2000158e:	230e      	movs	r3, #14
20001590:	e00d      	b.n	200015ae <keyb+0x7e>
				} else if (column==2) {
20001592:	683b      	ldr	r3, [r7, #0]
20001594:	2b02      	cmp	r3, #2
20001596:	d101      	bne.n	2000159c <keyb+0x6c>
					return 0;
20001598:	2300      	movs	r3, #0
2000159a:	e008      	b.n	200015ae <keyb+0x7e>
				} else {
					return 15;
2000159c:	230f      	movs	r3, #15
2000159e:	e006      	b.n	200015ae <keyb+0x7e>
	for(int row = 1; row<=4; row++) {
200015a0:	687b      	ldr	r3, [r7, #4]
200015a2:	3301      	adds	r3, #1
200015a4:	607b      	str	r3, [r7, #4]
200015a6:	687b      	ldr	r3, [r7, #4]
200015a8:	2b04      	cmp	r3, #4
200015aa:	ddc7      	ble.n	2000153c <keyb+0xc>
				}
			}
		}
		
	}
	return 0xFF;
200015ac:	23ff      	movs	r3, #255	; 0xff
}
200015ae:	0018      	movs	r0, r3
200015b0:	46bd      	mov	sp, r7
200015b2:	b002      	add	sp, #8
200015b4:	bd80      	pop	{r7, pc}

200015b6 <keyb1_2>:

// return the keycode of the pressed key from column 1 or 2
unsigned char keyb1_2(void) {
200015b6:	b580      	push	{r7, lr}
200015b8:	b082      	sub	sp, #8
200015ba:	af00      	add	r7, sp, #0
	for(int row = 1; row<=4; row++) {
200015bc:	2301      	movs	r3, #1
200015be:	607b      	str	r3, [r7, #4]
200015c0:	e034      	b.n	2000162c <keyb1_2+0x76>
		activateRow(row);
200015c2:	687b      	ldr	r3, [r7, #4]
200015c4:	0018      	movs	r0, r3
200015c6:	f7ff ff33 	bl	20001430 <activateRow>
		int column = readColumn1_2();
200015ca:	f7ff ff71 	bl	200014b0 <readColumn1_2>
200015ce:	0003      	movs	r3, r0
200015d0:	603b      	str	r3, [r7, #0]
		
		if (column != 0) {
200015d2:	683b      	ldr	r3, [r7, #0]
200015d4:	2b00      	cmp	r3, #0
200015d6:	d026      	beq.n	20001626 <keyb1_2+0x70>
			if (row<4 && column<4) {
200015d8:	687b      	ldr	r3, [r7, #4]
200015da:	2b03      	cmp	r3, #3
200015dc:	dc0f      	bgt.n	200015fe <keyb1_2+0x48>
200015de:	683b      	ldr	r3, [r7, #0]
200015e0:	2b03      	cmp	r3, #3
200015e2:	dc0c      	bgt.n	200015fe <keyb1_2+0x48>
				return (row-1)*3+column;
200015e4:	687b      	ldr	r3, [r7, #4]
200015e6:	3b01      	subs	r3, #1
200015e8:	b2db      	uxtb	r3, r3
200015ea:	1c1a      	adds	r2, r3, #0
200015ec:	1c13      	adds	r3, r2, #0
200015ee:	18db      	adds	r3, r3, r3
200015f0:	189b      	adds	r3, r3, r2
200015f2:	b2da      	uxtb	r2, r3
200015f4:	683b      	ldr	r3, [r7, #0]
200015f6:	b2db      	uxtb	r3, r3
200015f8:	18d3      	adds	r3, r2, r3
200015fa:	b2db      	uxtb	r3, r3
200015fc:	e01a      	b.n	20001634 <keyb1_2+0x7e>
			} else if (column==4) {
200015fe:	683b      	ldr	r3, [r7, #0]
20001600:	2b04      	cmp	r3, #4
20001602:	d104      	bne.n	2000160e <keyb1_2+0x58>
				return 9+row;
20001604:	687b      	ldr	r3, [r7, #4]
20001606:	b2db      	uxtb	r3, r3
20001608:	3309      	adds	r3, #9
2000160a:	b2db      	uxtb	r3, r3
2000160c:	e012      	b.n	20001634 <keyb1_2+0x7e>
			} else {
				if (column==1) {
2000160e:	683b      	ldr	r3, [r7, #0]
20001610:	2b01      	cmp	r3, #1
20001612:	d101      	bne.n	20001618 <keyb1_2+0x62>
					return 14;
20001614:	230e      	movs	r3, #14
20001616:	e00d      	b.n	20001634 <keyb1_2+0x7e>
				} else if (column==2) {
20001618:	683b      	ldr	r3, [r7, #0]
2000161a:	2b02      	cmp	r3, #2
2000161c:	d101      	bne.n	20001622 <keyb1_2+0x6c>
					return 0;
2000161e:	2300      	movs	r3, #0
20001620:	e008      	b.n	20001634 <keyb1_2+0x7e>
				} else {
					return 15;
20001622:	230f      	movs	r3, #15
20001624:	e006      	b.n	20001634 <keyb1_2+0x7e>
	for(int row = 1; row<=4; row++) {
20001626:	687b      	ldr	r3, [r7, #4]
20001628:	3301      	adds	r3, #1
2000162a:	607b      	str	r3, [r7, #4]
2000162c:	687b      	ldr	r3, [r7, #4]
2000162e:	2b04      	cmp	r3, #4
20001630:	ddc7      	ble.n	200015c2 <keyb1_2+0xc>
				}
			}
		}
		
	}
	return 0xFF;
20001632:	23ff      	movs	r3, #255	; 0xff
}
20001634:	0018      	movs	r0, r3
20001636:	46bd      	mov	sp, r7
20001638:	b002      	add	sp, #8
2000163a:	bd80      	pop	{r7, pc}

2000163c <keyb3_4>:

// return the keycode of the pressed key from column 3 or 4
unsigned char keyb3_4(void) {
2000163c:	b580      	push	{r7, lr}
2000163e:	b082      	sub	sp, #8
20001640:	af00      	add	r7, sp, #0
	for(int row = 1; row<=4; row++) {
20001642:	2301      	movs	r3, #1
20001644:	607b      	str	r3, [r7, #4]
20001646:	e034      	b.n	200016b2 <keyb3_4+0x76>
		activateRow(row);
20001648:	687b      	ldr	r3, [r7, #4]
2000164a:	0018      	movs	r0, r3
2000164c:	f7ff fef0 	bl	20001430 <activateRow>
		int column = readColumn3_4();
20001650:	f7ff ff4e 	bl	200014f0 <readColumn3_4>
20001654:	0003      	movs	r3, r0
20001656:	603b      	str	r3, [r7, #0]
		
		if (column != 0) {
20001658:	683b      	ldr	r3, [r7, #0]
2000165a:	2b00      	cmp	r3, #0
2000165c:	d026      	beq.n	200016ac <keyb3_4+0x70>
			if (row<4 && column<4) {
2000165e:	687b      	ldr	r3, [r7, #4]
20001660:	2b03      	cmp	r3, #3
20001662:	dc0f      	bgt.n	20001684 <keyb3_4+0x48>
20001664:	683b      	ldr	r3, [r7, #0]
20001666:	2b03      	cmp	r3, #3
20001668:	dc0c      	bgt.n	20001684 <keyb3_4+0x48>
				return (row-1)*3+column;
2000166a:	687b      	ldr	r3, [r7, #4]
2000166c:	3b01      	subs	r3, #1
2000166e:	b2db      	uxtb	r3, r3
20001670:	1c1a      	adds	r2, r3, #0
20001672:	1c13      	adds	r3, r2, #0
20001674:	18db      	adds	r3, r3, r3
20001676:	189b      	adds	r3, r3, r2
20001678:	b2da      	uxtb	r2, r3
2000167a:	683b      	ldr	r3, [r7, #0]
2000167c:	b2db      	uxtb	r3, r3
2000167e:	18d3      	adds	r3, r2, r3
20001680:	b2db      	uxtb	r3, r3
20001682:	e01a      	b.n	200016ba <keyb3_4+0x7e>
			} else if (column==4) {
20001684:	683b      	ldr	r3, [r7, #0]
20001686:	2b04      	cmp	r3, #4
20001688:	d104      	bne.n	20001694 <keyb3_4+0x58>
				return 9+row;
2000168a:	687b      	ldr	r3, [r7, #4]
2000168c:	b2db      	uxtb	r3, r3
2000168e:	3309      	adds	r3, #9
20001690:	b2db      	uxtb	r3, r3
20001692:	e012      	b.n	200016ba <keyb3_4+0x7e>
			} else {
				if (column==1) {
20001694:	683b      	ldr	r3, [r7, #0]
20001696:	2b01      	cmp	r3, #1
20001698:	d101      	bne.n	2000169e <keyb3_4+0x62>
					return 14;
2000169a:	230e      	movs	r3, #14
2000169c:	e00d      	b.n	200016ba <keyb3_4+0x7e>
				} else if (column==2) {
2000169e:	683b      	ldr	r3, [r7, #0]
200016a0:	2b02      	cmp	r3, #2
200016a2:	d101      	bne.n	200016a8 <keyb3_4+0x6c>
					return 0;
200016a4:	2300      	movs	r3, #0
200016a6:	e008      	b.n	200016ba <keyb3_4+0x7e>
				} else {
					return 15;
200016a8:	230f      	movs	r3, #15
200016aa:	e006      	b.n	200016ba <keyb3_4+0x7e>
	for(int row = 1; row<=4; row++) {
200016ac:	687b      	ldr	r3, [r7, #4]
200016ae:	3301      	adds	r3, #1
200016b0:	607b      	str	r3, [r7, #4]
200016b2:	687b      	ldr	r3, [r7, #4]
200016b4:	2b04      	cmp	r3, #4
200016b6:	ddc7      	ble.n	20001648 <keyb3_4+0xc>
				}
			}
		}
		
	}
	return 0xFF;
200016b8:	23ff      	movs	r3, #255	; 0xff
}
200016ba:	0018      	movs	r0, r3
200016bc:	46bd      	mov	sp, r7
200016be:	b002      	add	sp, #8
200016c0:	bd80      	pop	{r7, pc}
200016c2:	46c0      	nop			; (mov r8, r8)

200016c4 <chooseLevel>:
	{
		{1,1}, {25,1}, {1,12}, {25,12}
	}
};

void chooseLevel(int level) {
200016c4:	b580      	push	{r7, lr}
200016c6:	b082      	sub	sp, #8
200016c8:	af00      	add	r7, sp, #0
200016ca:	6078      	str	r0, [r7, #4]
	switch(level) {
200016cc:	687b      	ldr	r3, [r7, #4]
200016ce:	2b02      	cmp	r3, #2
200016d0:	d00c      	beq.n	200016ec <chooseLevel+0x28>
200016d2:	dc02      	bgt.n	200016da <chooseLevel+0x16>
200016d4:	2b01      	cmp	r3, #1
200016d6:	d005      	beq.n	200016e4 <chooseLevel+0x20>
200016d8:	e014      	b.n	20001704 <chooseLevel+0x40>
200016da:	2b03      	cmp	r3, #3
200016dc:	d00a      	beq.n	200016f4 <chooseLevel+0x30>
200016de:	2b04      	cmp	r3, #4
200016e0:	d00c      	beq.n	200016fc <chooseLevel+0x38>
200016e2:	e00f      	b.n	20001704 <chooseLevel+0x40>
		case 1:
			currentLevel = &level1;
200016e4:	4b0b      	ldr	r3, [pc, #44]	; (20001714 <chooseLevel+0x50>)
200016e6:	4a0c      	ldr	r2, [pc, #48]	; (20001718 <chooseLevel+0x54>)
200016e8:	601a      	str	r2, [r3, #0]
			break;
200016ea:	e00e      	b.n	2000170a <chooseLevel+0x46>
		case 2:
			currentLevel = &level2;
200016ec:	4b09      	ldr	r3, [pc, #36]	; (20001714 <chooseLevel+0x50>)
200016ee:	4a0b      	ldr	r2, [pc, #44]	; (2000171c <chooseLevel+0x58>)
200016f0:	601a      	str	r2, [r3, #0]
			break;
200016f2:	e00a      	b.n	2000170a <chooseLevel+0x46>
		case 3:
			currentLevel = &level3;
200016f4:	4b07      	ldr	r3, [pc, #28]	; (20001714 <chooseLevel+0x50>)
200016f6:	4a0a      	ldr	r2, [pc, #40]	; (20001720 <chooseLevel+0x5c>)
200016f8:	601a      	str	r2, [r3, #0]
			break;
200016fa:	e006      	b.n	2000170a <chooseLevel+0x46>
		case 4:
			currentLevel = &level4;
200016fc:	4b05      	ldr	r3, [pc, #20]	; (20001714 <chooseLevel+0x50>)
200016fe:	4a09      	ldr	r2, [pc, #36]	; (20001724 <chooseLevel+0x60>)
20001700:	601a      	str	r2, [r3, #0]
			break;
20001702:	e002      	b.n	2000170a <chooseLevel+0x46>
		default:
			currentLevel = &level1;
20001704:	4b03      	ldr	r3, [pc, #12]	; (20001714 <chooseLevel+0x50>)
20001706:	4a04      	ldr	r2, [pc, #16]	; (20001718 <chooseLevel+0x54>)
20001708:	601a      	str	r2, [r3, #0]
			
	}
}
2000170a:	46c0      	nop			; (mov r8, r8)
2000170c:	46bd      	mov	sp, r7
2000170e:	b002      	add	sp, #8
20001710:	bd80      	pop	{r7, pc}
20001712:	46c0      	nop			; (mov r8, r8)
20001714:	2000665c 	andcs	r6, r0, ip, asr r6
20001718:	20006668 	andcs	r6, r0, r8, ror #12
2000171c:	20006800 	andcs	r6, r0, r0, lsl #16
20001720:	20006998 	mulcs	r0, r8, r9
20001724:	20006b30 	andcs	r6, r0, r0, lsr fp

20001728 <chooseDot>:

void chooseDot(int r) {
20001728:	b580      	push	{r7, lr}
2000172a:	b084      	sub	sp, #16
2000172c:	af00      	add	r7, sp, #0
2000172e:	6078      	str	r0, [r7, #4]
	int dot = r % currentLevel->numdots;
20001730:	4b0c      	ldr	r3, [pc, #48]	; (20001764 <chooseDot+0x3c>)
20001732:	681b      	ldr	r3, [r3, #0]
20001734:	685a      	ldr	r2, [r3, #4]
20001736:	687b      	ldr	r3, [r7, #4]
20001738:	0011      	movs	r1, r2
2000173a:	0018      	movs	r0, r3
2000173c:	f001 fbc8 	bl	20002ed0 <__aeabi_idivmod>
20001740:	000b      	movs	r3, r1
20001742:	60fb      	str	r3, [r7, #12]
	currentDot = currentLevel->dots[dot];
20001744:	4b07      	ldr	r3, [pc, #28]	; (20001764 <chooseDot+0x3c>)
20001746:	681a      	ldr	r2, [r3, #0]
20001748:	4907      	ldr	r1, [pc, #28]	; (20001768 <chooseDot+0x40>)
2000174a:	68fb      	ldr	r3, [r7, #12]
2000174c:	3368      	adds	r3, #104	; 0x68
2000174e:	005b      	lsls	r3, r3, #1
20001750:	0008      	movs	r0, r1
20001752:	18d3      	adds	r3, r2, r3
20001754:	2202      	movs	r2, #2
20001756:	0019      	movs	r1, r3
20001758:	f003 fa16 	bl	20004b88 <memcpy>
}
2000175c:	46c0      	nop			; (mov r8, r8)
2000175e:	46bd      	mov	sp, r7
20001760:	b004      	add	sp, #16
20001762:	bd80      	pop	{r7, pc}
20001764:	2000665c 	andcs	r6, r0, ip, asr r6
20001768:	20006658 	andcs	r6, r0, r8, asr r6

2000176c <drawDot>:

void drawDot(void) {
2000176c:	b580      	push	{r7, lr}
2000176e:	b084      	sub	sp, #16
20001770:	af00      	add	r7, sp, #0
	int x = currentDot.x;	// x and y in a 25x12 grid
20001772:	4b25      	ldr	r3, [pc, #148]	; (20001808 <drawDot+0x9c>)
20001774:	781b      	ldrb	r3, [r3, #0]
20001776:	60fb      	str	r3, [r7, #12]
	int y = currentDot.y;
20001778:	4b23      	ldr	r3, [pc, #140]	; (20001808 <drawDot+0x9c>)
2000177a:	785b      	ldrb	r3, [r3, #1]
2000177c:	60bb      	str	r3, [r7, #8]
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
2000177e:	68fb      	ldr	r3, [r7, #12]
20001780:	2b00      	cmp	r3, #0
20001782:	dd3d      	ble.n	20001800 <drawDot+0x94>
20001784:	68fb      	ldr	r3, [r7, #12]
20001786:	2b19      	cmp	r3, #25
20001788:	dc3a      	bgt.n	20001800 <drawDot+0x94>
2000178a:	68bb      	ldr	r3, [r7, #8]
2000178c:	2b00      	cmp	r3, #0
2000178e:	dd37      	ble.n	20001800 <drawDot+0x94>
20001790:	68bb      	ldr	r3, [r7, #8]
20001792:	2b0c      	cmp	r3, #12
20001794:	dc34      	bgt.n	20001800 <drawDot+0x94>
	unsigned int i, j;
	
	// coords for top left corner pixel
	int xmin = x*5 - 3;
20001796:	68fa      	ldr	r2, [r7, #12]
20001798:	0013      	movs	r3, r2
2000179a:	009b      	lsls	r3, r3, #2
2000179c:	189b      	adds	r3, r3, r2
2000179e:	3b03      	subs	r3, #3
200017a0:	607b      	str	r3, [r7, #4]
	int ymin = y*5 - 2;
200017a2:	68ba      	ldr	r2, [r7, #8]
200017a4:	0013      	movs	r3, r2
200017a6:	009b      	lsls	r3, r3, #2
200017a8:	189b      	adds	r3, r3, r2
200017aa:	3b02      	subs	r3, #2
200017ac:	603b      	str	r3, [r7, #0]
	
	pixel(xmin+2, ymin+1);
200017ae:	687b      	ldr	r3, [r7, #4]
200017b0:	1c9a      	adds	r2, r3, #2
200017b2:	683b      	ldr	r3, [r7, #0]
200017b4:	3301      	adds	r3, #1
200017b6:	0019      	movs	r1, r3
200017b8:	0010      	movs	r0, r2
200017ba:	f7ff fce5 	bl	20001188 <pixel>
	pixel(xmin+1, ymin+2);
200017be:	687b      	ldr	r3, [r7, #4]
200017c0:	1c5a      	adds	r2, r3, #1
200017c2:	683b      	ldr	r3, [r7, #0]
200017c4:	3302      	adds	r3, #2
200017c6:	0019      	movs	r1, r3
200017c8:	0010      	movs	r0, r2
200017ca:	f7ff fcdd 	bl	20001188 <pixel>
	pixel(xmin+2, ymin+2);
200017ce:	687b      	ldr	r3, [r7, #4]
200017d0:	1c9a      	adds	r2, r3, #2
200017d2:	683b      	ldr	r3, [r7, #0]
200017d4:	3302      	adds	r3, #2
200017d6:	0019      	movs	r1, r3
200017d8:	0010      	movs	r0, r2
200017da:	f7ff fcd5 	bl	20001188 <pixel>
	pixel(xmin+3, ymin+2);
200017de:	687b      	ldr	r3, [r7, #4]
200017e0:	1cda      	adds	r2, r3, #3
200017e2:	683b      	ldr	r3, [r7, #0]
200017e4:	3302      	adds	r3, #2
200017e6:	0019      	movs	r1, r3
200017e8:	0010      	movs	r0, r2
200017ea:	f7ff fccd 	bl	20001188 <pixel>
	pixel(xmin+2, ymin+3);
200017ee:	687b      	ldr	r3, [r7, #4]
200017f0:	1c9a      	adds	r2, r3, #2
200017f2:	683b      	ldr	r3, [r7, #0]
200017f4:	3303      	adds	r3, #3
200017f6:	0019      	movs	r1, r3
200017f8:	0010      	movs	r0, r2
200017fa:	f7ff fcc5 	bl	20001188 <pixel>
200017fe:	e000      	b.n	20001802 <drawDot+0x96>
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
20001800:	46c0      	nop			; (mov r8, r8)
}
20001802:	46bd      	mov	sp, r7
20001804:	b004      	add	sp, #16
20001806:	bd80      	pop	{r7, pc}
20001808:	20006658 	andcs	r6, r0, r8, asr r6

2000180c <drawFrame>:

static void drawFrame(void) {			// 4 side borders
2000180c:	b580      	push	{r7, lr}
2000180e:	b082      	sub	sp, #8
20001810:	af00      	add	r7, sp, #0
	unsigned int i;
	
	for(i=2; i<=63; i++)				// left border
20001812:	2302      	movs	r3, #2
20001814:	607b      	str	r3, [r7, #4]
20001816:	e007      	b.n	20001828 <drawFrame+0x1c>
		pixel(1, i);
20001818:	687b      	ldr	r3, [r7, #4]
2000181a:	0019      	movs	r1, r3
2000181c:	2001      	movs	r0, #1
2000181e:	f7ff fcb3 	bl	20001188 <pixel>
	for(i=2; i<=63; i++)				// left border
20001822:	687b      	ldr	r3, [r7, #4]
20001824:	3301      	adds	r3, #1
20001826:	607b      	str	r3, [r7, #4]
20001828:	687b      	ldr	r3, [r7, #4]
2000182a:	2b3f      	cmp	r3, #63	; 0x3f
2000182c:	d9f4      	bls.n	20001818 <drawFrame+0xc>
	for(i=1; i<=127; i++) {				// top border
2000182e:	2301      	movs	r3, #1
20001830:	607b      	str	r3, [r7, #4]
20001832:	e00c      	b.n	2000184e <drawFrame+0x42>
		pixel(i, 1);
20001834:	687b      	ldr	r3, [r7, #4]
20001836:	2101      	movs	r1, #1
20001838:	0018      	movs	r0, r3
2000183a:	f7ff fca5 	bl	20001188 <pixel>
		pixel(i, 2);
2000183e:	687b      	ldr	r3, [r7, #4]
20001840:	2102      	movs	r1, #2
20001842:	0018      	movs	r0, r3
20001844:	f7ff fca0 	bl	20001188 <pixel>
	for(i=1; i<=127; i++) {				// top border
20001848:	687b      	ldr	r3, [r7, #4]
2000184a:	3301      	adds	r3, #1
2000184c:	607b      	str	r3, [r7, #4]
2000184e:	687b      	ldr	r3, [r7, #4]
20001850:	2b7f      	cmp	r3, #127	; 0x7f
20001852:	d9ef      	bls.n	20001834 <drawFrame+0x28>
	}
	for(i=2; i<=63; i++) {				// right border
20001854:	2302      	movs	r3, #2
20001856:	607b      	str	r3, [r7, #4]
20001858:	e00c      	b.n	20001874 <drawFrame+0x68>
		pixel(127, i);
2000185a:	687b      	ldr	r3, [r7, #4]
2000185c:	0019      	movs	r1, r3
2000185e:	207f      	movs	r0, #127	; 0x7f
20001860:	f7ff fc92 	bl	20001188 <pixel>
		pixel(128, i);
20001864:	687b      	ldr	r3, [r7, #4]
20001866:	0019      	movs	r1, r3
20001868:	2080      	movs	r0, #128	; 0x80
2000186a:	f7ff fc8d 	bl	20001188 <pixel>
	for(i=2; i<=63; i++) {				// right border
2000186e:	687b      	ldr	r3, [r7, #4]
20001870:	3301      	adds	r3, #1
20001872:	607b      	str	r3, [r7, #4]
20001874:	687b      	ldr	r3, [r7, #4]
20001876:	2b3f      	cmp	r3, #63	; 0x3f
20001878:	d9ef      	bls.n	2000185a <drawFrame+0x4e>
	}
	for(i=1; i<=127; i++) {				// bottom border
2000187a:	2301      	movs	r3, #1
2000187c:	607b      	str	r3, [r7, #4]
2000187e:	e00c      	b.n	2000189a <drawFrame+0x8e>
		pixel(i, 63);
20001880:	687b      	ldr	r3, [r7, #4]
20001882:	213f      	movs	r1, #63	; 0x3f
20001884:	0018      	movs	r0, r3
20001886:	f7ff fc7f 	bl	20001188 <pixel>
		pixel(i, 64);
2000188a:	687b      	ldr	r3, [r7, #4]
2000188c:	2140      	movs	r1, #64	; 0x40
2000188e:	0018      	movs	r0, r3
20001890:	f7ff fc7a 	bl	20001188 <pixel>
	for(i=1; i<=127; i++) {				// bottom border
20001894:	687b      	ldr	r3, [r7, #4]
20001896:	3301      	adds	r3, #1
20001898:	607b      	str	r3, [r7, #4]
2000189a:	687b      	ldr	r3, [r7, #4]
2000189c:	2b7f      	cmp	r3, #127	; 0x7f
2000189e:	d9ef      	bls.n	20001880 <drawFrame+0x74>
	}
}
200018a0:	46c0      	nop			; (mov r8, r8)
200018a2:	46bd      	mov	sp, r7
200018a4:	b002      	add	sp, #8
200018a6:	bd80      	pop	{r7, pc}

200018a8 <drawBlock>:

static void drawBlock(int x, int y) {	// x and y in a 25x12 grid, one square = 5x5 pixels
200018a8:	b580      	push	{r7, lr}
200018aa:	b086      	sub	sp, #24
200018ac:	af00      	add	r7, sp, #0
200018ae:	6078      	str	r0, [r7, #4]
200018b0:	6039      	str	r1, [r7, #0]
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
200018b2:	687b      	ldr	r3, [r7, #4]
200018b4:	2b00      	cmp	r3, #0
200018b6:	dd31      	ble.n	2000191c <drawBlock+0x74>
200018b8:	687b      	ldr	r3, [r7, #4]
200018ba:	2b19      	cmp	r3, #25
200018bc:	dc2e      	bgt.n	2000191c <drawBlock+0x74>
200018be:	683b      	ldr	r3, [r7, #0]
200018c0:	2b00      	cmp	r3, #0
200018c2:	dd2b      	ble.n	2000191c <drawBlock+0x74>
200018c4:	683b      	ldr	r3, [r7, #0]
200018c6:	2b0c      	cmp	r3, #12
200018c8:	dc28      	bgt.n	2000191c <drawBlock+0x74>
	unsigned int i, j;
	
	// coords for top left corner pixel
	int xmin = x*5 - 3;
200018ca:	687a      	ldr	r2, [r7, #4]
200018cc:	0013      	movs	r3, r2
200018ce:	009b      	lsls	r3, r3, #2
200018d0:	189b      	adds	r3, r3, r2
200018d2:	3b03      	subs	r3, #3
200018d4:	60fb      	str	r3, [r7, #12]
	int ymin = y*5 - 2;
200018d6:	683a      	ldr	r2, [r7, #0]
200018d8:	0013      	movs	r3, r2
200018da:	009b      	lsls	r3, r3, #2
200018dc:	189b      	adds	r3, r3, r2
200018de:	3b02      	subs	r3, #2
200018e0:	60bb      	str	r3, [r7, #8]
	
	for (i=0; i<5; i++) {				// 5x5 block
200018e2:	2300      	movs	r3, #0
200018e4:	617b      	str	r3, [r7, #20]
200018e6:	e015      	b.n	20001914 <drawBlock+0x6c>
		for (j=0; j<5; j++) {
200018e8:	2300      	movs	r3, #0
200018ea:	613b      	str	r3, [r7, #16]
200018ec:	e00c      	b.n	20001908 <drawBlock+0x60>
			pixel(xmin+i, ymin+j);
200018ee:	68fa      	ldr	r2, [r7, #12]
200018f0:	697b      	ldr	r3, [r7, #20]
200018f2:	18d3      	adds	r3, r2, r3
200018f4:	0018      	movs	r0, r3
200018f6:	68ba      	ldr	r2, [r7, #8]
200018f8:	693b      	ldr	r3, [r7, #16]
200018fa:	18d3      	adds	r3, r2, r3
200018fc:	0019      	movs	r1, r3
200018fe:	f7ff fc43 	bl	20001188 <pixel>
		for (j=0; j<5; j++) {
20001902:	693b      	ldr	r3, [r7, #16]
20001904:	3301      	adds	r3, #1
20001906:	613b      	str	r3, [r7, #16]
20001908:	693b      	ldr	r3, [r7, #16]
2000190a:	2b04      	cmp	r3, #4
2000190c:	d9ef      	bls.n	200018ee <drawBlock+0x46>
	for (i=0; i<5; i++) {				// 5x5 block
2000190e:	697b      	ldr	r3, [r7, #20]
20001910:	3301      	adds	r3, #1
20001912:	617b      	str	r3, [r7, #20]
20001914:	697b      	ldr	r3, [r7, #20]
20001916:	2b04      	cmp	r3, #4
20001918:	d9e6      	bls.n	200018e8 <drawBlock+0x40>
2000191a:	e000      	b.n	2000191e <drawBlock+0x76>
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
2000191c:	46c0      	nop			; (mov r8, r8)
		}
	}
}
2000191e:	46bd      	mov	sp, r7
20001920:	b006      	add	sp, #24
20001922:	bd80      	pop	{r7, pc}

20001924 <drawLevel>:

void drawLevel(void) {
20001924:	b580      	push	{r7, lr}
20001926:	b082      	sub	sp, #8
20001928:	af00      	add	r7, sp, #0
	drawFrame();
2000192a:	f7ff ff6f 	bl	2000180c <drawFrame>
	for (int i = 0; i < currentLevel->numpoints; i++)
2000192e:	2300      	movs	r3, #0
20001930:	607b      	str	r3, [r7, #4]
20001932:	e014      	b.n	2000195e <drawLevel+0x3a>
		drawBlock(currentLevel->px[i].x, currentLevel->px[i].y);
20001934:	4b0f      	ldr	r3, [pc, #60]	; (20001974 <drawLevel+0x50>)
20001936:	681b      	ldr	r3, [r3, #0]
20001938:	687a      	ldr	r2, [r7, #4]
2000193a:	3204      	adds	r2, #4
2000193c:	0052      	lsls	r2, r2, #1
2000193e:	5cd3      	ldrb	r3, [r2, r3]
20001940:	0018      	movs	r0, r3
20001942:	4b0c      	ldr	r3, [pc, #48]	; (20001974 <drawLevel+0x50>)
20001944:	681a      	ldr	r2, [r3, #0]
20001946:	687b      	ldr	r3, [r7, #4]
20001948:	3304      	adds	r3, #4
2000194a:	005b      	lsls	r3, r3, #1
2000194c:	18d3      	adds	r3, r2, r3
2000194e:	3301      	adds	r3, #1
20001950:	781b      	ldrb	r3, [r3, #0]
20001952:	0019      	movs	r1, r3
20001954:	f7ff ffa8 	bl	200018a8 <drawBlock>
	for (int i = 0; i < currentLevel->numpoints; i++)
20001958:	687b      	ldr	r3, [r7, #4]
2000195a:	3301      	adds	r3, #1
2000195c:	607b      	str	r3, [r7, #4]
2000195e:	4b05      	ldr	r3, [pc, #20]	; (20001974 <drawLevel+0x50>)
20001960:	681b      	ldr	r3, [r3, #0]
20001962:	681a      	ldr	r2, [r3, #0]
20001964:	687b      	ldr	r3, [r7, #4]
20001966:	429a      	cmp	r2, r3
20001968:	dce4      	bgt.n	20001934 <drawLevel+0x10>
}
2000196a:	46c0      	nop			; (mov r8, r8)
2000196c:	46bd      	mov	sp, r7
2000196e:	b002      	add	sp, #8
20001970:	bd80      	pop	{r7, pc}
20001972:	46c0      	nop			; (mov r8, r8)
20001974:	2000665c 	andcs	r6, r0, ip, asr r6

20001978 <drawFrameMiniature>:

static void drawFrameMiniature(int xoff, int yoff) {	// SIMULATOR, 4 miniature side borders
20001978:	b580      	push	{r7, lr}
2000197a:	b084      	sub	sp, #16
2000197c:	af00      	add	r7, sp, #0
2000197e:	6078      	str	r0, [r7, #4]
20001980:	6039      	str	r1, [r7, #0]
	unsigned int i;
	
	for(i=1+yoff; i<=26+yoff; i++)		// left border
20001982:	683b      	ldr	r3, [r7, #0]
20001984:	3301      	adds	r3, #1
20001986:	60fb      	str	r3, [r7, #12]
20001988:	e009      	b.n	2000199e <drawFrameMiniature+0x26>
		pixel(1+xoff, i);
2000198a:	687b      	ldr	r3, [r7, #4]
2000198c:	3301      	adds	r3, #1
2000198e:	68fa      	ldr	r2, [r7, #12]
20001990:	0011      	movs	r1, r2
20001992:	0018      	movs	r0, r3
20001994:	f7ff fbf8 	bl	20001188 <pixel>
	for(i=1+yoff; i<=26+yoff; i++)		// left border
20001998:	68fb      	ldr	r3, [r7, #12]
2000199a:	3301      	adds	r3, #1
2000199c:	60fb      	str	r3, [r7, #12]
2000199e:	683b      	ldr	r3, [r7, #0]
200019a0:	331a      	adds	r3, #26
200019a2:	001a      	movs	r2, r3
200019a4:	68fb      	ldr	r3, [r7, #12]
200019a6:	429a      	cmp	r2, r3
200019a8:	d2ef      	bcs.n	2000198a <drawFrameMiniature+0x12>
	for(i=1+xoff; i<=52+xoff; i++)		// top border
200019aa:	687b      	ldr	r3, [r7, #4]
200019ac:	3301      	adds	r3, #1
200019ae:	60fb      	str	r3, [r7, #12]
200019b0:	e009      	b.n	200019c6 <drawFrameMiniature+0x4e>
		pixel(i, 1+yoff);
200019b2:	68fa      	ldr	r2, [r7, #12]
200019b4:	683b      	ldr	r3, [r7, #0]
200019b6:	3301      	adds	r3, #1
200019b8:	0019      	movs	r1, r3
200019ba:	0010      	movs	r0, r2
200019bc:	f7ff fbe4 	bl	20001188 <pixel>
	for(i=1+xoff; i<=52+xoff; i++)		// top border
200019c0:	68fb      	ldr	r3, [r7, #12]
200019c2:	3301      	adds	r3, #1
200019c4:	60fb      	str	r3, [r7, #12]
200019c6:	687b      	ldr	r3, [r7, #4]
200019c8:	3334      	adds	r3, #52	; 0x34
200019ca:	001a      	movs	r2, r3
200019cc:	68fb      	ldr	r3, [r7, #12]
200019ce:	429a      	cmp	r2, r3
200019d0:	d2ef      	bcs.n	200019b2 <drawFrameMiniature+0x3a>
	for(i=1+yoff; i<=26+yoff; i++)		// right border
200019d2:	683b      	ldr	r3, [r7, #0]
200019d4:	3301      	adds	r3, #1
200019d6:	60fb      	str	r3, [r7, #12]
200019d8:	e009      	b.n	200019ee <drawFrameMiniature+0x76>
		pixel(52+xoff, i);
200019da:	687b      	ldr	r3, [r7, #4]
200019dc:	3334      	adds	r3, #52	; 0x34
200019de:	68fa      	ldr	r2, [r7, #12]
200019e0:	0011      	movs	r1, r2
200019e2:	0018      	movs	r0, r3
200019e4:	f7ff fbd0 	bl	20001188 <pixel>
	for(i=1+yoff; i<=26+yoff; i++)		// right border
200019e8:	68fb      	ldr	r3, [r7, #12]
200019ea:	3301      	adds	r3, #1
200019ec:	60fb      	str	r3, [r7, #12]
200019ee:	683b      	ldr	r3, [r7, #0]
200019f0:	331a      	adds	r3, #26
200019f2:	001a      	movs	r2, r3
200019f4:	68fb      	ldr	r3, [r7, #12]
200019f6:	429a      	cmp	r2, r3
200019f8:	d2ef      	bcs.n	200019da <drawFrameMiniature+0x62>
	for(i=1+xoff; i<=52+xoff; i++)		// bottom border
200019fa:	687b      	ldr	r3, [r7, #4]
200019fc:	3301      	adds	r3, #1
200019fe:	60fb      	str	r3, [r7, #12]
20001a00:	e009      	b.n	20001a16 <drawFrameMiniature+0x9e>
		pixel(i, 26+yoff);
20001a02:	68fa      	ldr	r2, [r7, #12]
20001a04:	683b      	ldr	r3, [r7, #0]
20001a06:	331a      	adds	r3, #26
20001a08:	0019      	movs	r1, r3
20001a0a:	0010      	movs	r0, r2
20001a0c:	f7ff fbbc 	bl	20001188 <pixel>
	for(i=1+xoff; i<=52+xoff; i++)		// bottom border
20001a10:	68fb      	ldr	r3, [r7, #12]
20001a12:	3301      	adds	r3, #1
20001a14:	60fb      	str	r3, [r7, #12]
20001a16:	687b      	ldr	r3, [r7, #4]
20001a18:	3334      	adds	r3, #52	; 0x34
20001a1a:	001a      	movs	r2, r3
20001a1c:	68fb      	ldr	r3, [r7, #12]
20001a1e:	429a      	cmp	r2, r3
20001a20:	d2ef      	bcs.n	20001a02 <drawFrameMiniature+0x8a>
}
20001a22:	46c0      	nop			; (mov r8, r8)
20001a24:	46bd      	mov	sp, r7
20001a26:	b004      	add	sp, #16
20001a28:	bd80      	pop	{r7, pc}

20001a2a <drawBlockMiniature>:

static void drawBlockMiniature(int x, int y) {	// x and y in a 64x32 grid, one square = 2x2 pixels
20001a2a:	b580      	push	{r7, lr}
20001a2c:	b086      	sub	sp, #24
20001a2e:	af00      	add	r7, sp, #0
20001a30:	6078      	str	r0, [r7, #4]
20001a32:	6039      	str	r1, [r7, #0]
	if((x < 1) || (x > 64) || (y < 1) || (y > 32)) return;
20001a34:	687b      	ldr	r3, [r7, #4]
20001a36:	2b00      	cmp	r3, #0
20001a38:	dd2d      	ble.n	20001a96 <drawBlockMiniature+0x6c>
20001a3a:	687b      	ldr	r3, [r7, #4]
20001a3c:	2b40      	cmp	r3, #64	; 0x40
20001a3e:	dc2a      	bgt.n	20001a96 <drawBlockMiniature+0x6c>
20001a40:	683b      	ldr	r3, [r7, #0]
20001a42:	2b00      	cmp	r3, #0
20001a44:	dd27      	ble.n	20001a96 <drawBlockMiniature+0x6c>
20001a46:	683b      	ldr	r3, [r7, #0]
20001a48:	2b20      	cmp	r3, #32
20001a4a:	dc24      	bgt.n	20001a96 <drawBlockMiniature+0x6c>
	unsigned int i, j;
	
	// coords for top left corner pixel
	int xmin = x*2 - 1;
20001a4c:	687b      	ldr	r3, [r7, #4]
20001a4e:	005b      	lsls	r3, r3, #1
20001a50:	3b01      	subs	r3, #1
20001a52:	60fb      	str	r3, [r7, #12]
	int ymin = y*2 - 1;
20001a54:	683b      	ldr	r3, [r7, #0]
20001a56:	005b      	lsls	r3, r3, #1
20001a58:	3b01      	subs	r3, #1
20001a5a:	60bb      	str	r3, [r7, #8]
	
	for (i=0; i<2; i++) {				// 5x5 block
20001a5c:	2300      	movs	r3, #0
20001a5e:	617b      	str	r3, [r7, #20]
20001a60:	e015      	b.n	20001a8e <drawBlockMiniature+0x64>
		for (j=0; j<2; j++) {
20001a62:	2300      	movs	r3, #0
20001a64:	613b      	str	r3, [r7, #16]
20001a66:	e00c      	b.n	20001a82 <drawBlockMiniature+0x58>
			pixel(xmin+i, ymin+j);
20001a68:	68fa      	ldr	r2, [r7, #12]
20001a6a:	697b      	ldr	r3, [r7, #20]
20001a6c:	18d3      	adds	r3, r2, r3
20001a6e:	0018      	movs	r0, r3
20001a70:	68ba      	ldr	r2, [r7, #8]
20001a72:	693b      	ldr	r3, [r7, #16]
20001a74:	18d3      	adds	r3, r2, r3
20001a76:	0019      	movs	r1, r3
20001a78:	f7ff fb86 	bl	20001188 <pixel>
		for (j=0; j<2; j++) {
20001a7c:	693b      	ldr	r3, [r7, #16]
20001a7e:	3301      	adds	r3, #1
20001a80:	613b      	str	r3, [r7, #16]
20001a82:	693b      	ldr	r3, [r7, #16]
20001a84:	2b01      	cmp	r3, #1
20001a86:	d9ef      	bls.n	20001a68 <drawBlockMiniature+0x3e>
	for (i=0; i<2; i++) {				// 5x5 block
20001a88:	697b      	ldr	r3, [r7, #20]
20001a8a:	3301      	adds	r3, #1
20001a8c:	617b      	str	r3, [r7, #20]
20001a8e:	697b      	ldr	r3, [r7, #20]
20001a90:	2b01      	cmp	r3, #1
20001a92:	d9e6      	bls.n	20001a62 <drawBlockMiniature+0x38>
20001a94:	e000      	b.n	20001a98 <drawBlockMiniature+0x6e>
	if((x < 1) || (x > 64) || (y < 1) || (y > 32)) return;
20001a96:	46c0      	nop			; (mov r8, r8)
		}
	}
}
20001a98:	46bd      	mov	sp, r7
20001a9a:	b006      	add	sp, #24
20001a9c:	bd80      	pop	{r7, pc}

20001a9e <drawLevelSelectScreen>:

void drawLevelSelectScreen(void) {
20001a9e:	b580      	push	{r7, lr}
20001aa0:	b084      	sub	sp, #16
20001aa2:	af00      	add	r7, sp, #0
	unsigned int i;
	
	int xoff = 9;
20001aa4:	2309      	movs	r3, #9
20001aa6:	60bb      	str	r3, [r7, #8]
	int yoff = 3;
20001aa8:	2303      	movs	r3, #3
20001aaa:	607b      	str	r3, [r7, #4]
	drawFrameMiniature(xoff, yoff);
20001aac:	687a      	ldr	r2, [r7, #4]
20001aae:	68bb      	ldr	r3, [r7, #8]
20001ab0:	0011      	movs	r1, r2
20001ab2:	0018      	movs	r0, r3
20001ab4:	f7ff ff60 	bl	20001978 <drawFrameMiniature>
	for (i = 0; i < level1.numpoints; i++)
20001ab8:	2300      	movs	r3, #0
20001aba:	60fb      	str	r3, [r7, #12]
20001abc:	e021      	b.n	20001b02 <drawLevelSelectScreen+0x64>
		drawBlockMiniature(level1.px[i].x+(xoff+1)/2, level1.px[i].y+(yoff+1)/2);
20001abe:	4b65      	ldr	r3, [pc, #404]	; (20001c54 <drawLevelSelectScreen+0x1b6>)
20001ac0:	68fa      	ldr	r2, [r7, #12]
20001ac2:	3204      	adds	r2, #4
20001ac4:	0052      	lsls	r2, r2, #1
20001ac6:	5cd3      	ldrb	r3, [r2, r3]
20001ac8:	001a      	movs	r2, r3
20001aca:	68bb      	ldr	r3, [r7, #8]
20001acc:	3301      	adds	r3, #1
20001ace:	2b00      	cmp	r3, #0
20001ad0:	da00      	bge.n	20001ad4 <drawLevelSelectScreen+0x36>
20001ad2:	3301      	adds	r3, #1
20001ad4:	105b      	asrs	r3, r3, #1
20001ad6:	18d0      	adds	r0, r2, r3
20001ad8:	4a5e      	ldr	r2, [pc, #376]	; (20001c54 <drawLevelSelectScreen+0x1b6>)
20001ada:	68fb      	ldr	r3, [r7, #12]
20001adc:	3304      	adds	r3, #4
20001ade:	005b      	lsls	r3, r3, #1
20001ae0:	18d3      	adds	r3, r2, r3
20001ae2:	3301      	adds	r3, #1
20001ae4:	781b      	ldrb	r3, [r3, #0]
20001ae6:	001a      	movs	r2, r3
20001ae8:	687b      	ldr	r3, [r7, #4]
20001aea:	3301      	adds	r3, #1
20001aec:	2b00      	cmp	r3, #0
20001aee:	da00      	bge.n	20001af2 <drawLevelSelectScreen+0x54>
20001af0:	3301      	adds	r3, #1
20001af2:	105b      	asrs	r3, r3, #1
20001af4:	18d3      	adds	r3, r2, r3
20001af6:	0019      	movs	r1, r3
20001af8:	f7ff ff97 	bl	20001a2a <drawBlockMiniature>
	for (i = 0; i < level1.numpoints; i++)
20001afc:	68fb      	ldr	r3, [r7, #12]
20001afe:	3301      	adds	r3, #1
20001b00:	60fb      	str	r3, [r7, #12]
20001b02:	4b54      	ldr	r3, [pc, #336]	; (20001c54 <drawLevelSelectScreen+0x1b6>)
20001b04:	681b      	ldr	r3, [r3, #0]
20001b06:	001a      	movs	r2, r3
20001b08:	68fb      	ldr	r3, [r7, #12]
20001b0a:	429a      	cmp	r2, r3
20001b0c:	d8d7      	bhi.n	20001abe <drawLevelSelectScreen+0x20>
		
	xoff = 67;
20001b0e:	2343      	movs	r3, #67	; 0x43
20001b10:	60bb      	str	r3, [r7, #8]
	yoff = 3;
20001b12:	2303      	movs	r3, #3
20001b14:	607b      	str	r3, [r7, #4]
	drawFrameMiniature(xoff, yoff);
20001b16:	687a      	ldr	r2, [r7, #4]
20001b18:	68bb      	ldr	r3, [r7, #8]
20001b1a:	0011      	movs	r1, r2
20001b1c:	0018      	movs	r0, r3
20001b1e:	f7ff ff2b 	bl	20001978 <drawFrameMiniature>
	for (i = 0; i < level2.numpoints; i++)
20001b22:	2300      	movs	r3, #0
20001b24:	60fb      	str	r3, [r7, #12]
20001b26:	e021      	b.n	20001b6c <drawLevelSelectScreen+0xce>
		drawBlockMiniature(level2.px[i].x+(xoff+1)/2, level2.px[i].y+(yoff+1)/2);
20001b28:	4b4b      	ldr	r3, [pc, #300]	; (20001c58 <drawLevelSelectScreen+0x1ba>)
20001b2a:	68fa      	ldr	r2, [r7, #12]
20001b2c:	3204      	adds	r2, #4
20001b2e:	0052      	lsls	r2, r2, #1
20001b30:	5cd3      	ldrb	r3, [r2, r3]
20001b32:	001a      	movs	r2, r3
20001b34:	68bb      	ldr	r3, [r7, #8]
20001b36:	3301      	adds	r3, #1
20001b38:	2b00      	cmp	r3, #0
20001b3a:	da00      	bge.n	20001b3e <drawLevelSelectScreen+0xa0>
20001b3c:	3301      	adds	r3, #1
20001b3e:	105b      	asrs	r3, r3, #1
20001b40:	18d0      	adds	r0, r2, r3
20001b42:	4a45      	ldr	r2, [pc, #276]	; (20001c58 <drawLevelSelectScreen+0x1ba>)
20001b44:	68fb      	ldr	r3, [r7, #12]
20001b46:	3304      	adds	r3, #4
20001b48:	005b      	lsls	r3, r3, #1
20001b4a:	18d3      	adds	r3, r2, r3
20001b4c:	3301      	adds	r3, #1
20001b4e:	781b      	ldrb	r3, [r3, #0]
20001b50:	001a      	movs	r2, r3
20001b52:	687b      	ldr	r3, [r7, #4]
20001b54:	3301      	adds	r3, #1
20001b56:	2b00      	cmp	r3, #0
20001b58:	da00      	bge.n	20001b5c <drawLevelSelectScreen+0xbe>
20001b5a:	3301      	adds	r3, #1
20001b5c:	105b      	asrs	r3, r3, #1
20001b5e:	18d3      	adds	r3, r2, r3
20001b60:	0019      	movs	r1, r3
20001b62:	f7ff ff62 	bl	20001a2a <drawBlockMiniature>
	for (i = 0; i < level2.numpoints; i++)
20001b66:	68fb      	ldr	r3, [r7, #12]
20001b68:	3301      	adds	r3, #1
20001b6a:	60fb      	str	r3, [r7, #12]
20001b6c:	4b3a      	ldr	r3, [pc, #232]	; (20001c58 <drawLevelSelectScreen+0x1ba>)
20001b6e:	681b      	ldr	r3, [r3, #0]
20001b70:	001a      	movs	r2, r3
20001b72:	68fb      	ldr	r3, [r7, #12]
20001b74:	429a      	cmp	r2, r3
20001b76:	d8d7      	bhi.n	20001b28 <drawLevelSelectScreen+0x8a>
		
	xoff = 9;
20001b78:	2309      	movs	r3, #9
20001b7a:	60bb      	str	r3, [r7, #8]
	yoff = 35;
20001b7c:	2323      	movs	r3, #35	; 0x23
20001b7e:	607b      	str	r3, [r7, #4]
	drawFrameMiniature(xoff, yoff);
20001b80:	687a      	ldr	r2, [r7, #4]
20001b82:	68bb      	ldr	r3, [r7, #8]
20001b84:	0011      	movs	r1, r2
20001b86:	0018      	movs	r0, r3
20001b88:	f7ff fef6 	bl	20001978 <drawFrameMiniature>
	for (i = 0; i < level3.numpoints; i++)
20001b8c:	2300      	movs	r3, #0
20001b8e:	60fb      	str	r3, [r7, #12]
20001b90:	e021      	b.n	20001bd6 <drawLevelSelectScreen+0x138>
		drawBlockMiniature(level3.px[i].x+(xoff+1)/2, level3.px[i].y+(yoff+1)/2);
20001b92:	4b32      	ldr	r3, [pc, #200]	; (20001c5c <drawLevelSelectScreen+0x1be>)
20001b94:	68fa      	ldr	r2, [r7, #12]
20001b96:	3204      	adds	r2, #4
20001b98:	0052      	lsls	r2, r2, #1
20001b9a:	5cd3      	ldrb	r3, [r2, r3]
20001b9c:	001a      	movs	r2, r3
20001b9e:	68bb      	ldr	r3, [r7, #8]
20001ba0:	3301      	adds	r3, #1
20001ba2:	2b00      	cmp	r3, #0
20001ba4:	da00      	bge.n	20001ba8 <drawLevelSelectScreen+0x10a>
20001ba6:	3301      	adds	r3, #1
20001ba8:	105b      	asrs	r3, r3, #1
20001baa:	18d0      	adds	r0, r2, r3
20001bac:	4a2b      	ldr	r2, [pc, #172]	; (20001c5c <drawLevelSelectScreen+0x1be>)
20001bae:	68fb      	ldr	r3, [r7, #12]
20001bb0:	3304      	adds	r3, #4
20001bb2:	005b      	lsls	r3, r3, #1
20001bb4:	18d3      	adds	r3, r2, r3
20001bb6:	3301      	adds	r3, #1
20001bb8:	781b      	ldrb	r3, [r3, #0]
20001bba:	001a      	movs	r2, r3
20001bbc:	687b      	ldr	r3, [r7, #4]
20001bbe:	3301      	adds	r3, #1
20001bc0:	2b00      	cmp	r3, #0
20001bc2:	da00      	bge.n	20001bc6 <drawLevelSelectScreen+0x128>
20001bc4:	3301      	adds	r3, #1
20001bc6:	105b      	asrs	r3, r3, #1
20001bc8:	18d3      	adds	r3, r2, r3
20001bca:	0019      	movs	r1, r3
20001bcc:	f7ff ff2d 	bl	20001a2a <drawBlockMiniature>
	for (i = 0; i < level3.numpoints; i++)
20001bd0:	68fb      	ldr	r3, [r7, #12]
20001bd2:	3301      	adds	r3, #1
20001bd4:	60fb      	str	r3, [r7, #12]
20001bd6:	4b21      	ldr	r3, [pc, #132]	; (20001c5c <drawLevelSelectScreen+0x1be>)
20001bd8:	681b      	ldr	r3, [r3, #0]
20001bda:	001a      	movs	r2, r3
20001bdc:	68fb      	ldr	r3, [r7, #12]
20001bde:	429a      	cmp	r2, r3
20001be0:	d8d7      	bhi.n	20001b92 <drawLevelSelectScreen+0xf4>
		
	xoff = 67;
20001be2:	2343      	movs	r3, #67	; 0x43
20001be4:	60bb      	str	r3, [r7, #8]
	yoff = 35;
20001be6:	2323      	movs	r3, #35	; 0x23
20001be8:	607b      	str	r3, [r7, #4]
	drawFrameMiniature(xoff, yoff);
20001bea:	687a      	ldr	r2, [r7, #4]
20001bec:	68bb      	ldr	r3, [r7, #8]
20001bee:	0011      	movs	r1, r2
20001bf0:	0018      	movs	r0, r3
20001bf2:	f7ff fec1 	bl	20001978 <drawFrameMiniature>
	for (i = 0; i < level4.numpoints; i++)
20001bf6:	2300      	movs	r3, #0
20001bf8:	60fb      	str	r3, [r7, #12]
20001bfa:	e021      	b.n	20001c40 <drawLevelSelectScreen+0x1a2>
		drawBlockMiniature(level4.px[i].x+(xoff+1)/2, level4.px[i].y+(yoff+1)/2);
20001bfc:	4b18      	ldr	r3, [pc, #96]	; (20001c60 <drawLevelSelectScreen+0x1c2>)
20001bfe:	68fa      	ldr	r2, [r7, #12]
20001c00:	3204      	adds	r2, #4
20001c02:	0052      	lsls	r2, r2, #1
20001c04:	5cd3      	ldrb	r3, [r2, r3]
20001c06:	001a      	movs	r2, r3
20001c08:	68bb      	ldr	r3, [r7, #8]
20001c0a:	3301      	adds	r3, #1
20001c0c:	2b00      	cmp	r3, #0
20001c0e:	da00      	bge.n	20001c12 <drawLevelSelectScreen+0x174>
20001c10:	3301      	adds	r3, #1
20001c12:	105b      	asrs	r3, r3, #1
20001c14:	18d0      	adds	r0, r2, r3
20001c16:	4a12      	ldr	r2, [pc, #72]	; (20001c60 <drawLevelSelectScreen+0x1c2>)
20001c18:	68fb      	ldr	r3, [r7, #12]
20001c1a:	3304      	adds	r3, #4
20001c1c:	005b      	lsls	r3, r3, #1
20001c1e:	18d3      	adds	r3, r2, r3
20001c20:	3301      	adds	r3, #1
20001c22:	781b      	ldrb	r3, [r3, #0]
20001c24:	001a      	movs	r2, r3
20001c26:	687b      	ldr	r3, [r7, #4]
20001c28:	3301      	adds	r3, #1
20001c2a:	2b00      	cmp	r3, #0
20001c2c:	da00      	bge.n	20001c30 <drawLevelSelectScreen+0x192>
20001c2e:	3301      	adds	r3, #1
20001c30:	105b      	asrs	r3, r3, #1
20001c32:	18d3      	adds	r3, r2, r3
20001c34:	0019      	movs	r1, r3
20001c36:	f7ff fef8 	bl	20001a2a <drawBlockMiniature>
	for (i = 0; i < level4.numpoints; i++)
20001c3a:	68fb      	ldr	r3, [r7, #12]
20001c3c:	3301      	adds	r3, #1
20001c3e:	60fb      	str	r3, [r7, #12]
20001c40:	4b07      	ldr	r3, [pc, #28]	; (20001c60 <drawLevelSelectScreen+0x1c2>)
20001c42:	681b      	ldr	r3, [r3, #0]
20001c44:	001a      	movs	r2, r3
20001c46:	68fb      	ldr	r3, [r7, #12]
20001c48:	429a      	cmp	r2, r3
20001c4a:	d8d7      	bhi.n	20001bfc <drawLevelSelectScreen+0x15e>
}
20001c4c:	46c0      	nop			; (mov r8, r8)
20001c4e:	46bd      	mov	sp, r7
20001c50:	b004      	add	sp, #16
20001c52:	bd80      	pop	{r7, pc}
20001c54:	20006668 	andcs	r6, r0, r8, ror #12
20001c58:	20006800 	andcs	r6, r0, r0, lsl #16
20001c5c:	20006998 	mulcs	r0, r8, r9
20001c60:	20006b30 	andcs	r6, r0, r0, lsr fp

20001c64 <drawDotSim>:

/* --------------------SIM-------------------- */
void drawDotSim(void) {
20001c64:	b580      	push	{r7, lr}
20001c66:	b084      	sub	sp, #16
20001c68:	af00      	add	r7, sp, #0
	int x = currentDot.x;	// x and y in a 25x12 grid
20001c6a:	4b25      	ldr	r3, [pc, #148]	; (20001d00 <drawDotSim+0x9c>)
20001c6c:	781b      	ldrb	r3, [r3, #0]
20001c6e:	60fb      	str	r3, [r7, #12]
	int y = currentDot.y;
20001c70:	4b23      	ldr	r3, [pc, #140]	; (20001d00 <drawDotSim+0x9c>)
20001c72:	785b      	ldrb	r3, [r3, #1]
20001c74:	60bb      	str	r3, [r7, #8]
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
20001c76:	68fb      	ldr	r3, [r7, #12]
20001c78:	2b00      	cmp	r3, #0
20001c7a:	dd3d      	ble.n	20001cf8 <drawDotSim+0x94>
20001c7c:	68fb      	ldr	r3, [r7, #12]
20001c7e:	2b19      	cmp	r3, #25
20001c80:	dc3a      	bgt.n	20001cf8 <drawDotSim+0x94>
20001c82:	68bb      	ldr	r3, [r7, #8]
20001c84:	2b00      	cmp	r3, #0
20001c86:	dd37      	ble.n	20001cf8 <drawDotSim+0x94>
20001c88:	68bb      	ldr	r3, [r7, #8]
20001c8a:	2b0c      	cmp	r3, #12
20001c8c:	dc34      	bgt.n	20001cf8 <drawDotSim+0x94>
	unsigned int i, j;
	
	// coords for top left corner pixel
	int xmin = x*5 - 3;
20001c8e:	68fa      	ldr	r2, [r7, #12]
20001c90:	0013      	movs	r3, r2
20001c92:	009b      	lsls	r3, r3, #2
20001c94:	189b      	adds	r3, r3, r2
20001c96:	3b03      	subs	r3, #3
20001c98:	607b      	str	r3, [r7, #4]
	int ymin = y*5 - 2;
20001c9a:	68ba      	ldr	r2, [r7, #8]
20001c9c:	0013      	movs	r3, r2
20001c9e:	009b      	lsls	r3, r3, #2
20001ca0:	189b      	adds	r3, r3, r2
20001ca2:	3b02      	subs	r3, #2
20001ca4:	603b      	str	r3, [r7, #0]
	
	pixelSim(xmin+2, ymin+1, 1);
20001ca6:	687b      	ldr	r3, [r7, #4]
20001ca8:	1c98      	adds	r0, r3, #2
20001caa:	683b      	ldr	r3, [r7, #0]
20001cac:	3301      	adds	r3, #1
20001cae:	2201      	movs	r2, #1
20001cb0:	0019      	movs	r1, r3
20001cb2:	f7ff f983 	bl	20000fbc <pixelSim>
	pixelSim(xmin+1, ymin+2, 1);
20001cb6:	687b      	ldr	r3, [r7, #4]
20001cb8:	1c58      	adds	r0, r3, #1
20001cba:	683b      	ldr	r3, [r7, #0]
20001cbc:	3302      	adds	r3, #2
20001cbe:	2201      	movs	r2, #1
20001cc0:	0019      	movs	r1, r3
20001cc2:	f7ff f97b 	bl	20000fbc <pixelSim>
	pixelSim(xmin+2, ymin+2, 1);
20001cc6:	687b      	ldr	r3, [r7, #4]
20001cc8:	1c98      	adds	r0, r3, #2
20001cca:	683b      	ldr	r3, [r7, #0]
20001ccc:	3302      	adds	r3, #2
20001cce:	2201      	movs	r2, #1
20001cd0:	0019      	movs	r1, r3
20001cd2:	f7ff f973 	bl	20000fbc <pixelSim>
	pixelSim(xmin+3, ymin+2, 1);
20001cd6:	687b      	ldr	r3, [r7, #4]
20001cd8:	1cd8      	adds	r0, r3, #3
20001cda:	683b      	ldr	r3, [r7, #0]
20001cdc:	3302      	adds	r3, #2
20001cde:	2201      	movs	r2, #1
20001ce0:	0019      	movs	r1, r3
20001ce2:	f7ff f96b 	bl	20000fbc <pixelSim>
	pixelSim(xmin+2, ymin+3, 1);
20001ce6:	687b      	ldr	r3, [r7, #4]
20001ce8:	1c98      	adds	r0, r3, #2
20001cea:	683b      	ldr	r3, [r7, #0]
20001cec:	3303      	adds	r3, #3
20001cee:	2201      	movs	r2, #1
20001cf0:	0019      	movs	r1, r3
20001cf2:	f7ff f963 	bl	20000fbc <pixelSim>
20001cf6:	e000      	b.n	20001cfa <drawDotSim+0x96>
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
20001cf8:	46c0      	nop			; (mov r8, r8)
}
20001cfa:	46bd      	mov	sp, r7
20001cfc:	b004      	add	sp, #16
20001cfe:	bd80      	pop	{r7, pc}
20001d00:	20006658 	andcs	r6, r0, r8, asr r6

20001d04 <drawFrameSim>:

static void drawFrameSim(void) {		// SIMULATOR, 4 side borders
20001d04:	b580      	push	{r7, lr}
20001d06:	b082      	sub	sp, #8
20001d08:	af00      	add	r7, sp, #0
	unsigned int i;
	
	for(i=2; i<=63; i=i+4)				// left border
20001d0a:	2302      	movs	r3, #2
20001d0c:	607b      	str	r3, [r7, #4]
20001d0e:	e008      	b.n	20001d22 <drawFrameSim+0x1e>
		pixelSim(1, i, 1);
20001d10:	687b      	ldr	r3, [r7, #4]
20001d12:	2201      	movs	r2, #1
20001d14:	0019      	movs	r1, r3
20001d16:	2001      	movs	r0, #1
20001d18:	f7ff f950 	bl	20000fbc <pixelSim>
	for(i=2; i<=63; i=i+4)				// left border
20001d1c:	687b      	ldr	r3, [r7, #4]
20001d1e:	3304      	adds	r3, #4
20001d20:	607b      	str	r3, [r7, #4]
20001d22:	687b      	ldr	r3, [r7, #4]
20001d24:	2b3f      	cmp	r3, #63	; 0x3f
20001d26:	d9f3      	bls.n	20001d10 <drawFrameSim+0xc>
	for(i=1; i<=127; i=i+4)				// top border
20001d28:	2301      	movs	r3, #1
20001d2a:	607b      	str	r3, [r7, #4]
20001d2c:	e008      	b.n	20001d40 <drawFrameSim+0x3c>
		pixelSim(i, 2, 1);
20001d2e:	687b      	ldr	r3, [r7, #4]
20001d30:	2201      	movs	r2, #1
20001d32:	2102      	movs	r1, #2
20001d34:	0018      	movs	r0, r3
20001d36:	f7ff f941 	bl	20000fbc <pixelSim>
	for(i=1; i<=127; i=i+4)				// top border
20001d3a:	687b      	ldr	r3, [r7, #4]
20001d3c:	3304      	adds	r3, #4
20001d3e:	607b      	str	r3, [r7, #4]
20001d40:	687b      	ldr	r3, [r7, #4]
20001d42:	2b7f      	cmp	r3, #127	; 0x7f
20001d44:	d9f3      	bls.n	20001d2e <drawFrameSim+0x2a>
	for(i=2; i<=63; i=i+4)				// right border
20001d46:	2302      	movs	r3, #2
20001d48:	607b      	str	r3, [r7, #4]
20001d4a:	e008      	b.n	20001d5e <drawFrameSim+0x5a>
		pixelSim(127, i, 1);
20001d4c:	687b      	ldr	r3, [r7, #4]
20001d4e:	2201      	movs	r2, #1
20001d50:	0019      	movs	r1, r3
20001d52:	207f      	movs	r0, #127	; 0x7f
20001d54:	f7ff f932 	bl	20000fbc <pixelSim>
	for(i=2; i<=63; i=i+4)				// right border
20001d58:	687b      	ldr	r3, [r7, #4]
20001d5a:	3304      	adds	r3, #4
20001d5c:	607b      	str	r3, [r7, #4]
20001d5e:	687b      	ldr	r3, [r7, #4]
20001d60:	2b3f      	cmp	r3, #63	; 0x3f
20001d62:	d9f3      	bls.n	20001d4c <drawFrameSim+0x48>
	for(i=1; i<=127; i=i+4)				// bottom border
20001d64:	2301      	movs	r3, #1
20001d66:	607b      	str	r3, [r7, #4]
20001d68:	e008      	b.n	20001d7c <drawFrameSim+0x78>
		pixelSim(i, 63, 1);
20001d6a:	687b      	ldr	r3, [r7, #4]
20001d6c:	2201      	movs	r2, #1
20001d6e:	213f      	movs	r1, #63	; 0x3f
20001d70:	0018      	movs	r0, r3
20001d72:	f7ff f923 	bl	20000fbc <pixelSim>
	for(i=1; i<=127; i=i+4)				// bottom border
20001d76:	687b      	ldr	r3, [r7, #4]
20001d78:	3304      	adds	r3, #4
20001d7a:	607b      	str	r3, [r7, #4]
20001d7c:	687b      	ldr	r3, [r7, #4]
20001d7e:	2b7f      	cmp	r3, #127	; 0x7f
20001d80:	d9f3      	bls.n	20001d6a <drawFrameSim+0x66>
}
20001d82:	46c0      	nop			; (mov r8, r8)
20001d84:	46bd      	mov	sp, r7
20001d86:	b002      	add	sp, #8
20001d88:	bd80      	pop	{r7, pc}

20001d8a <drawBlockSim>:

static void drawBlockSim(int x, int y) {	// SIMULATOR, 25x12 level, one square = 5x5 pixels
20001d8a:	b580      	push	{r7, lr}
20001d8c:	b086      	sub	sp, #24
20001d8e:	af00      	add	r7, sp, #0
20001d90:	6078      	str	r0, [r7, #4]
20001d92:	6039      	str	r1, [r7, #0]
	unsigned int i, j;
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
20001d94:	687b      	ldr	r3, [r7, #4]
20001d96:	2b00      	cmp	r3, #0
20001d98:	dd32      	ble.n	20001e00 <drawBlockSim+0x76>
20001d9a:	687b      	ldr	r3, [r7, #4]
20001d9c:	2b19      	cmp	r3, #25
20001d9e:	dc2f      	bgt.n	20001e00 <drawBlockSim+0x76>
20001da0:	683b      	ldr	r3, [r7, #0]
20001da2:	2b00      	cmp	r3, #0
20001da4:	dd2c      	ble.n	20001e00 <drawBlockSim+0x76>
20001da6:	683b      	ldr	r3, [r7, #0]
20001da8:	2b0c      	cmp	r3, #12
20001daa:	dc29      	bgt.n	20001e00 <drawBlockSim+0x76>
	
	// coords for top left corner pixel
	int xmin = x*5 - 3;
20001dac:	687a      	ldr	r2, [r7, #4]
20001dae:	0013      	movs	r3, r2
20001db0:	009b      	lsls	r3, r3, #2
20001db2:	189b      	adds	r3, r3, r2
20001db4:	3b03      	subs	r3, #3
20001db6:	60fb      	str	r3, [r7, #12]
	int ymin = y*5 - 2;
20001db8:	683a      	ldr	r2, [r7, #0]
20001dba:	0013      	movs	r3, r2
20001dbc:	009b      	lsls	r3, r3, #2
20001dbe:	189b      	adds	r3, r3, r2
20001dc0:	3b02      	subs	r3, #2
20001dc2:	60bb      	str	r3, [r7, #8]
	
	for (i=0; i<5; i=i+4) {				// 5x5 block
20001dc4:	2300      	movs	r3, #0
20001dc6:	617b      	str	r3, [r7, #20]
20001dc8:	e016      	b.n	20001df8 <drawBlockSim+0x6e>
		for (j=0; j<5; j=j+4) {
20001dca:	2300      	movs	r3, #0
20001dcc:	613b      	str	r3, [r7, #16]
20001dce:	e00d      	b.n	20001dec <drawBlockSim+0x62>
			pixelSim(xmin+i, ymin+j, 1);
20001dd0:	68fa      	ldr	r2, [r7, #12]
20001dd2:	697b      	ldr	r3, [r7, #20]
20001dd4:	18d3      	adds	r3, r2, r3
20001dd6:	0018      	movs	r0, r3
20001dd8:	68ba      	ldr	r2, [r7, #8]
20001dda:	693b      	ldr	r3, [r7, #16]
20001ddc:	18d3      	adds	r3, r2, r3
20001dde:	2201      	movs	r2, #1
20001de0:	0019      	movs	r1, r3
20001de2:	f7ff f8eb 	bl	20000fbc <pixelSim>
		for (j=0; j<5; j=j+4) {
20001de6:	693b      	ldr	r3, [r7, #16]
20001de8:	3304      	adds	r3, #4
20001dea:	613b      	str	r3, [r7, #16]
20001dec:	693b      	ldr	r3, [r7, #16]
20001dee:	2b04      	cmp	r3, #4
20001df0:	d9ee      	bls.n	20001dd0 <drawBlockSim+0x46>
	for (i=0; i<5; i=i+4) {				// 5x5 block
20001df2:	697b      	ldr	r3, [r7, #20]
20001df4:	3304      	adds	r3, #4
20001df6:	617b      	str	r3, [r7, #20]
20001df8:	697b      	ldr	r3, [r7, #20]
20001dfa:	2b04      	cmp	r3, #4
20001dfc:	d9e5      	bls.n	20001dca <drawBlockSim+0x40>
20001dfe:	e000      	b.n	20001e02 <drawBlockSim+0x78>
	if((x < 1) || (x > 25) || (y < 1) || (y > 12)) return;
20001e00:	46c0      	nop			; (mov r8, r8)
		}
	}
}
20001e02:	46bd      	mov	sp, r7
20001e04:	b006      	add	sp, #24
20001e06:	bd80      	pop	{r7, pc}

20001e08 <drawLevelSim>:

void drawLevelSim(void) {				// SIMULATOR
20001e08:	b580      	push	{r7, lr}
20001e0a:	b082      	sub	sp, #8
20001e0c:	af00      	add	r7, sp, #0
	drawFrameSim();
20001e0e:	f7ff ff79 	bl	20001d04 <drawFrameSim>
	for (int i = 0; i < (currentLevel->numpoints); i++)
20001e12:	2300      	movs	r3, #0
20001e14:	607b      	str	r3, [r7, #4]
20001e16:	e014      	b.n	20001e42 <drawLevelSim+0x3a>
		drawBlockSim(currentLevel->px[i].x, currentLevel->px[i].y);
20001e18:	4b0f      	ldr	r3, [pc, #60]	; (20001e58 <drawLevelSim+0x50>)
20001e1a:	681b      	ldr	r3, [r3, #0]
20001e1c:	687a      	ldr	r2, [r7, #4]
20001e1e:	3204      	adds	r2, #4
20001e20:	0052      	lsls	r2, r2, #1
20001e22:	5cd3      	ldrb	r3, [r2, r3]
20001e24:	0018      	movs	r0, r3
20001e26:	4b0c      	ldr	r3, [pc, #48]	; (20001e58 <drawLevelSim+0x50>)
20001e28:	681a      	ldr	r2, [r3, #0]
20001e2a:	687b      	ldr	r3, [r7, #4]
20001e2c:	3304      	adds	r3, #4
20001e2e:	005b      	lsls	r3, r3, #1
20001e30:	18d3      	adds	r3, r2, r3
20001e32:	3301      	adds	r3, #1
20001e34:	781b      	ldrb	r3, [r3, #0]
20001e36:	0019      	movs	r1, r3
20001e38:	f7ff ffa7 	bl	20001d8a <drawBlockSim>
	for (int i = 0; i < (currentLevel->numpoints); i++)
20001e3c:	687b      	ldr	r3, [r7, #4]
20001e3e:	3301      	adds	r3, #1
20001e40:	607b      	str	r3, [r7, #4]
20001e42:	4b05      	ldr	r3, [pc, #20]	; (20001e58 <drawLevelSim+0x50>)
20001e44:	681b      	ldr	r3, [r3, #0]
20001e46:	681a      	ldr	r2, [r3, #0]
20001e48:	687b      	ldr	r3, [r7, #4]
20001e4a:	429a      	cmp	r2, r3
20001e4c:	dce4      	bgt.n	20001e18 <drawLevelSim+0x10>
}
20001e4e:	46c0      	nop			; (mov r8, r8)
20001e50:	46bd      	mov	sp, r7
20001e52:	b002      	add	sp, #8
20001e54:	bd80      	pop	{r7, pc}
20001e56:	46c0      	nop			; (mov r8, r8)
20001e58:	2000665c 	andcs	r6, r0, ip, asr r6

20001e5c <drawFrameMiniatureSim>:

static void drawFrameMiniatureSim(int xoff, int yoff) {	// SIMULATOR, 4 miniature side borders
20001e5c:	b580      	push	{r7, lr}
20001e5e:	b084      	sub	sp, #16
20001e60:	af00      	add	r7, sp, #0
20001e62:	6078      	str	r0, [r7, #4]
20001e64:	6039      	str	r1, [r7, #0]
	unsigned int i;
	
	for(i=1+yoff; i<=26+yoff; i++)		// left border
20001e66:	683b      	ldr	r3, [r7, #0]
20001e68:	3301      	adds	r3, #1
20001e6a:	60fb      	str	r3, [r7, #12]
20001e6c:	e009      	b.n	20001e82 <drawFrameMiniatureSim+0x26>
		pixelSim(1+xoff, i, 1);
20001e6e:	687b      	ldr	r3, [r7, #4]
20001e70:	3301      	adds	r3, #1
20001e72:	68f9      	ldr	r1, [r7, #12]
20001e74:	2201      	movs	r2, #1
20001e76:	0018      	movs	r0, r3
20001e78:	f7ff f8a0 	bl	20000fbc <pixelSim>
	for(i=1+yoff; i<=26+yoff; i++)		// left border
20001e7c:	68fb      	ldr	r3, [r7, #12]
20001e7e:	3301      	adds	r3, #1
20001e80:	60fb      	str	r3, [r7, #12]
20001e82:	683b      	ldr	r3, [r7, #0]
20001e84:	331a      	adds	r3, #26
20001e86:	001a      	movs	r2, r3
20001e88:	68fb      	ldr	r3, [r7, #12]
20001e8a:	429a      	cmp	r2, r3
20001e8c:	d2ef      	bcs.n	20001e6e <drawFrameMiniatureSim+0x12>
	for(i=1+xoff; i<=52+xoff; i++)		// top border
20001e8e:	687b      	ldr	r3, [r7, #4]
20001e90:	3301      	adds	r3, #1
20001e92:	60fb      	str	r3, [r7, #12]
20001e94:	e009      	b.n	20001eaa <drawFrameMiniatureSim+0x4e>
		pixelSim(i, 1+yoff, 1);
20001e96:	68f8      	ldr	r0, [r7, #12]
20001e98:	683b      	ldr	r3, [r7, #0]
20001e9a:	3301      	adds	r3, #1
20001e9c:	2201      	movs	r2, #1
20001e9e:	0019      	movs	r1, r3
20001ea0:	f7ff f88c 	bl	20000fbc <pixelSim>
	for(i=1+xoff; i<=52+xoff; i++)		// top border
20001ea4:	68fb      	ldr	r3, [r7, #12]
20001ea6:	3301      	adds	r3, #1
20001ea8:	60fb      	str	r3, [r7, #12]
20001eaa:	687b      	ldr	r3, [r7, #4]
20001eac:	3334      	adds	r3, #52	; 0x34
20001eae:	001a      	movs	r2, r3
20001eb0:	68fb      	ldr	r3, [r7, #12]
20001eb2:	429a      	cmp	r2, r3
20001eb4:	d2ef      	bcs.n	20001e96 <drawFrameMiniatureSim+0x3a>
	for(i=1+yoff; i<=26+yoff; i++)		// right border
20001eb6:	683b      	ldr	r3, [r7, #0]
20001eb8:	3301      	adds	r3, #1
20001eba:	60fb      	str	r3, [r7, #12]
20001ebc:	e009      	b.n	20001ed2 <drawFrameMiniatureSim+0x76>
		pixelSim(52+xoff, i, 1);
20001ebe:	687b      	ldr	r3, [r7, #4]
20001ec0:	3334      	adds	r3, #52	; 0x34
20001ec2:	68f9      	ldr	r1, [r7, #12]
20001ec4:	2201      	movs	r2, #1
20001ec6:	0018      	movs	r0, r3
20001ec8:	f7ff f878 	bl	20000fbc <pixelSim>
	for(i=1+yoff; i<=26+yoff; i++)		// right border
20001ecc:	68fb      	ldr	r3, [r7, #12]
20001ece:	3301      	adds	r3, #1
20001ed0:	60fb      	str	r3, [r7, #12]
20001ed2:	683b      	ldr	r3, [r7, #0]
20001ed4:	331a      	adds	r3, #26
20001ed6:	001a      	movs	r2, r3
20001ed8:	68fb      	ldr	r3, [r7, #12]
20001eda:	429a      	cmp	r2, r3
20001edc:	d2ef      	bcs.n	20001ebe <drawFrameMiniatureSim+0x62>
	for(i=1+xoff; i<=52+xoff; i++)		// bottom border
20001ede:	687b      	ldr	r3, [r7, #4]
20001ee0:	3301      	adds	r3, #1
20001ee2:	60fb      	str	r3, [r7, #12]
20001ee4:	e009      	b.n	20001efa <drawFrameMiniatureSim+0x9e>
		pixelSim(i, 26+yoff, 1);
20001ee6:	68f8      	ldr	r0, [r7, #12]
20001ee8:	683b      	ldr	r3, [r7, #0]
20001eea:	331a      	adds	r3, #26
20001eec:	2201      	movs	r2, #1
20001eee:	0019      	movs	r1, r3
20001ef0:	f7ff f864 	bl	20000fbc <pixelSim>
	for(i=1+xoff; i<=52+xoff; i++)		// bottom border
20001ef4:	68fb      	ldr	r3, [r7, #12]
20001ef6:	3301      	adds	r3, #1
20001ef8:	60fb      	str	r3, [r7, #12]
20001efa:	687b      	ldr	r3, [r7, #4]
20001efc:	3334      	adds	r3, #52	; 0x34
20001efe:	001a      	movs	r2, r3
20001f00:	68fb      	ldr	r3, [r7, #12]
20001f02:	429a      	cmp	r2, r3
20001f04:	d2ef      	bcs.n	20001ee6 <drawFrameMiniatureSim+0x8a>
}
20001f06:	46c0      	nop			; (mov r8, r8)
20001f08:	46bd      	mov	sp, r7
20001f0a:	b004      	add	sp, #16
20001f0c:	bd80      	pop	{r7, pc}

20001f0e <drawBlockMiniatureSim>:

static void drawBlockMiniatureSim(int x, int y) {	// x and y in a 64x32 grid, one square = 2x2 pixels
20001f0e:	b580      	push	{r7, lr}
20001f10:	b086      	sub	sp, #24
20001f12:	af00      	add	r7, sp, #0
20001f14:	6078      	str	r0, [r7, #4]
20001f16:	6039      	str	r1, [r7, #0]
	if((x < 1) || (x > 64) || (y < 1) || (y > 32)) return;
20001f18:	687b      	ldr	r3, [r7, #4]
20001f1a:	2b00      	cmp	r3, #0
20001f1c:	dd2e      	ble.n	20001f7c <drawBlockMiniatureSim+0x6e>
20001f1e:	687b      	ldr	r3, [r7, #4]
20001f20:	2b40      	cmp	r3, #64	; 0x40
20001f22:	dc2b      	bgt.n	20001f7c <drawBlockMiniatureSim+0x6e>
20001f24:	683b      	ldr	r3, [r7, #0]
20001f26:	2b00      	cmp	r3, #0
20001f28:	dd28      	ble.n	20001f7c <drawBlockMiniatureSim+0x6e>
20001f2a:	683b      	ldr	r3, [r7, #0]
20001f2c:	2b20      	cmp	r3, #32
20001f2e:	dc25      	bgt.n	20001f7c <drawBlockMiniatureSim+0x6e>
	unsigned int i, j;
	
	// coords for top left corner pixel
	int xmin = x*2 - 1;
20001f30:	687b      	ldr	r3, [r7, #4]
20001f32:	005b      	lsls	r3, r3, #1
20001f34:	3b01      	subs	r3, #1
20001f36:	60fb      	str	r3, [r7, #12]
	int ymin = y*2 - 1;
20001f38:	683b      	ldr	r3, [r7, #0]
20001f3a:	005b      	lsls	r3, r3, #1
20001f3c:	3b01      	subs	r3, #1
20001f3e:	60bb      	str	r3, [r7, #8]
	
	for (i=0; i<2; i++) {				// 5x5 block
20001f40:	2300      	movs	r3, #0
20001f42:	617b      	str	r3, [r7, #20]
20001f44:	e016      	b.n	20001f74 <drawBlockMiniatureSim+0x66>
		for (j=0; j<2; j++) {
20001f46:	2300      	movs	r3, #0
20001f48:	613b      	str	r3, [r7, #16]
20001f4a:	e00d      	b.n	20001f68 <drawBlockMiniatureSim+0x5a>
			pixelSim(xmin+i, ymin+j, 1);
20001f4c:	68fa      	ldr	r2, [r7, #12]
20001f4e:	697b      	ldr	r3, [r7, #20]
20001f50:	18d3      	adds	r3, r2, r3
20001f52:	0018      	movs	r0, r3
20001f54:	68ba      	ldr	r2, [r7, #8]
20001f56:	693b      	ldr	r3, [r7, #16]
20001f58:	18d3      	adds	r3, r2, r3
20001f5a:	2201      	movs	r2, #1
20001f5c:	0019      	movs	r1, r3
20001f5e:	f7ff f82d 	bl	20000fbc <pixelSim>
		for (j=0; j<2; j++) {
20001f62:	693b      	ldr	r3, [r7, #16]
20001f64:	3301      	adds	r3, #1
20001f66:	613b      	str	r3, [r7, #16]
20001f68:	693b      	ldr	r3, [r7, #16]
20001f6a:	2b01      	cmp	r3, #1
20001f6c:	d9ee      	bls.n	20001f4c <drawBlockMiniatureSim+0x3e>
	for (i=0; i<2; i++) {				// 5x5 block
20001f6e:	697b      	ldr	r3, [r7, #20]
20001f70:	3301      	adds	r3, #1
20001f72:	617b      	str	r3, [r7, #20]
20001f74:	697b      	ldr	r3, [r7, #20]
20001f76:	2b01      	cmp	r3, #1
20001f78:	d9e5      	bls.n	20001f46 <drawBlockMiniatureSim+0x38>
20001f7a:	e000      	b.n	20001f7e <drawBlockMiniatureSim+0x70>
	if((x < 1) || (x > 64) || (y < 1) || (y > 32)) return;
20001f7c:	46c0      	nop			; (mov r8, r8)
		}
	}
}
20001f7e:	46bd      	mov	sp, r7
20001f80:	b006      	add	sp, #24
20001f82:	bd80      	pop	{r7, pc}

20001f84 <drawStartScreenSim>:

void drawStartScreenSim(void) {
20001f84:	b580      	push	{r7, lr}
20001f86:	b084      	sub	sp, #16
20001f88:	af00      	add	r7, sp, #0
	unsigned int i;
	
	int xoff = 9;
20001f8a:	2309      	movs	r3, #9
20001f8c:	60bb      	str	r3, [r7, #8]
	int yoff = 3;
20001f8e:	2303      	movs	r3, #3
20001f90:	607b      	str	r3, [r7, #4]
	drawFrameMiniatureSim(xoff, yoff);
20001f92:	687a      	ldr	r2, [r7, #4]
20001f94:	68bb      	ldr	r3, [r7, #8]
20001f96:	0011      	movs	r1, r2
20001f98:	0018      	movs	r0, r3
20001f9a:	f7ff ff5f 	bl	20001e5c <drawFrameMiniatureSim>
	for (i = 0; i < level1.numpoints; i++)
20001f9e:	2300      	movs	r3, #0
20001fa0:	60fb      	str	r3, [r7, #12]
20001fa2:	e021      	b.n	20001fe8 <drawStartScreenSim+0x64>
		drawBlockMiniatureSim(level1.px[i].x+(xoff+1)/2, level1.px[i].y+(yoff+1)/2);
20001fa4:	4b65      	ldr	r3, [pc, #404]	; (2000213c <drawStartScreenSim+0x1b8>)
20001fa6:	68fa      	ldr	r2, [r7, #12]
20001fa8:	3204      	adds	r2, #4
20001faa:	0052      	lsls	r2, r2, #1
20001fac:	5cd3      	ldrb	r3, [r2, r3]
20001fae:	001a      	movs	r2, r3
20001fb0:	68bb      	ldr	r3, [r7, #8]
20001fb2:	3301      	adds	r3, #1
20001fb4:	2b00      	cmp	r3, #0
20001fb6:	da00      	bge.n	20001fba <drawStartScreenSim+0x36>
20001fb8:	3301      	adds	r3, #1
20001fba:	105b      	asrs	r3, r3, #1
20001fbc:	18d0      	adds	r0, r2, r3
20001fbe:	4a5f      	ldr	r2, [pc, #380]	; (2000213c <drawStartScreenSim+0x1b8>)
20001fc0:	68fb      	ldr	r3, [r7, #12]
20001fc2:	3304      	adds	r3, #4
20001fc4:	005b      	lsls	r3, r3, #1
20001fc6:	18d3      	adds	r3, r2, r3
20001fc8:	3301      	adds	r3, #1
20001fca:	781b      	ldrb	r3, [r3, #0]
20001fcc:	001a      	movs	r2, r3
20001fce:	687b      	ldr	r3, [r7, #4]
20001fd0:	3301      	adds	r3, #1
20001fd2:	2b00      	cmp	r3, #0
20001fd4:	da00      	bge.n	20001fd8 <drawStartScreenSim+0x54>
20001fd6:	3301      	adds	r3, #1
20001fd8:	105b      	asrs	r3, r3, #1
20001fda:	18d3      	adds	r3, r2, r3
20001fdc:	0019      	movs	r1, r3
20001fde:	f7ff ff96 	bl	20001f0e <drawBlockMiniatureSim>
	for (i = 0; i < level1.numpoints; i++)
20001fe2:	68fb      	ldr	r3, [r7, #12]
20001fe4:	3301      	adds	r3, #1
20001fe6:	60fb      	str	r3, [r7, #12]
20001fe8:	4b54      	ldr	r3, [pc, #336]	; (2000213c <drawStartScreenSim+0x1b8>)
20001fea:	681b      	ldr	r3, [r3, #0]
20001fec:	001a      	movs	r2, r3
20001fee:	68fb      	ldr	r3, [r7, #12]
20001ff0:	429a      	cmp	r2, r3
20001ff2:	d8d7      	bhi.n	20001fa4 <drawStartScreenSim+0x20>
		
	xoff = 67;
20001ff4:	2343      	movs	r3, #67	; 0x43
20001ff6:	60bb      	str	r3, [r7, #8]
	yoff = 3;
20001ff8:	2303      	movs	r3, #3
20001ffa:	607b      	str	r3, [r7, #4]
	drawFrameMiniatureSim(xoff, yoff);
20001ffc:	687a      	ldr	r2, [r7, #4]
20001ffe:	68bb      	ldr	r3, [r7, #8]
20002000:	0011      	movs	r1, r2
20002002:	0018      	movs	r0, r3
20002004:	f7ff ff2a 	bl	20001e5c <drawFrameMiniatureSim>
	for (i = 0; i < level2.numpoints; i++)
20002008:	2300      	movs	r3, #0
2000200a:	60fb      	str	r3, [r7, #12]
2000200c:	e021      	b.n	20002052 <drawStartScreenSim+0xce>
		drawBlockMiniatureSim(level2.px[i].x+(xoff+1)/2, level2.px[i].y+(yoff+1)/2);
2000200e:	4b4c      	ldr	r3, [pc, #304]	; (20002140 <drawStartScreenSim+0x1bc>)
20002010:	68fa      	ldr	r2, [r7, #12]
20002012:	3204      	adds	r2, #4
20002014:	0052      	lsls	r2, r2, #1
20002016:	5cd3      	ldrb	r3, [r2, r3]
20002018:	001a      	movs	r2, r3
2000201a:	68bb      	ldr	r3, [r7, #8]
2000201c:	3301      	adds	r3, #1
2000201e:	2b00      	cmp	r3, #0
20002020:	da00      	bge.n	20002024 <drawStartScreenSim+0xa0>
20002022:	3301      	adds	r3, #1
20002024:	105b      	asrs	r3, r3, #1
20002026:	18d0      	adds	r0, r2, r3
20002028:	4a45      	ldr	r2, [pc, #276]	; (20002140 <drawStartScreenSim+0x1bc>)
2000202a:	68fb      	ldr	r3, [r7, #12]
2000202c:	3304      	adds	r3, #4
2000202e:	005b      	lsls	r3, r3, #1
20002030:	18d3      	adds	r3, r2, r3
20002032:	3301      	adds	r3, #1
20002034:	781b      	ldrb	r3, [r3, #0]
20002036:	001a      	movs	r2, r3
20002038:	687b      	ldr	r3, [r7, #4]
2000203a:	3301      	adds	r3, #1
2000203c:	2b00      	cmp	r3, #0
2000203e:	da00      	bge.n	20002042 <drawStartScreenSim+0xbe>
20002040:	3301      	adds	r3, #1
20002042:	105b      	asrs	r3, r3, #1
20002044:	18d3      	adds	r3, r2, r3
20002046:	0019      	movs	r1, r3
20002048:	f7ff ff61 	bl	20001f0e <drawBlockMiniatureSim>
	for (i = 0; i < level2.numpoints; i++)
2000204c:	68fb      	ldr	r3, [r7, #12]
2000204e:	3301      	adds	r3, #1
20002050:	60fb      	str	r3, [r7, #12]
20002052:	4b3b      	ldr	r3, [pc, #236]	; (20002140 <drawStartScreenSim+0x1bc>)
20002054:	681b      	ldr	r3, [r3, #0]
20002056:	001a      	movs	r2, r3
20002058:	68fb      	ldr	r3, [r7, #12]
2000205a:	429a      	cmp	r2, r3
2000205c:	d8d7      	bhi.n	2000200e <drawStartScreenSim+0x8a>
		
	xoff = 9;
2000205e:	2309      	movs	r3, #9
20002060:	60bb      	str	r3, [r7, #8]
	yoff = 35;
20002062:	2323      	movs	r3, #35	; 0x23
20002064:	607b      	str	r3, [r7, #4]
	drawFrameMiniatureSim(xoff, yoff);
20002066:	687a      	ldr	r2, [r7, #4]
20002068:	68bb      	ldr	r3, [r7, #8]
2000206a:	0011      	movs	r1, r2
2000206c:	0018      	movs	r0, r3
2000206e:	f7ff fef5 	bl	20001e5c <drawFrameMiniatureSim>
	for (i = 0; i < level3.numpoints; i++)
20002072:	2300      	movs	r3, #0
20002074:	60fb      	str	r3, [r7, #12]
20002076:	e021      	b.n	200020bc <drawStartScreenSim+0x138>
		drawBlockMiniatureSim(level3.px[i].x+(xoff+1)/2, level3.px[i].y+(yoff+1)/2);
20002078:	4b32      	ldr	r3, [pc, #200]	; (20002144 <drawStartScreenSim+0x1c0>)
2000207a:	68fa      	ldr	r2, [r7, #12]
2000207c:	3204      	adds	r2, #4
2000207e:	0052      	lsls	r2, r2, #1
20002080:	5cd3      	ldrb	r3, [r2, r3]
20002082:	001a      	movs	r2, r3
20002084:	68bb      	ldr	r3, [r7, #8]
20002086:	3301      	adds	r3, #1
20002088:	2b00      	cmp	r3, #0
2000208a:	da00      	bge.n	2000208e <drawStartScreenSim+0x10a>
2000208c:	3301      	adds	r3, #1
2000208e:	105b      	asrs	r3, r3, #1
20002090:	18d0      	adds	r0, r2, r3
20002092:	4a2c      	ldr	r2, [pc, #176]	; (20002144 <drawStartScreenSim+0x1c0>)
20002094:	68fb      	ldr	r3, [r7, #12]
20002096:	3304      	adds	r3, #4
20002098:	005b      	lsls	r3, r3, #1
2000209a:	18d3      	adds	r3, r2, r3
2000209c:	3301      	adds	r3, #1
2000209e:	781b      	ldrb	r3, [r3, #0]
200020a0:	001a      	movs	r2, r3
200020a2:	687b      	ldr	r3, [r7, #4]
200020a4:	3301      	adds	r3, #1
200020a6:	2b00      	cmp	r3, #0
200020a8:	da00      	bge.n	200020ac <drawStartScreenSim+0x128>
200020aa:	3301      	adds	r3, #1
200020ac:	105b      	asrs	r3, r3, #1
200020ae:	18d3      	adds	r3, r2, r3
200020b0:	0019      	movs	r1, r3
200020b2:	f7ff ff2c 	bl	20001f0e <drawBlockMiniatureSim>
	for (i = 0; i < level3.numpoints; i++)
200020b6:	68fb      	ldr	r3, [r7, #12]
200020b8:	3301      	adds	r3, #1
200020ba:	60fb      	str	r3, [r7, #12]
200020bc:	4b21      	ldr	r3, [pc, #132]	; (20002144 <drawStartScreenSim+0x1c0>)
200020be:	681b      	ldr	r3, [r3, #0]
200020c0:	001a      	movs	r2, r3
200020c2:	68fb      	ldr	r3, [r7, #12]
200020c4:	429a      	cmp	r2, r3
200020c6:	d8d7      	bhi.n	20002078 <drawStartScreenSim+0xf4>
		
	xoff = 67;
200020c8:	2343      	movs	r3, #67	; 0x43
200020ca:	60bb      	str	r3, [r7, #8]
	yoff = 35;
200020cc:	2323      	movs	r3, #35	; 0x23
200020ce:	607b      	str	r3, [r7, #4]
	drawFrameMiniatureSim(xoff, yoff);
200020d0:	687a      	ldr	r2, [r7, #4]
200020d2:	68bb      	ldr	r3, [r7, #8]
200020d4:	0011      	movs	r1, r2
200020d6:	0018      	movs	r0, r3
200020d8:	f7ff fec0 	bl	20001e5c <drawFrameMiniatureSim>
	for (i = 0; i < level4.numpoints; i++)
200020dc:	2300      	movs	r3, #0
200020de:	60fb      	str	r3, [r7, #12]
200020e0:	e021      	b.n	20002126 <drawStartScreenSim+0x1a2>
		drawBlockMiniatureSim(level4.px[i].x+(xoff+1)/2, level4.px[i].y+(yoff+1)/2);
200020e2:	4b19      	ldr	r3, [pc, #100]	; (20002148 <drawStartScreenSim+0x1c4>)
200020e4:	68fa      	ldr	r2, [r7, #12]
200020e6:	3204      	adds	r2, #4
200020e8:	0052      	lsls	r2, r2, #1
200020ea:	5cd3      	ldrb	r3, [r2, r3]
200020ec:	001a      	movs	r2, r3
200020ee:	68bb      	ldr	r3, [r7, #8]
200020f0:	3301      	adds	r3, #1
200020f2:	2b00      	cmp	r3, #0
200020f4:	da00      	bge.n	200020f8 <drawStartScreenSim+0x174>
200020f6:	3301      	adds	r3, #1
200020f8:	105b      	asrs	r3, r3, #1
200020fa:	18d0      	adds	r0, r2, r3
200020fc:	4a12      	ldr	r2, [pc, #72]	; (20002148 <drawStartScreenSim+0x1c4>)
200020fe:	68fb      	ldr	r3, [r7, #12]
20002100:	3304      	adds	r3, #4
20002102:	005b      	lsls	r3, r3, #1
20002104:	18d3      	adds	r3, r2, r3
20002106:	3301      	adds	r3, #1
20002108:	781b      	ldrb	r3, [r3, #0]
2000210a:	001a      	movs	r2, r3
2000210c:	687b      	ldr	r3, [r7, #4]
2000210e:	3301      	adds	r3, #1
20002110:	2b00      	cmp	r3, #0
20002112:	da00      	bge.n	20002116 <drawStartScreenSim+0x192>
20002114:	3301      	adds	r3, #1
20002116:	105b      	asrs	r3, r3, #1
20002118:	18d3      	adds	r3, r2, r3
2000211a:	0019      	movs	r1, r3
2000211c:	f7ff fef7 	bl	20001f0e <drawBlockMiniatureSim>
	for (i = 0; i < level4.numpoints; i++)
20002120:	68fb      	ldr	r3, [r7, #12]
20002122:	3301      	adds	r3, #1
20002124:	60fb      	str	r3, [r7, #12]
20002126:	4b08      	ldr	r3, [pc, #32]	; (20002148 <drawStartScreenSim+0x1c4>)
20002128:	681b      	ldr	r3, [r3, #0]
2000212a:	001a      	movs	r2, r3
2000212c:	68fb      	ldr	r3, [r7, #12]
2000212e:	429a      	cmp	r2, r3
20002130:	d8d7      	bhi.n	200020e2 <drawStartScreenSim+0x15e>
20002132:	46c0      	nop			; (mov r8, r8)
20002134:	46bd      	mov	sp, r7
20002136:	b004      	add	sp, #16
20002138:	bd80      	pop	{r7, pc}
2000213a:	46c0      	nop			; (mov r8, r8)
2000213c:	20006668 	andcs	r6, r0, r8, ror #12
20002140:	20006800 	andcs	r6, r0, r0, lsl #16
20002144:	20006998 	mulcs	r0, r8, r9
20002148:	20006b30 	andcs	r6, r0, r0, lsr fp

2000214c <draw_object>:
#include "level.h"

unsigned int rand(void);
extern POINT currentDot;

static void draw_object(POBJECT o){
2000214c:	b580      	push	{r7, lr}
2000214e:	b084      	sub	sp, #16
20002150:	af00      	add	r7, sp, #0
20002152:	6078      	str	r0, [r7, #4]
	for(int i=0; i < o->geo->numpoints; i++){
20002154:	2300      	movs	r3, #0
20002156:	60fb      	str	r3, [r7, #12]
20002158:	e01b      	b.n	20002192 <draw_object+0x46>
		pixel(o->posx + o->geo->px[i].x, o->posy + o->geo->px[i].y);
2000215a:	687b      	ldr	r3, [r7, #4]
2000215c:	68da      	ldr	r2, [r3, #12]
2000215e:	687b      	ldr	r3, [r7, #4]
20002160:	6819      	ldr	r1, [r3, #0]
20002162:	68fb      	ldr	r3, [r7, #12]
20002164:	3304      	adds	r3, #4
20002166:	005b      	lsls	r3, r3, #1
20002168:	18cb      	adds	r3, r1, r3
2000216a:	3304      	adds	r3, #4
2000216c:	781b      	ldrb	r3, [r3, #0]
2000216e:	18d0      	adds	r0, r2, r3
20002170:	687b      	ldr	r3, [r7, #4]
20002172:	691a      	ldr	r2, [r3, #16]
20002174:	687b      	ldr	r3, [r7, #4]
20002176:	6819      	ldr	r1, [r3, #0]
20002178:	68fb      	ldr	r3, [r7, #12]
2000217a:	3304      	adds	r3, #4
2000217c:	005b      	lsls	r3, r3, #1
2000217e:	18cb      	adds	r3, r1, r3
20002180:	3305      	adds	r3, #5
20002182:	781b      	ldrb	r3, [r3, #0]
20002184:	18d3      	adds	r3, r2, r3
20002186:	0019      	movs	r1, r3
20002188:	f7fe fffe 	bl	20001188 <pixel>
	for(int i=0; i < o->geo->numpoints; i++){
2000218c:	68fb      	ldr	r3, [r7, #12]
2000218e:	3301      	adds	r3, #1
20002190:	60fb      	str	r3, [r7, #12]
20002192:	687b      	ldr	r3, [r7, #4]
20002194:	681b      	ldr	r3, [r3, #0]
20002196:	681a      	ldr	r2, [r3, #0]
20002198:	68fb      	ldr	r3, [r7, #12]
2000219a:	429a      	cmp	r2, r3
2000219c:	dcdd      	bgt.n	2000215a <draw_object+0xe>
	}
}
2000219e:	46c0      	nop			; (mov r8, r8)
200021a0:	46bd      	mov	sp, r7
200021a2:	b004      	add	sp, #16
200021a4:	bd80      	pop	{r7, pc}

200021a6 <xcheckDotCollision>:

static int xcheckDotCollision(POBJECT o) {
200021a6:	b580      	push	{r7, lr}
200021a8:	b088      	sub	sp, #32
200021aa:	af00      	add	r7, sp, #0
200021ac:	6078      	str	r0, [r7, #4]
	int xmin = o->posx;						// left side coord
200021ae:	687b      	ldr	r3, [r7, #4]
200021b0:	68db      	ldr	r3, [r3, #12]
200021b2:	617b      	str	r3, [r7, #20]
	int xmax = o->posx + o->geo->sizex - 1;	// right side coord
200021b4:	687b      	ldr	r3, [r7, #4]
200021b6:	68da      	ldr	r2, [r3, #12]
200021b8:	687b      	ldr	r3, [r7, #4]
200021ba:	681b      	ldr	r3, [r3, #0]
200021bc:	685b      	ldr	r3, [r3, #4]
200021be:	18d3      	adds	r3, r2, r3
200021c0:	3b01      	subs	r3, #1
200021c2:	613b      	str	r3, [r7, #16]
	int ymin = o->posy;						// upper side coord
200021c4:	687b      	ldr	r3, [r7, #4]
200021c6:	691b      	ldr	r3, [r3, #16]
200021c8:	60fb      	str	r3, [r7, #12]
	
	if (o->dirx > 0) {						// if moving right
200021ca:	687b      	ldr	r3, [r7, #4]
200021cc:	685b      	ldr	r3, [r3, #4]
200021ce:	2b00      	cmp	r3, #0
200021d0:	dd21      	ble.n	20002216 <xcheckDotCollision+0x70>
		for (int i=0; i<4; i++) {
200021d2:	2300      	movs	r3, #0
200021d4:	61fb      	str	r3, [r7, #28]
200021d6:	e01a      	b.n	2000220e <xcheckDotCollision+0x68>
			if(xmax+1 == currentDot.x*5-3+2 && ymin+i == currentDot.y*5-2+2) {
200021d8:	693b      	ldr	r3, [r7, #16]
200021da:	1c5a      	adds	r2, r3, #1
200021dc:	4b23      	ldr	r3, [pc, #140]	; (2000226c <xcheckDotCollision+0xc6>)
200021de:	781b      	ldrb	r3, [r3, #0]
200021e0:	0019      	movs	r1, r3
200021e2:	000b      	movs	r3, r1
200021e4:	009b      	lsls	r3, r3, #2
200021e6:	185b      	adds	r3, r3, r1
200021e8:	3b01      	subs	r3, #1
200021ea:	429a      	cmp	r2, r3
200021ec:	d10c      	bne.n	20002208 <xcheckDotCollision+0x62>
200021ee:	68fa      	ldr	r2, [r7, #12]
200021f0:	69fb      	ldr	r3, [r7, #28]
200021f2:	18d2      	adds	r2, r2, r3
200021f4:	4b1d      	ldr	r3, [pc, #116]	; (2000226c <xcheckDotCollision+0xc6>)
200021f6:	785b      	ldrb	r3, [r3, #1]
200021f8:	0019      	movs	r1, r3
200021fa:	000b      	movs	r3, r1
200021fc:	009b      	lsls	r3, r3, #2
200021fe:	185b      	adds	r3, r3, r1
20002200:	429a      	cmp	r2, r3
20002202:	d101      	bne.n	20002208 <xcheckDotCollision+0x62>
				return 1;
20002204:	2301      	movs	r3, #1
20002206:	e02c      	b.n	20002262 <xcheckDotCollision+0xbc>
		for (int i=0; i<4; i++) {
20002208:	69fb      	ldr	r3, [r7, #28]
2000220a:	3301      	adds	r3, #1
2000220c:	61fb      	str	r3, [r7, #28]
2000220e:	69fb      	ldr	r3, [r7, #28]
20002210:	2b03      	cmp	r3, #3
20002212:	dde1      	ble.n	200021d8 <xcheckDotCollision+0x32>
20002214:	e024      	b.n	20002260 <xcheckDotCollision+0xba>
			}
		}
	} else if (o->dirx < 0) {				// if moving left
20002216:	687b      	ldr	r3, [r7, #4]
20002218:	685b      	ldr	r3, [r3, #4]
2000221a:	2b00      	cmp	r3, #0
2000221c:	da20      	bge.n	20002260 <xcheckDotCollision+0xba>
		for (int i=0; i<4; i++) {
2000221e:	2300      	movs	r3, #0
20002220:	61bb      	str	r3, [r7, #24]
20002222:	e01a      	b.n	2000225a <xcheckDotCollision+0xb4>
			if(xmin-1 == currentDot.x*5-3+2 && ymin+i == currentDot.y*5-2+2) {
20002224:	697b      	ldr	r3, [r7, #20]
20002226:	1e5a      	subs	r2, r3, #1
20002228:	4b10      	ldr	r3, [pc, #64]	; (2000226c <xcheckDotCollision+0xc6>)
2000222a:	781b      	ldrb	r3, [r3, #0]
2000222c:	0019      	movs	r1, r3
2000222e:	000b      	movs	r3, r1
20002230:	009b      	lsls	r3, r3, #2
20002232:	185b      	adds	r3, r3, r1
20002234:	3b01      	subs	r3, #1
20002236:	429a      	cmp	r2, r3
20002238:	d10c      	bne.n	20002254 <xcheckDotCollision+0xae>
2000223a:	68fa      	ldr	r2, [r7, #12]
2000223c:	69bb      	ldr	r3, [r7, #24]
2000223e:	18d2      	adds	r2, r2, r3
20002240:	4b0a      	ldr	r3, [pc, #40]	; (2000226c <xcheckDotCollision+0xc6>)
20002242:	785b      	ldrb	r3, [r3, #1]
20002244:	0019      	movs	r1, r3
20002246:	000b      	movs	r3, r1
20002248:	009b      	lsls	r3, r3, #2
2000224a:	185b      	adds	r3, r3, r1
2000224c:	429a      	cmp	r2, r3
2000224e:	d101      	bne.n	20002254 <xcheckDotCollision+0xae>
				return 1;
20002250:	2301      	movs	r3, #1
20002252:	e006      	b.n	20002262 <xcheckDotCollision+0xbc>
		for (int i=0; i<4; i++) {
20002254:	69bb      	ldr	r3, [r7, #24]
20002256:	3301      	adds	r3, #1
20002258:	61bb      	str	r3, [r7, #24]
2000225a:	69bb      	ldr	r3, [r7, #24]
2000225c:	2b03      	cmp	r3, #3
2000225e:	dde1      	ble.n	20002224 <xcheckDotCollision+0x7e>
			}
		}
	}
	return 0;
20002260:	2300      	movs	r3, #0
}
20002262:	0018      	movs	r0, r3
20002264:	46bd      	mov	sp, r7
20002266:	b008      	add	sp, #32
20002268:	bd80      	pop	{r7, pc}
2000226a:	46c0      	nop			; (mov r8, r8)
2000226c:	20006658 	andcs	r6, r0, r8, asr r6

20002270 <ycheckDotCollision>:

static int ycheckDotCollision(POBJECT o) {
20002270:	b580      	push	{r7, lr}
20002272:	b088      	sub	sp, #32
20002274:	af00      	add	r7, sp, #0
20002276:	6078      	str	r0, [r7, #4]
	int xmin = o->posx;						// left side coord
20002278:	687b      	ldr	r3, [r7, #4]
2000227a:	68db      	ldr	r3, [r3, #12]
2000227c:	617b      	str	r3, [r7, #20]
	int ymin = o->posy;						// upper side coord
2000227e:	687b      	ldr	r3, [r7, #4]
20002280:	691b      	ldr	r3, [r3, #16]
20002282:	613b      	str	r3, [r7, #16]
	int ymax = o->posy + o->geo->sizey - 1;	// lower side coord
20002284:	687b      	ldr	r3, [r7, #4]
20002286:	691a      	ldr	r2, [r3, #16]
20002288:	687b      	ldr	r3, [r7, #4]
2000228a:	681b      	ldr	r3, [r3, #0]
2000228c:	689b      	ldr	r3, [r3, #8]
2000228e:	18d3      	adds	r3, r2, r3
20002290:	3b01      	subs	r3, #1
20002292:	60fb      	str	r3, [r7, #12]
	
	if (o->diry > 0) {						// if moving right
20002294:	687b      	ldr	r3, [r7, #4]
20002296:	689b      	ldr	r3, [r3, #8]
20002298:	2b00      	cmp	r3, #0
2000229a:	dd21      	ble.n	200022e0 <ycheckDotCollision+0x70>
		for (int i=0; i<4; i++) {
2000229c:	2300      	movs	r3, #0
2000229e:	61fb      	str	r3, [r7, #28]
200022a0:	e01a      	b.n	200022d8 <ycheckDotCollision+0x68>
			if(xmin+i == currentDot.x*5-3+2 && ymax+1 == currentDot.y*5-2+2) {
200022a2:	697a      	ldr	r2, [r7, #20]
200022a4:	69fb      	ldr	r3, [r7, #28]
200022a6:	18d2      	adds	r2, r2, r3
200022a8:	4b22      	ldr	r3, [pc, #136]	; (20002334 <ycheckDotCollision+0xc4>)
200022aa:	781b      	ldrb	r3, [r3, #0]
200022ac:	0019      	movs	r1, r3
200022ae:	000b      	movs	r3, r1
200022b0:	009b      	lsls	r3, r3, #2
200022b2:	185b      	adds	r3, r3, r1
200022b4:	3b01      	subs	r3, #1
200022b6:	429a      	cmp	r2, r3
200022b8:	d10b      	bne.n	200022d2 <ycheckDotCollision+0x62>
200022ba:	68fb      	ldr	r3, [r7, #12]
200022bc:	1c5a      	adds	r2, r3, #1
200022be:	4b1d      	ldr	r3, [pc, #116]	; (20002334 <ycheckDotCollision+0xc4>)
200022c0:	785b      	ldrb	r3, [r3, #1]
200022c2:	0019      	movs	r1, r3
200022c4:	000b      	movs	r3, r1
200022c6:	009b      	lsls	r3, r3, #2
200022c8:	185b      	adds	r3, r3, r1
200022ca:	429a      	cmp	r2, r3
200022cc:	d101      	bne.n	200022d2 <ycheckDotCollision+0x62>
				return 1;
200022ce:	2301      	movs	r3, #1
200022d0:	e02c      	b.n	2000232c <ycheckDotCollision+0xbc>
		for (int i=0; i<4; i++) {
200022d2:	69fb      	ldr	r3, [r7, #28]
200022d4:	3301      	adds	r3, #1
200022d6:	61fb      	str	r3, [r7, #28]
200022d8:	69fb      	ldr	r3, [r7, #28]
200022da:	2b03      	cmp	r3, #3
200022dc:	dde1      	ble.n	200022a2 <ycheckDotCollision+0x32>
200022de:	e024      	b.n	2000232a <ycheckDotCollision+0xba>
			}
		}
	} else if (o->diry < 0) {				// if moving left
200022e0:	687b      	ldr	r3, [r7, #4]
200022e2:	689b      	ldr	r3, [r3, #8]
200022e4:	2b00      	cmp	r3, #0
200022e6:	da20      	bge.n	2000232a <ycheckDotCollision+0xba>
		for (int i=0; i<4; i++) {
200022e8:	2300      	movs	r3, #0
200022ea:	61bb      	str	r3, [r7, #24]
200022ec:	e01a      	b.n	20002324 <ycheckDotCollision+0xb4>
			if(xmin+i == currentDot.x*5-3+2 && ymin-1 == currentDot.y*5-2+2) {
200022ee:	697a      	ldr	r2, [r7, #20]
200022f0:	69bb      	ldr	r3, [r7, #24]
200022f2:	18d2      	adds	r2, r2, r3
200022f4:	4b0f      	ldr	r3, [pc, #60]	; (20002334 <ycheckDotCollision+0xc4>)
200022f6:	781b      	ldrb	r3, [r3, #0]
200022f8:	0019      	movs	r1, r3
200022fa:	000b      	movs	r3, r1
200022fc:	009b      	lsls	r3, r3, #2
200022fe:	185b      	adds	r3, r3, r1
20002300:	3b01      	subs	r3, #1
20002302:	429a      	cmp	r2, r3
20002304:	d10b      	bne.n	2000231e <ycheckDotCollision+0xae>
20002306:	693b      	ldr	r3, [r7, #16]
20002308:	1e5a      	subs	r2, r3, #1
2000230a:	4b0a      	ldr	r3, [pc, #40]	; (20002334 <ycheckDotCollision+0xc4>)
2000230c:	785b      	ldrb	r3, [r3, #1]
2000230e:	0019      	movs	r1, r3
20002310:	000b      	movs	r3, r1
20002312:	009b      	lsls	r3, r3, #2
20002314:	185b      	adds	r3, r3, r1
20002316:	429a      	cmp	r2, r3
20002318:	d101      	bne.n	2000231e <ycheckDotCollision+0xae>
				return 1;
2000231a:	2301      	movs	r3, #1
2000231c:	e006      	b.n	2000232c <ycheckDotCollision+0xbc>
		for (int i=0; i<4; i++) {
2000231e:	69bb      	ldr	r3, [r7, #24]
20002320:	3301      	adds	r3, #1
20002322:	61bb      	str	r3, [r7, #24]
20002324:	69bb      	ldr	r3, [r7, #24]
20002326:	2b03      	cmp	r3, #3
20002328:	dde1      	ble.n	200022ee <ycheckDotCollision+0x7e>
			}
		}
	}
	return 0;
2000232a:	2300      	movs	r3, #0
}
2000232c:	0018      	movs	r0, r3
2000232e:	46bd      	mov	sp, r7
20002330:	b008      	add	sp, #32
20002332:	bd80      	pop	{r7, pc}
20002334:	20006658 	andcs	r6, r0, r8, asr r6

20002338 <xcheckCollison>:

int xcheckCollison(POBJECT o) {
20002338:	b580      	push	{r7, lr}
2000233a:	b088      	sub	sp, #32
2000233c:	af00      	add	r7, sp, #0
2000233e:	6078      	str	r0, [r7, #4]
	int xmin = o->posx;						// left side coord
20002340:	687b      	ldr	r3, [r7, #4]
20002342:	68db      	ldr	r3, [r3, #12]
20002344:	617b      	str	r3, [r7, #20]
	int xmax = o->posx + o->geo->sizex - 1;	// right side coord
20002346:	687b      	ldr	r3, [r7, #4]
20002348:	68da      	ldr	r2, [r3, #12]
2000234a:	687b      	ldr	r3, [r7, #4]
2000234c:	681b      	ldr	r3, [r3, #0]
2000234e:	685b      	ldr	r3, [r3, #4]
20002350:	18d3      	adds	r3, r2, r3
20002352:	3b01      	subs	r3, #1
20002354:	613b      	str	r3, [r7, #16]
	int ymin = o->posy;						// upper side coord
20002356:	687b      	ldr	r3, [r7, #4]
20002358:	691b      	ldr	r3, [r3, #16]
2000235a:	60fb      	str	r3, [r7, #12]
	
	if (o->dirx > 0) {						// if moving right
2000235c:	687b      	ldr	r3, [r7, #4]
2000235e:	685b      	ldr	r3, [r3, #4]
20002360:	2b00      	cmp	r3, #0
20002362:	dd1b      	ble.n	2000239c <xcheckCollison+0x64>
		if ( (xmax + 1) > 128 ) {
20002364:	693b      	ldr	r3, [r7, #16]
20002366:	3301      	adds	r3, #1
20002368:	2b80      	cmp	r3, #128	; 0x80
2000236a:	dd01      	ble.n	20002370 <xcheckCollison+0x38>
			return 1;
2000236c:	2301      	movs	r3, #1
2000236e:	e035      	b.n	200023dc <xcheckCollison+0xa4>
		} else {
			for (int i=0; i<4; i++) {
20002370:	2300      	movs	r3, #0
20002372:	61fb      	str	r3, [r7, #28]
20002374:	e00e      	b.n	20002394 <xcheckCollison+0x5c>
				if(read_pixel(xmax+1, ymin+i)) {
20002376:	693b      	ldr	r3, [r7, #16]
20002378:	1c58      	adds	r0, r3, #1
2000237a:	68fa      	ldr	r2, [r7, #12]
2000237c:	69fb      	ldr	r3, [r7, #28]
2000237e:	18d3      	adds	r3, r2, r3
20002380:	0019      	movs	r1, r3
20002382:	f7fe ff57 	bl	20001234 <read_pixel>
20002386:	1e03      	subs	r3, r0, #0
20002388:	d001      	beq.n	2000238e <xcheckCollison+0x56>
					return 1;
2000238a:	2301      	movs	r3, #1
2000238c:	e026      	b.n	200023dc <xcheckCollison+0xa4>
			for (int i=0; i<4; i++) {
2000238e:	69fb      	ldr	r3, [r7, #28]
20002390:	3301      	adds	r3, #1
20002392:	61fb      	str	r3, [r7, #28]
20002394:	69fb      	ldr	r3, [r7, #28]
20002396:	2b03      	cmp	r3, #3
20002398:	dded      	ble.n	20002376 <xcheckCollison+0x3e>
2000239a:	e01e      	b.n	200023da <xcheckCollison+0xa2>
				}
			}
		}
	} else if (o->dirx < 0) {				// if moving left
2000239c:	687b      	ldr	r3, [r7, #4]
2000239e:	685b      	ldr	r3, [r3, #4]
200023a0:	2b00      	cmp	r3, #0
200023a2:	da1a      	bge.n	200023da <xcheckCollison+0xa2>
		if ( (xmin - 1) < 1 ) {
200023a4:	697b      	ldr	r3, [r7, #20]
200023a6:	3b01      	subs	r3, #1
200023a8:	2b00      	cmp	r3, #0
200023aa:	dc01      	bgt.n	200023b0 <xcheckCollison+0x78>
			return 1;
200023ac:	2301      	movs	r3, #1
200023ae:	e015      	b.n	200023dc <xcheckCollison+0xa4>
		} else {
			for (int i=0; i<4; i++) {
200023b0:	2300      	movs	r3, #0
200023b2:	61bb      	str	r3, [r7, #24]
200023b4:	e00e      	b.n	200023d4 <xcheckCollison+0x9c>
				if(read_pixel(xmin-1, ymin+i)) {
200023b6:	697b      	ldr	r3, [r7, #20]
200023b8:	1e58      	subs	r0, r3, #1
200023ba:	68fa      	ldr	r2, [r7, #12]
200023bc:	69bb      	ldr	r3, [r7, #24]
200023be:	18d3      	adds	r3, r2, r3
200023c0:	0019      	movs	r1, r3
200023c2:	f7fe ff37 	bl	20001234 <read_pixel>
200023c6:	1e03      	subs	r3, r0, #0
200023c8:	d001      	beq.n	200023ce <xcheckCollison+0x96>
					return 1;
200023ca:	2301      	movs	r3, #1
200023cc:	e006      	b.n	200023dc <xcheckCollison+0xa4>
			for (int i=0; i<4; i++) {
200023ce:	69bb      	ldr	r3, [r7, #24]
200023d0:	3301      	adds	r3, #1
200023d2:	61bb      	str	r3, [r7, #24]
200023d4:	69bb      	ldr	r3, [r7, #24]
200023d6:	2b03      	cmp	r3, #3
200023d8:	dded      	ble.n	200023b6 <xcheckCollison+0x7e>
				}
			}
		}
	}
	return 0;
200023da:	2300      	movs	r3, #0
}
200023dc:	0018      	movs	r0, r3
200023de:	46bd      	mov	sp, r7
200023e0:	b008      	add	sp, #32
200023e2:	bd80      	pop	{r7, pc}

200023e4 <ycheckCollison>:

int ycheckCollison(POBJECT o) {
200023e4:	b580      	push	{r7, lr}
200023e6:	b088      	sub	sp, #32
200023e8:	af00      	add	r7, sp, #0
200023ea:	6078      	str	r0, [r7, #4]
	int ymin = o->posy;						// upper side coord
200023ec:	687b      	ldr	r3, [r7, #4]
200023ee:	691b      	ldr	r3, [r3, #16]
200023f0:	617b      	str	r3, [r7, #20]
	int ymax = o->posy + o->geo->sizey - 1;	// lower side coord
200023f2:	687b      	ldr	r3, [r7, #4]
200023f4:	691a      	ldr	r2, [r3, #16]
200023f6:	687b      	ldr	r3, [r7, #4]
200023f8:	681b      	ldr	r3, [r3, #0]
200023fa:	689b      	ldr	r3, [r3, #8]
200023fc:	18d3      	adds	r3, r2, r3
200023fe:	3b01      	subs	r3, #1
20002400:	613b      	str	r3, [r7, #16]
	int xmin = o->posx;						// left side coord
20002402:	687b      	ldr	r3, [r7, #4]
20002404:	68db      	ldr	r3, [r3, #12]
20002406:	60fb      	str	r3, [r7, #12]
	
	if (o->diry > 0) {						// if moving down
20002408:	687b      	ldr	r3, [r7, #4]
2000240a:	689b      	ldr	r3, [r3, #8]
2000240c:	2b00      	cmp	r3, #0
2000240e:	dd1c      	ble.n	2000244a <ycheckCollison+0x66>
		if ( (ymax + 1) > 64 ) {
20002410:	693b      	ldr	r3, [r7, #16]
20002412:	3301      	adds	r3, #1
20002414:	2b40      	cmp	r3, #64	; 0x40
20002416:	dd01      	ble.n	2000241c <ycheckCollison+0x38>
			return 1;
20002418:	2301      	movs	r3, #1
2000241a:	e037      	b.n	2000248c <ycheckCollison+0xa8>
		} else {
			for (int i=0; i<4; i++) {
2000241c:	2300      	movs	r3, #0
2000241e:	61fb      	str	r3, [r7, #28]
20002420:	e00f      	b.n	20002442 <ycheckCollison+0x5e>
				if(read_pixel(xmin+i, ymax+1)) {
20002422:	68fa      	ldr	r2, [r7, #12]
20002424:	69fb      	ldr	r3, [r7, #28]
20002426:	18d2      	adds	r2, r2, r3
20002428:	693b      	ldr	r3, [r7, #16]
2000242a:	3301      	adds	r3, #1
2000242c:	0019      	movs	r1, r3
2000242e:	0010      	movs	r0, r2
20002430:	f7fe ff00 	bl	20001234 <read_pixel>
20002434:	1e03      	subs	r3, r0, #0
20002436:	d001      	beq.n	2000243c <ycheckCollison+0x58>
					return 1;
20002438:	2301      	movs	r3, #1
2000243a:	e027      	b.n	2000248c <ycheckCollison+0xa8>
			for (int i=0; i<4; i++) {
2000243c:	69fb      	ldr	r3, [r7, #28]
2000243e:	3301      	adds	r3, #1
20002440:	61fb      	str	r3, [r7, #28]
20002442:	69fb      	ldr	r3, [r7, #28]
20002444:	2b03      	cmp	r3, #3
20002446:	ddec      	ble.n	20002422 <ycheckCollison+0x3e>
20002448:	e01f      	b.n	2000248a <ycheckCollison+0xa6>
				}
			}
		}
	} else if (o->diry < 0) {				// if moving up
2000244a:	687b      	ldr	r3, [r7, #4]
2000244c:	689b      	ldr	r3, [r3, #8]
2000244e:	2b00      	cmp	r3, #0
20002450:	da1b      	bge.n	2000248a <ycheckCollison+0xa6>
		if ( (ymin - 1) < 1 ) {
20002452:	697b      	ldr	r3, [r7, #20]
20002454:	3b01      	subs	r3, #1
20002456:	2b00      	cmp	r3, #0
20002458:	dc01      	bgt.n	2000245e <ycheckCollison+0x7a>
			return 1;
2000245a:	2301      	movs	r3, #1
2000245c:	e016      	b.n	2000248c <ycheckCollison+0xa8>
		} else {
			for (int i=0; i<4; i++) {
2000245e:	2300      	movs	r3, #0
20002460:	61bb      	str	r3, [r7, #24]
20002462:	e00f      	b.n	20002484 <ycheckCollison+0xa0>
				if(read_pixel(xmin+i, ymin-1)) {
20002464:	68fa      	ldr	r2, [r7, #12]
20002466:	69bb      	ldr	r3, [r7, #24]
20002468:	18d2      	adds	r2, r2, r3
2000246a:	697b      	ldr	r3, [r7, #20]
2000246c:	3b01      	subs	r3, #1
2000246e:	0019      	movs	r1, r3
20002470:	0010      	movs	r0, r2
20002472:	f7fe fedf 	bl	20001234 <read_pixel>
20002476:	1e03      	subs	r3, r0, #0
20002478:	d001      	beq.n	2000247e <ycheckCollison+0x9a>
					return 1;
2000247a:	2301      	movs	r3, #1
2000247c:	e006      	b.n	2000248c <ycheckCollison+0xa8>
			for (int i=0; i<4; i++) {
2000247e:	69bb      	ldr	r3, [r7, #24]
20002480:	3301      	adds	r3, #1
20002482:	61bb      	str	r3, [r7, #24]
20002484:	69bb      	ldr	r3, [r7, #24]
20002486:	2b03      	cmp	r3, #3
20002488:	ddec      	ble.n	20002464 <ycheckCollison+0x80>
				}
			}
		}
	}
	return 0;
2000248a:	2300      	movs	r3, #0
}
2000248c:	0018      	movs	r0, r3
2000248e:	46bd      	mov	sp, r7
20002490:	b008      	add	sp, #32
20002492:	bd80      	pop	{r7, pc}

20002494 <move_player>:

static void move_player(POBJECT o){
20002494:	b590      	push	{r4, r7, lr}
20002496:	b087      	sub	sp, #28
20002498:	af00      	add	r7, sp, #0
2000249a:	6078      	str	r0, [r7, #4]
	int xsteps = abs(o->dirx);
2000249c:	687b      	ldr	r3, [r7, #4]
2000249e:	685b      	ldr	r3, [r3, #4]
200024a0:	17da      	asrs	r2, r3, #31
200024a2:	189b      	adds	r3, r3, r2
200024a4:	4053      	eors	r3, r2
200024a6:	60fb      	str	r3, [r7, #12]
	int ysteps = abs(o->diry);
200024a8:	687b      	ldr	r3, [r7, #4]
200024aa:	689b      	ldr	r3, [r3, #8]
200024ac:	17da      	asrs	r2, r3, #31
200024ae:	189b      	adds	r3, r3, r2
200024b0:	4053      	eors	r3, r2
200024b2:	60bb      	str	r3, [r7, #8]
	
	for(int i = 0; i < xsteps; i++)
200024b4:	2300      	movs	r3, #0
200024b6:	617b      	str	r3, [r7, #20]
200024b8:	e035      	b.n	20002526 <move_player+0x92>
	{
		if(xcheckDotCollision(o)) {
200024ba:	687b      	ldr	r3, [r7, #4]
200024bc:	0018      	movs	r0, r3
200024be:	f7ff fe72 	bl	200021a6 <xcheckDotCollision>
200024c2:	1e03      	subs	r3, r0, #0
200024c4:	d00a      	beq.n	200024dc <move_player+0x48>
			o->score++;
200024c6:	687b      	ldr	r3, [r7, #4]
200024c8:	699b      	ldr	r3, [r3, #24]
200024ca:	1c5a      	adds	r2, r3, #1
200024cc:	687b      	ldr	r3, [r7, #4]
200024ce:	619a      	str	r2, [r3, #24]
			chooseDot(rand());
200024d0:	f000 fa4e 	bl	20002970 <rand>
200024d4:	0003      	movs	r3, r0
200024d6:	0018      	movs	r0, r3
200024d8:	f7ff f926 	bl	20001728 <chooseDot>
		}
		if (xcheckCollison(o)) {
200024dc:	687b      	ldr	r3, [r7, #4]
200024de:	0018      	movs	r0, r3
200024e0:	f7ff ff2a 	bl	20002338 <xcheckCollison>
200024e4:	1e03      	subs	r3, r0, #0
200024e6:	d008      	beq.n	200024fa <move_player+0x66>
			o->set_speed(o, 0, o->diry);
200024e8:	687b      	ldr	r3, [r7, #4]
200024ea:	6a9c      	ldr	r4, [r3, #40]	; 0x28
200024ec:	687b      	ldr	r3, [r7, #4]
200024ee:	689a      	ldr	r2, [r3, #8]
200024f0:	687b      	ldr	r3, [r7, #4]
200024f2:	2100      	movs	r1, #0
200024f4:	0018      	movs	r0, r3
200024f6:	47a0      	blx	r4
			break;
200024f8:	e019      	b.n	2000252e <move_player+0x9a>
		}
		
		if (o->dirx > 0)
200024fa:	687b      	ldr	r3, [r7, #4]
200024fc:	685b      	ldr	r3, [r3, #4]
200024fe:	2b00      	cmp	r3, #0
20002500:	dd05      	ble.n	2000250e <move_player+0x7a>
			o->posx++;
20002502:	687b      	ldr	r3, [r7, #4]
20002504:	68db      	ldr	r3, [r3, #12]
20002506:	1c5a      	adds	r2, r3, #1
20002508:	687b      	ldr	r3, [r7, #4]
2000250a:	60da      	str	r2, [r3, #12]
2000250c:	e008      	b.n	20002520 <move_player+0x8c>
		else if (o->dirx < 0)
2000250e:	687b      	ldr	r3, [r7, #4]
20002510:	685b      	ldr	r3, [r3, #4]
20002512:	2b00      	cmp	r3, #0
20002514:	da04      	bge.n	20002520 <move_player+0x8c>
			o->posx--;
20002516:	687b      	ldr	r3, [r7, #4]
20002518:	68db      	ldr	r3, [r3, #12]
2000251a:	1e5a      	subs	r2, r3, #1
2000251c:	687b      	ldr	r3, [r7, #4]
2000251e:	60da      	str	r2, [r3, #12]
	for(int i = 0; i < xsteps; i++)
20002520:	697b      	ldr	r3, [r7, #20]
20002522:	3301      	adds	r3, #1
20002524:	617b      	str	r3, [r7, #20]
20002526:	697a      	ldr	r2, [r7, #20]
20002528:	68fb      	ldr	r3, [r7, #12]
2000252a:	429a      	cmp	r2, r3
2000252c:	dbc5      	blt.n	200024ba <move_player+0x26>
	}
	
	for(int i = 0; i < ysteps; i++)
2000252e:	2300      	movs	r3, #0
20002530:	613b      	str	r3, [r7, #16]
20002532:	e035      	b.n	200025a0 <move_player+0x10c>
	{
		if(ycheckDotCollision(o)) {
20002534:	687b      	ldr	r3, [r7, #4]
20002536:	0018      	movs	r0, r3
20002538:	f7ff fe9a 	bl	20002270 <ycheckDotCollision>
2000253c:	1e03      	subs	r3, r0, #0
2000253e:	d00a      	beq.n	20002556 <move_player+0xc2>
			o->score++;
20002540:	687b      	ldr	r3, [r7, #4]
20002542:	699b      	ldr	r3, [r3, #24]
20002544:	1c5a      	adds	r2, r3, #1
20002546:	687b      	ldr	r3, [r7, #4]
20002548:	619a      	str	r2, [r3, #24]
			chooseDot(rand());
2000254a:	f000 fa11 	bl	20002970 <rand>
2000254e:	0003      	movs	r3, r0
20002550:	0018      	movs	r0, r3
20002552:	f7ff f8e9 	bl	20001728 <chooseDot>
		}
		if (ycheckCollison(o)) {
20002556:	687b      	ldr	r3, [r7, #4]
20002558:	0018      	movs	r0, r3
2000255a:	f7ff ff43 	bl	200023e4 <ycheckCollison>
2000255e:	1e03      	subs	r3, r0, #0
20002560:	d008      	beq.n	20002574 <move_player+0xe0>
			o->set_speed(o, o->dirx, 0);
20002562:	687b      	ldr	r3, [r7, #4]
20002564:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20002566:	687b      	ldr	r3, [r7, #4]
20002568:	6859      	ldr	r1, [r3, #4]
2000256a:	687b      	ldr	r3, [r7, #4]
2000256c:	2200      	movs	r2, #0
2000256e:	0018      	movs	r0, r3
20002570:	47a0      	blx	r4
			break;
20002572:	e019      	b.n	200025a8 <move_player+0x114>
		}
		
		if (o->diry > 0)
20002574:	687b      	ldr	r3, [r7, #4]
20002576:	689b      	ldr	r3, [r3, #8]
20002578:	2b00      	cmp	r3, #0
2000257a:	dd05      	ble.n	20002588 <move_player+0xf4>
			o->posy++;
2000257c:	687b      	ldr	r3, [r7, #4]
2000257e:	691b      	ldr	r3, [r3, #16]
20002580:	1c5a      	adds	r2, r3, #1
20002582:	687b      	ldr	r3, [r7, #4]
20002584:	611a      	str	r2, [r3, #16]
20002586:	e008      	b.n	2000259a <move_player+0x106>
		else if (o->diry < 0)
20002588:	687b      	ldr	r3, [r7, #4]
2000258a:	689b      	ldr	r3, [r3, #8]
2000258c:	2b00      	cmp	r3, #0
2000258e:	da04      	bge.n	2000259a <move_player+0x106>
			o->posy--;
20002590:	687b      	ldr	r3, [r7, #4]
20002592:	691b      	ldr	r3, [r3, #16]
20002594:	1e5a      	subs	r2, r3, #1
20002596:	687b      	ldr	r3, [r7, #4]
20002598:	611a      	str	r2, [r3, #16]
	for(int i = 0; i < ysteps; i++)
2000259a:	693b      	ldr	r3, [r7, #16]
2000259c:	3301      	adds	r3, #1
2000259e:	613b      	str	r3, [r7, #16]
200025a0:	693a      	ldr	r2, [r7, #16]
200025a2:	68bb      	ldr	r3, [r7, #8]
200025a4:	429a      	cmp	r2, r3
200025a6:	dbc5      	blt.n	20002534 <move_player+0xa0>
	}
	
}
200025a8:	46c0      	nop			; (mov r8, r8)
200025aa:	46bd      	mov	sp, r7
200025ac:	b007      	add	sp, #28
200025ae:	bd90      	pop	{r4, r7, pc}

200025b0 <set_object_speed>:




static void set_object_speed(POBJECT o, int dirx, int diry){
200025b0:	b580      	push	{r7, lr}
200025b2:	b084      	sub	sp, #16
200025b4:	af00      	add	r7, sp, #0
200025b6:	60f8      	str	r0, [r7, #12]
200025b8:	60b9      	str	r1, [r7, #8]
200025ba:	607a      	str	r2, [r7, #4]
	o->dirx = dirx;
200025bc:	68fb      	ldr	r3, [r7, #12]
200025be:	68ba      	ldr	r2, [r7, #8]
200025c0:	605a      	str	r2, [r3, #4]
	o->diry = diry;
200025c2:	68fb      	ldr	r3, [r7, #12]
200025c4:	687a      	ldr	r2, [r7, #4]
200025c6:	609a      	str	r2, [r3, #8]
}
200025c8:	46c0      	nop			; (mov r8, r8)
200025ca:	46bd      	mov	sp, r7
200025cc:	b004      	add	sp, #16
200025ce:	bd80      	pop	{r7, pc}

200025d0 <draw_objectSim>:

/*---------------------SIM------------------------*/
void draw_objectSim(POBJECT o){				// SIMULATOR
200025d0:	b580      	push	{r7, lr}
200025d2:	b084      	sub	sp, #16
200025d4:	af00      	add	r7, sp, #0
200025d6:	6078      	str	r0, [r7, #4]
	for(int i=0; i < o->geo->numpoints; i++){
200025d8:	2300      	movs	r3, #0
200025da:	60fb      	str	r3, [r7, #12]
200025dc:	e01c      	b.n	20002618 <draw_objectSim+0x48>
		pixelSim(o->posx + o->geo->px[i].x, o->posy + o->geo->px[i].y, 1);
200025de:	687b      	ldr	r3, [r7, #4]
200025e0:	68da      	ldr	r2, [r3, #12]
200025e2:	687b      	ldr	r3, [r7, #4]
200025e4:	6819      	ldr	r1, [r3, #0]
200025e6:	68fb      	ldr	r3, [r7, #12]
200025e8:	3304      	adds	r3, #4
200025ea:	005b      	lsls	r3, r3, #1
200025ec:	18cb      	adds	r3, r1, r3
200025ee:	3304      	adds	r3, #4
200025f0:	781b      	ldrb	r3, [r3, #0]
200025f2:	18d0      	adds	r0, r2, r3
200025f4:	687b      	ldr	r3, [r7, #4]
200025f6:	691a      	ldr	r2, [r3, #16]
200025f8:	687b      	ldr	r3, [r7, #4]
200025fa:	6819      	ldr	r1, [r3, #0]
200025fc:	68fb      	ldr	r3, [r7, #12]
200025fe:	3304      	adds	r3, #4
20002600:	005b      	lsls	r3, r3, #1
20002602:	18cb      	adds	r3, r1, r3
20002604:	3305      	adds	r3, #5
20002606:	781b      	ldrb	r3, [r3, #0]
20002608:	18d3      	adds	r3, r2, r3
2000260a:	2201      	movs	r2, #1
2000260c:	0019      	movs	r1, r3
2000260e:	f7fe fcd5 	bl	20000fbc <pixelSim>
	for(int i=0; i < o->geo->numpoints; i++){
20002612:	68fb      	ldr	r3, [r7, #12]
20002614:	3301      	adds	r3, #1
20002616:	60fb      	str	r3, [r7, #12]
20002618:	687b      	ldr	r3, [r7, #4]
2000261a:	681b      	ldr	r3, [r3, #0]
2000261c:	681a      	ldr	r2, [r3, #0]
2000261e:	68fb      	ldr	r3, [r7, #12]
20002620:	429a      	cmp	r2, r3
20002622:	dcdc      	bgt.n	200025de <draw_objectSim+0xe>
	}
}
20002624:	46c0      	nop			; (mov r8, r8)
20002626:	46bd      	mov	sp, r7
20002628:	b004      	add	sp, #16
2000262a:	bd80      	pop	{r7, pc}

2000262c <clear_objectSim>:

static void clear_objectSim(POBJECT o){		// SIMULATOR
2000262c:	b580      	push	{r7, lr}
2000262e:	b084      	sub	sp, #16
20002630:	af00      	add	r7, sp, #0
20002632:	6078      	str	r0, [r7, #4]
	for(int i=0; i < o->geo->numpoints; i++){
20002634:	2300      	movs	r3, #0
20002636:	60fb      	str	r3, [r7, #12]
20002638:	e01c      	b.n	20002674 <clear_objectSim+0x48>
		pixelSim(o->posx + o->geo->px[i].x, o->posy + o->geo->px[i].y, 0);
2000263a:	687b      	ldr	r3, [r7, #4]
2000263c:	68da      	ldr	r2, [r3, #12]
2000263e:	687b      	ldr	r3, [r7, #4]
20002640:	6819      	ldr	r1, [r3, #0]
20002642:	68fb      	ldr	r3, [r7, #12]
20002644:	3304      	adds	r3, #4
20002646:	005b      	lsls	r3, r3, #1
20002648:	18cb      	adds	r3, r1, r3
2000264a:	3304      	adds	r3, #4
2000264c:	781b      	ldrb	r3, [r3, #0]
2000264e:	18d0      	adds	r0, r2, r3
20002650:	687b      	ldr	r3, [r7, #4]
20002652:	691a      	ldr	r2, [r3, #16]
20002654:	687b      	ldr	r3, [r7, #4]
20002656:	6819      	ldr	r1, [r3, #0]
20002658:	68fb      	ldr	r3, [r7, #12]
2000265a:	3304      	adds	r3, #4
2000265c:	005b      	lsls	r3, r3, #1
2000265e:	18cb      	adds	r3, r1, r3
20002660:	3305      	adds	r3, #5
20002662:	781b      	ldrb	r3, [r3, #0]
20002664:	18d3      	adds	r3, r2, r3
20002666:	2200      	movs	r2, #0
20002668:	0019      	movs	r1, r3
2000266a:	f7fe fca7 	bl	20000fbc <pixelSim>
	for(int i=0; i < o->geo->numpoints; i++){
2000266e:	68fb      	ldr	r3, [r7, #12]
20002670:	3301      	adds	r3, #1
20002672:	60fb      	str	r3, [r7, #12]
20002674:	687b      	ldr	r3, [r7, #4]
20002676:	681b      	ldr	r3, [r3, #0]
20002678:	681a      	ldr	r2, [r3, #0]
2000267a:	68fb      	ldr	r3, [r7, #12]
2000267c:	429a      	cmp	r2, r3
2000267e:	dcdc      	bgt.n	2000263a <clear_objectSim+0xe>
	}
}
20002680:	46c0      	nop			; (mov r8, r8)
20002682:	46bd      	mov	sp, r7
20002684:	b004      	add	sp, #16
20002686:	bd80      	pop	{r7, pc}

20002688 <main>:
int main(int argc, char **argv) {
20002688:	b580      	push	{r7, lr}
2000268a:	b08a      	sub	sp, #40	; 0x28
2000268c:	af00      	add	r7, sp, #0
2000268e:	6078      	str	r0, [r7, #4]
20002690:	6039      	str	r1, [r7, #0]
	int gameoverCountdown = TARGET_FPS*0.5;	// delay after game is over
20002692:	230c      	movs	r3, #12
20002694:	627b      	str	r3, [r7, #36]	; 0x24
	POBJECT p1 = &player1Object;
20002696:	4ba8      	ldr	r3, [pc, #672]	; (20002938 <main+0x2b0>)
20002698:	61bb      	str	r3, [r7, #24]
	POBJECT p2 = &player2Object;
2000269a:	4ba8      	ldr	r3, [pc, #672]	; (2000293c <main+0x2b4>)
2000269c:	617b      	str	r3, [r7, #20]
	POBJECT AI1 = &AI1Object;
2000269e:	4ba8      	ldr	r3, [pc, #672]	; (20002940 <main+0x2b8>)
200026a0:	613b      	str	r3, [r7, #16]
	init_app();
200026a2:	f000 faff 	bl	20002ca4 <init_app>
	init_graphic();
200026a6:	f7fe fc28 	bl	20000efa <init_graphic>
	init_ascii();
200026aa:	f7fe f981 	bl	200009b0 <init_ascii>
	clearBuffers();
200026ae:	f7fe fd47 	bl	20001140 <clearBuffers>
	graphic_clear_screen();
200026b2:	f7fe fc50 	bl	20000f56 <graphic_clear_screen>
	clearBuffer();
200026b6:	f7fe fd27 	bl	20001108 <clearBuffer>
	drawLevelSelectScreen();
200026ba:	f7ff f9f0 	bl	20001a9e <drawLevelSelectScreen>
	swapBuffers();
200026be:	f7fe fe9f 	bl	20001400 <swapBuffers>
	ascii_write("SELECT     1, 2,", "LEVEL      3, 4");
200026c2:	4aa0      	ldr	r2, [pc, #640]	; (20002944 <main+0x2bc>)
200026c4:	4ba0      	ldr	r3, [pc, #640]	; (20002948 <main+0x2c0>)
200026c6:	0011      	movs	r1, r2
200026c8:	0018      	movs	r0, r3
200026ca:	f7fe f9d1 	bl	20000a70 <ascii_write>
	bool levelSelected = false;
200026ce:	2300      	movs	r3, #0
200026d0:	623b      	str	r3, [r7, #32]
	while(!levelSelected) {		// Level selection
200026d2:	e030      	b.n	20002736 <main+0xae>
		nLevel = keyb();
200026d4:	f7fe ff2c 	bl	20001530 <keyb>
200026d8:	0002      	movs	r2, r0
200026da:	230f      	movs	r3, #15
200026dc:	18fb      	adds	r3, r7, r3
200026de:	701a      	strb	r2, [r3, #0]
		switch(nLevel) {
200026e0:	230f      	movs	r3, #15
200026e2:	18fb      	adds	r3, r7, r3
200026e4:	781b      	ldrb	r3, [r3, #0]
200026e6:	2b02      	cmp	r3, #2
200026e8:	d00e      	beq.n	20002708 <main+0x80>
200026ea:	dc02      	bgt.n	200026f2 <main+0x6a>
200026ec:	2b01      	cmp	r3, #1
200026ee:	d005      	beq.n	200026fc <main+0x74>
200026f0:	e01c      	b.n	2000272c <main+0xa4>
200026f2:	2b03      	cmp	r3, #3
200026f4:	d00e      	beq.n	20002714 <main+0x8c>
200026f6:	2b04      	cmp	r3, #4
200026f8:	d012      	beq.n	20002720 <main+0x98>
200026fa:	e017      	b.n	2000272c <main+0xa4>
			case 1:		chooseLevel(1);
200026fc:	2001      	movs	r0, #1
200026fe:	f7fe ffe1 	bl	200016c4 <chooseLevel>
						levelSelected = true;
20002702:	2301      	movs	r3, #1
20002704:	623b      	str	r3, [r7, #32]
						break;
20002706:	e011      	b.n	2000272c <main+0xa4>
			case 2:		chooseLevel(2);
20002708:	2002      	movs	r0, #2
2000270a:	f7fe ffdb 	bl	200016c4 <chooseLevel>
						levelSelected = true;
2000270e:	2301      	movs	r3, #1
20002710:	623b      	str	r3, [r7, #32]
						break;
20002712:	e00b      	b.n	2000272c <main+0xa4>
			case 3:		chooseLevel(3);
20002714:	2003      	movs	r0, #3
20002716:	f7fe ffd5 	bl	200016c4 <chooseLevel>
						levelSelected = true;
2000271a:	2301      	movs	r3, #1
2000271c:	623b      	str	r3, [r7, #32]
						break;
2000271e:	e005      	b.n	2000272c <main+0xa4>
			case 4:		chooseLevel(4);
20002720:	2004      	movs	r0, #4
20002722:	f7fe ffcf 	bl	200016c4 <chooseLevel>
						levelSelected = true;
20002726:	2301      	movs	r3, #1
20002728:	623b      	str	r3, [r7, #32]
						break;
2000272a:	46c0      	nop			; (mov r8, r8)
		r++;
2000272c:	4b87      	ldr	r3, [pc, #540]	; (2000294c <main+0x2c4>)
2000272e:	681b      	ldr	r3, [r3, #0]
20002730:	1c5a      	adds	r2, r3, #1
20002732:	4b86      	ldr	r3, [pc, #536]	; (2000294c <main+0x2c4>)
20002734:	601a      	str	r2, [r3, #0]
	while(!levelSelected) {		// Level selection
20002736:	6a3b      	ldr	r3, [r7, #32]
20002738:	2b00      	cmp	r3, #0
2000273a:	d0cb      	beq.n	200026d4 <main+0x4c>
	srand(r); 					// Random seed based on time spent in level selection
2000273c:	4b83      	ldr	r3, [pc, #524]	; (2000294c <main+0x2c4>)
2000273e:	681b      	ldr	r3, [r3, #0]
20002740:	0018      	movs	r0, r3
20002742:	f000 f92d 	bl	200029a0 <srand>
	startingMessageAscii();		// Countdown to start the game
20002746:	f000 fa5d 	bl	20002c04 <startingMessageAscii>
	clearBuffer();
2000274a:	f7fe fcdd 	bl	20001108 <clearBuffer>
	drawLevel();
2000274e:	f7ff f8e9 	bl	20001924 <drawLevel>
	swapBuffers();
20002752:	f7fe fe55 	bl	20001400 <swapBuffers>
	chooseDot(rand());			// Choose random first dot location
20002756:	f000 f90b 	bl	20002970 <rand>
2000275a:	0003      	movs	r3, r0
2000275c:	0018      	movs	r0, r3
2000275e:	f7fe ffe3 	bl	20001728 <chooseDot>
	printScore(p1, p2);			// Print 0 - 0 starting scoreboard
20002762:	697a      	ldr	r2, [r7, #20]
20002764:	69bb      	ldr	r3, [r7, #24]
20002766:	0011      	movs	r1, r2
20002768:	0018      	movs	r0, r3
2000276a:	f000 f9cf 	bl	20002b0c <printScore>
	bool gameover = false;
2000276e:	2300      	movs	r3, #0
20002770:	61fb      	str	r3, [r7, #28]
	while(!gameover) {
20002772:	e091      	b.n	20002898 <main+0x210>
		prevScores=p1->score+p2->score;
20002774:	69bb      	ldr	r3, [r7, #24]
20002776:	699a      	ldr	r2, [r3, #24]
20002778:	697b      	ldr	r3, [r7, #20]
2000277a:	699b      	ldr	r3, [r3, #24]
2000277c:	18d3      	adds	r3, r2, r3
2000277e:	60bb      	str	r3, [r7, #8]
		clearBuffer();
20002780:	f7fe fcc2 	bl	20001108 <clearBuffer>
		drawLevel();
20002784:	f7ff f8ce 	bl	20001924 <drawLevel>
		AI1->draw(AI1);
20002788:	693b      	ldr	r3, [r7, #16]
2000278a:	69db      	ldr	r3, [r3, #28]
2000278c:	693a      	ldr	r2, [r7, #16]
2000278e:	0010      	movs	r0, r2
20002790:	4798      	blx	r3
		p2->draw(p2);
20002792:	697b      	ldr	r3, [r7, #20]
20002794:	69db      	ldr	r3, [r3, #28]
20002796:	697a      	ldr	r2, [r7, #20]
20002798:	0010      	movs	r0, r2
2000279a:	4798      	blx	r3
		p1->move(p1);
2000279c:	69bb      	ldr	r3, [r7, #24]
2000279e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
200027a0:	69ba      	ldr	r2, [r7, #24]
200027a2:	0010      	movs	r0, r2
200027a4:	4798      	blx	r3
		clearBuffer();
200027a6:	f7fe fcaf 	bl	20001108 <clearBuffer>
		drawLevel();
200027aa:	f7ff f8bb 	bl	20001924 <drawLevel>
		AI1->draw(AI1);
200027ae:	693b      	ldr	r3, [r7, #16]
200027b0:	69db      	ldr	r3, [r3, #28]
200027b2:	693a      	ldr	r2, [r7, #16]
200027b4:	0010      	movs	r0, r2
200027b6:	4798      	blx	r3
		p1->draw(p1);
200027b8:	69bb      	ldr	r3, [r7, #24]
200027ba:	69db      	ldr	r3, [r3, #28]
200027bc:	69ba      	ldr	r2, [r7, #24]
200027be:	0010      	movs	r0, r2
200027c0:	4798      	blx	r3
		p2->move(p2);
200027c2:	697b      	ldr	r3, [r7, #20]
200027c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
200027c6:	697a      	ldr	r2, [r7, #20]
200027c8:	0010      	movs	r0, r2
200027ca:	4798      	blx	r3
		clearBuffer();
200027cc:	f7fe fc9c 	bl	20001108 <clearBuffer>
		drawLevel();
200027d0:	f7ff f8a8 	bl	20001924 <drawLevel>
		p1->draw(p1);
200027d4:	69bb      	ldr	r3, [r7, #24]
200027d6:	69db      	ldr	r3, [r3, #28]
200027d8:	69ba      	ldr	r2, [r7, #24]
200027da:	0010      	movs	r0, r2
200027dc:	4798      	blx	r3
		p2->draw(p2);
200027de:	697b      	ldr	r3, [r7, #20]
200027e0:	69db      	ldr	r3, [r3, #28]
200027e2:	697a      	ldr	r2, [r7, #20]
200027e4:	0010      	movs	r0, r2
200027e6:	4798      	blx	r3
		AI1->move(AI1);
200027e8:	693b      	ldr	r3, [r7, #16]
200027ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
200027ec:	693a      	ldr	r2, [r7, #16]
200027ee:	0010      	movs	r0, r2
200027f0:	4798      	blx	r3
		AI1->draw(AI1);
200027f2:	693b      	ldr	r3, [r7, #16]
200027f4:	69db      	ldr	r3, [r3, #28]
200027f6:	693a      	ldr	r2, [r7, #16]
200027f8:	0010      	movs	r0, r2
200027fa:	4798      	blx	r3
		drawDot();
200027fc:	f7fe ffb6 	bl	2000176c <drawDot>
		swapBuffers();
20002800:	f7fe fdfe 	bl	20001400 <swapBuffers>
		updatePlayer1(p1);
20002804:	69bb      	ldr	r3, [r7, #24]
20002806:	0018      	movs	r0, r3
20002808:	f000 f8d8 	bl	200029bc <updatePlayer1>
		updatePlayer2(p2);
2000280c:	697b      	ldr	r3, [r7, #20]
2000280e:	0018      	movs	r0, r3
20002810:	f000 f928 	bl	20002a64 <updatePlayer2>
		if (AI1->dirx == 0 && AI1->diry == 0)
20002814:	693b      	ldr	r3, [r7, #16]
20002816:	685b      	ldr	r3, [r3, #4]
20002818:	2b00      	cmp	r3, #0
2000281a:	d109      	bne.n	20002830 <main+0x1a8>
2000281c:	693b      	ldr	r3, [r7, #16]
2000281e:	689b      	ldr	r3, [r3, #8]
20002820:	2b00      	cmp	r3, #0
20002822:	d105      	bne.n	20002830 <main+0x1a8>
			chooseAIDirection(AI1, p1, p2);
20002824:	697a      	ldr	r2, [r7, #20]
20002826:	69b9      	ldr	r1, [r7, #24]
20002828:	693b      	ldr	r3, [r7, #16]
2000282a:	0018      	movs	r0, r3
2000282c:	f7fd fc6c 	bl	20000108 <chooseAIDirection>
		if(prevScores != p1->score+p2->score)
20002830:	69bb      	ldr	r3, [r7, #24]
20002832:	699a      	ldr	r2, [r3, #24]
20002834:	697b      	ldr	r3, [r7, #20]
20002836:	699b      	ldr	r3, [r3, #24]
20002838:	18d2      	adds	r2, r2, r3
2000283a:	68bb      	ldr	r3, [r7, #8]
2000283c:	429a      	cmp	r2, r3
2000283e:	d005      	beq.n	2000284c <main+0x1c4>
			printScore(p1, p2);
20002840:	697a      	ldr	r2, [r7, #20]
20002842:	69bb      	ldr	r3, [r7, #24]
20002844:	0011      	movs	r1, r2
20002846:	0018      	movs	r0, r3
20002848:	f000 f960 	bl	20002b0c <printScore>
		if (player1Eaten || player2Eaten || p1->score >= 20 || p2->score >= 20) {
2000284c:	4b40      	ldr	r3, [pc, #256]	; (20002950 <main+0x2c8>)
2000284e:	681b      	ldr	r3, [r3, #0]
20002850:	2b00      	cmp	r3, #0
20002852:	d10b      	bne.n	2000286c <main+0x1e4>
20002854:	4b3f      	ldr	r3, [pc, #252]	; (20002954 <main+0x2cc>)
20002856:	681b      	ldr	r3, [r3, #0]
20002858:	2b00      	cmp	r3, #0
2000285a:	d107      	bne.n	2000286c <main+0x1e4>
2000285c:	69bb      	ldr	r3, [r7, #24]
2000285e:	699b      	ldr	r3, [r3, #24]
20002860:	2b13      	cmp	r3, #19
20002862:	dc03      	bgt.n	2000286c <main+0x1e4>
20002864:	697b      	ldr	r3, [r7, #20]
20002866:	699b      	ldr	r3, [r3, #24]
20002868:	2b13      	cmp	r3, #19
2000286a:	dd06      	ble.n	2000287a <main+0x1f2>
			if (!gameoverCountdown--)
2000286c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000286e:	1e5a      	subs	r2, r3, #1
20002870:	627a      	str	r2, [r7, #36]	; 0x24
20002872:	2b00      	cmp	r3, #0
20002874:	d101      	bne.n	2000287a <main+0x1f2>
				gameover = true;
20002876:	2301      	movs	r3, #1
20002878:	61fb      	str	r3, [r7, #28]
		if (keyb1_2() == 5 && keyb3_4() == 6)	// force gameover by pressing 5 and 6 at the same time
2000287a:	f7fe fe9c 	bl	200015b6 <keyb1_2>
2000287e:	0003      	movs	r3, r0
20002880:	2b05      	cmp	r3, #5
20002882:	d106      	bne.n	20002892 <main+0x20a>
20002884:	f7fe feda 	bl	2000163c <keyb3_4>
20002888:	0003      	movs	r3, r0
2000288a:	2b06      	cmp	r3, #6
2000288c:	d101      	bne.n	20002892 <main+0x20a>
			gameover = true;
2000288e:	2301      	movs	r3, #1
20002890:	61fb      	str	r3, [r7, #28]
		delay_milli(1000/TARGET_FPS);
20002892:	2028      	movs	r0, #40	; 0x28
20002894:	f7fe f974 	bl	20000b80 <delay_milli>
	while(!gameover) {
20002898:	69fb      	ldr	r3, [r7, #28]
2000289a:	2b00      	cmp	r3, #0
2000289c:	d100      	bne.n	200028a0 <main+0x218>
2000289e:	e769      	b.n	20002774 <main+0xec>
	ascii_write("     GAME OVER     ", "");
200028a0:	4a2d      	ldr	r2, [pc, #180]	; (20002958 <main+0x2d0>)
200028a2:	4b2e      	ldr	r3, [pc, #184]	; (2000295c <main+0x2d4>)
200028a4:	0011      	movs	r1, r2
200028a6:	0018      	movs	r0, r3
200028a8:	f7fe f8e2 	bl	20000a70 <ascii_write>
	if ( (player2Eaten || p1->score >= 20) && (player1Eaten || p2->score >= 20) ) {
200028ac:	4b29      	ldr	r3, [pc, #164]	; (20002954 <main+0x2cc>)
200028ae:	681b      	ldr	r3, [r3, #0]
200028b0:	2b00      	cmp	r3, #0
200028b2:	d103      	bne.n	200028bc <main+0x234>
200028b4:	69bb      	ldr	r3, [r7, #24]
200028b6:	699b      	ldr	r3, [r3, #24]
200028b8:	2b13      	cmp	r3, #19
200028ba:	dd0e      	ble.n	200028da <main+0x252>
200028bc:	4b24      	ldr	r3, [pc, #144]	; (20002950 <main+0x2c8>)
200028be:	681b      	ldr	r3, [r3, #0]
200028c0:	2b00      	cmp	r3, #0
200028c2:	d103      	bne.n	200028cc <main+0x244>
200028c4:	697b      	ldr	r3, [r7, #20]
200028c6:	699b      	ldr	r3, [r3, #24]
200028c8:	2b13      	cmp	r3, #19
200028ca:	dd06      	ble.n	200028da <main+0x252>
		ascii_write("", "        DRAW        ");
200028cc:	4a24      	ldr	r2, [pc, #144]	; (20002960 <main+0x2d8>)
200028ce:	4b22      	ldr	r3, [pc, #136]	; (20002958 <main+0x2d0>)
200028d0:	0011      	movs	r1, r2
200028d2:	0018      	movs	r0, r3
200028d4:	f7fe f8cc 	bl	20000a70 <ascii_write>
200028d8:	e023      	b.n	20002922 <main+0x29a>
	} else if (player2Eaten || p1->score >= 20) {
200028da:	4b1e      	ldr	r3, [pc, #120]	; (20002954 <main+0x2cc>)
200028dc:	681b      	ldr	r3, [r3, #0]
200028de:	2b00      	cmp	r3, #0
200028e0:	d103      	bne.n	200028ea <main+0x262>
200028e2:	69bb      	ldr	r3, [r7, #24]
200028e4:	699b      	ldr	r3, [r3, #24]
200028e6:	2b13      	cmp	r3, #19
200028e8:	dd06      	ble.n	200028f8 <main+0x270>
		ascii_write("", "<-- PLAYER 1 WINS    ");
200028ea:	4a1e      	ldr	r2, [pc, #120]	; (20002964 <main+0x2dc>)
200028ec:	4b1a      	ldr	r3, [pc, #104]	; (20002958 <main+0x2d0>)
200028ee:	0011      	movs	r1, r2
200028f0:	0018      	movs	r0, r3
200028f2:	f7fe f8bd 	bl	20000a70 <ascii_write>
200028f6:	e014      	b.n	20002922 <main+0x29a>
	} else if (player1Eaten || p2->score >= 20) {
200028f8:	4b15      	ldr	r3, [pc, #84]	; (20002950 <main+0x2c8>)
200028fa:	681b      	ldr	r3, [r3, #0]
200028fc:	2b00      	cmp	r3, #0
200028fe:	d103      	bne.n	20002908 <main+0x280>
20002900:	697b      	ldr	r3, [r7, #20]
20002902:	699b      	ldr	r3, [r3, #24]
20002904:	2b13      	cmp	r3, #19
20002906:	dd06      	ble.n	20002916 <main+0x28e>
		ascii_write("", "   PLAYER 2 WINS --> ");
20002908:	4a17      	ldr	r2, [pc, #92]	; (20002968 <main+0x2e0>)
2000290a:	4b13      	ldr	r3, [pc, #76]	; (20002958 <main+0x2d0>)
2000290c:	0011      	movs	r1, r2
2000290e:	0018      	movs	r0, r3
20002910:	f7fe f8ae 	bl	20000a70 <ascii_write>
20002914:	e005      	b.n	20002922 <main+0x29a>
		ascii_write("", "      -ERROR-      ");
20002916:	4a15      	ldr	r2, [pc, #84]	; (2000296c <main+0x2e4>)
20002918:	4b0f      	ldr	r3, [pc, #60]	; (20002958 <main+0x2d0>)
2000291a:	0011      	movs	r1, r2
2000291c:	0018      	movs	r0, r3
2000291e:	f7fe f8a7 	bl	20000a70 <ascii_write>
	delay_milli(1000);
20002922:	23fa      	movs	r3, #250	; 0xfa
20002924:	009b      	lsls	r3, r3, #2
20002926:	0018      	movs	r0, r3
20002928:	f7fe f92a 	bl	20000b80 <delay_milli>
	return 0;
2000292c:	2300      	movs	r3, #0
}
2000292e:	0018      	movs	r0, r3
20002930:	46bd      	mov	sp, r7
20002932:	b00a      	add	sp, #40	; 0x28
20002934:	bd80      	pop	{r7, pc}
20002936:	46c0      	nop			; (mov r8, r8)
20002938:	20006e48 	andcs	r6, r0, r8, asr #28
2000293c:	20006e74 	andcs	r6, r0, r4, ror lr
20002940:	20006ea0 	andcs	r6, r0, r0, lsr #29
20002944:	20007300 	andcs	r7, r0, r0, lsl #6
20002948:	20007310 	andcs	r7, r0, r0, lsl r3
2000294c:	20005e44 	andcs	r5, r0, r4, asr #28
20002950:	20005e3c 	andcs	r5, r0, ip, lsr lr
20002954:	20005e40 	andcs	r5, r0, r0, asr #28
20002958:	20007324 	andcs	r7, r0, r4, lsr #6
2000295c:	20007328 	andcs	r7, r0, r8, lsr #6
20002960:	2000733c 	andcs	r7, r0, ip, lsr r3
20002964:	20007354 	andcs	r7, r0, r4, asr r3
20002968:	2000736c 	andcs	r7, r0, ip, ror #6
2000296c:	20007384 	andcs	r7, r0, r4, lsl #7

20002970 <rand>:
unsigned int rand(void) {
20002970:	b580      	push	{r7, lr}
20002972:	af00      	add	r7, sp, #0
	next = next * 1103515245 + 12345;
20002974:	4b07      	ldr	r3, [pc, #28]	; (20002994 <rand+0x24>)
20002976:	681b      	ldr	r3, [r3, #0]
20002978:	4a07      	ldr	r2, [pc, #28]	; (20002998 <rand+0x28>)
2000297a:	4353      	muls	r3, r2
2000297c:	4a07      	ldr	r2, [pc, #28]	; (2000299c <rand+0x2c>)
2000297e:	189a      	adds	r2, r3, r2
20002980:	4b04      	ldr	r3, [pc, #16]	; (20002994 <rand+0x24>)
20002982:	601a      	str	r2, [r3, #0]
	return (unsigned int)(next/65536) % 32768;	
20002984:	4b03      	ldr	r3, [pc, #12]	; (20002994 <rand+0x24>)
20002986:	681b      	ldr	r3, [r3, #0]
20002988:	0c1b      	lsrs	r3, r3, #16
2000298a:	045b      	lsls	r3, r3, #17
2000298c:	0c5b      	lsrs	r3, r3, #17
}	
2000298e:	0018      	movs	r0, r3
20002990:	46bd      	mov	sp, r7
20002992:	bd80      	pop	{r7, pc}
20002994:	20006ecc 	andcs	r6, r0, ip, asr #29
20002998:	41c64e6d 	bicmi	r4, r6, sp, ror #28
2000299c:	00003039 	andeq	r3, r0, r9, lsr r0

200029a0 <srand>:
void srand(unsigned int seed) {
200029a0:	b580      	push	{r7, lr}
200029a2:	b082      	sub	sp, #8
200029a4:	af00      	add	r7, sp, #0
200029a6:	6078      	str	r0, [r7, #4]
	next = seed;
200029a8:	4b03      	ldr	r3, [pc, #12]	; (200029b8 <srand+0x18>)
200029aa:	687a      	ldr	r2, [r7, #4]
200029ac:	601a      	str	r2, [r3, #0]
}
200029ae:	46c0      	nop			; (mov r8, r8)
200029b0:	46bd      	mov	sp, r7
200029b2:	b002      	add	sp, #8
200029b4:	bd80      	pop	{r7, pc}
200029b6:	46c0      	nop			; (mov r8, r8)
200029b8:	20006ecc 	andcs	r6, r0, ip, asr #29

200029bc <updatePlayer1>:
static void updatePlayer1(POBJECT p1) {
200029bc:	b590      	push	{r4, r7, lr}
200029be:	b083      	sub	sp, #12
200029c0:	af00      	add	r7, sp, #0
200029c2:	6078      	str	r0, [r7, #4]
	switch( keyb1_2() ) { // Read left half of keypad 
200029c4:	f7fe fdf7 	bl	200015b6 <keyb1_2>
200029c8:	0003      	movs	r3, r0
200029ca:	2b01      	cmp	r3, #1
200029cc:	d019      	beq.n	20002a02 <updatePlayer1+0x46>
200029ce:	dc02      	bgt.n	200029d6 <updatePlayer1+0x1a>
200029d0:	2b00      	cmp	r3, #0
200029d2:	d005      	beq.n	200029e0 <updatePlayer1+0x24>
200029d4:	e026      	b.n	20002a24 <updatePlayer1+0x68>
200029d6:	2b04      	cmp	r3, #4
200029d8:	d01c      	beq.n	20002a14 <updatePlayer1+0x58>
200029da:	2b0e      	cmp	r3, #14
200029dc:	d008      	beq.n	200029f0 <updatePlayer1+0x34>
200029de:	e021      	b.n	20002a24 <updatePlayer1+0x68>
		case 0:		p1NextDirx=p1->maxSpeed;		// right
200029e0:	687b      	ldr	r3, [r7, #4]
200029e2:	695a      	ldr	r2, [r3, #20]
200029e4:	4b1d      	ldr	r3, [pc, #116]	; (20002a5c <updatePlayer1+0xa0>)
200029e6:	601a      	str	r2, [r3, #0]
					p1NextDiry=0;
200029e8:	4b1d      	ldr	r3, [pc, #116]	; (20002a60 <updatePlayer1+0xa4>)
200029ea:	2200      	movs	r2, #0
200029ec:	601a      	str	r2, [r3, #0]
					break;
200029ee:	e019      	b.n	20002a24 <updatePlayer1+0x68>
		case 14:	p1NextDirx=-(p1->maxSpeed);		// left
200029f0:	687b      	ldr	r3, [r7, #4]
200029f2:	695b      	ldr	r3, [r3, #20]
200029f4:	425a      	negs	r2, r3
200029f6:	4b19      	ldr	r3, [pc, #100]	; (20002a5c <updatePlayer1+0xa0>)
200029f8:	601a      	str	r2, [r3, #0]
					p1NextDiry=0;
200029fa:	4b19      	ldr	r3, [pc, #100]	; (20002a60 <updatePlayer1+0xa4>)
200029fc:	2200      	movs	r2, #0
200029fe:	601a      	str	r2, [r3, #0]
					break;
20002a00:	e010      	b.n	20002a24 <updatePlayer1+0x68>
		case 1:		p1NextDirx=0;					// up
20002a02:	4b16      	ldr	r3, [pc, #88]	; (20002a5c <updatePlayer1+0xa0>)
20002a04:	2200      	movs	r2, #0
20002a06:	601a      	str	r2, [r3, #0]
					p1NextDiry=-(p1->maxSpeed);
20002a08:	687b      	ldr	r3, [r7, #4]
20002a0a:	695b      	ldr	r3, [r3, #20]
20002a0c:	425a      	negs	r2, r3
20002a0e:	4b14      	ldr	r3, [pc, #80]	; (20002a60 <updatePlayer1+0xa4>)
20002a10:	601a      	str	r2, [r3, #0]
					break;
20002a12:	e007      	b.n	20002a24 <updatePlayer1+0x68>
		case 4:		p1NextDirx=0;					// down
20002a14:	4b11      	ldr	r3, [pc, #68]	; (20002a5c <updatePlayer1+0xa0>)
20002a16:	2200      	movs	r2, #0
20002a18:	601a      	str	r2, [r3, #0]
					p1NextDiry=p1->maxSpeed;
20002a1a:	687b      	ldr	r3, [r7, #4]
20002a1c:	695a      	ldr	r2, [r3, #20]
20002a1e:	4b10      	ldr	r3, [pc, #64]	; (20002a60 <updatePlayer1+0xa4>)
20002a20:	601a      	str	r2, [r3, #0]
					break;
20002a22:	46c0      	nop			; (mov r8, r8)
	if (p1->dirx == 0 && p1->diry == 0) {			// Change direction of p1 after reaching a stop
20002a24:	687b      	ldr	r3, [r7, #4]
20002a26:	685b      	ldr	r3, [r3, #4]
20002a28:	2b00      	cmp	r3, #0
20002a2a:	d112      	bne.n	20002a52 <updatePlayer1+0x96>
20002a2c:	687b      	ldr	r3, [r7, #4]
20002a2e:	689b      	ldr	r3, [r3, #8]
20002a30:	2b00      	cmp	r3, #0
20002a32:	d10e      	bne.n	20002a52 <updatePlayer1+0x96>
		p1->set_speed(p1, p1NextDirx, p1NextDiry);
20002a34:	687b      	ldr	r3, [r7, #4]
20002a36:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20002a38:	4b08      	ldr	r3, [pc, #32]	; (20002a5c <updatePlayer1+0xa0>)
20002a3a:	6819      	ldr	r1, [r3, #0]
20002a3c:	4b08      	ldr	r3, [pc, #32]	; (20002a60 <updatePlayer1+0xa4>)
20002a3e:	681a      	ldr	r2, [r3, #0]
20002a40:	687b      	ldr	r3, [r7, #4]
20002a42:	0018      	movs	r0, r3
20002a44:	47a0      	blx	r4
		p1NextDirx = 0;
20002a46:	4b05      	ldr	r3, [pc, #20]	; (20002a5c <updatePlayer1+0xa0>)
20002a48:	2200      	movs	r2, #0
20002a4a:	601a      	str	r2, [r3, #0]
		p1NextDiry = 0;
20002a4c:	4b04      	ldr	r3, [pc, #16]	; (20002a60 <updatePlayer1+0xa4>)
20002a4e:	2200      	movs	r2, #0
20002a50:	601a      	str	r2, [r3, #0]
}
20002a52:	46c0      	nop			; (mov r8, r8)
20002a54:	46bd      	mov	sp, r7
20002a56:	b003      	add	sp, #12
20002a58:	bd90      	pop	{r4, r7, pc}
20002a5a:	46c0      	nop			; (mov r8, r8)
20002a5c:	20005e48 	andcs	r5, r0, r8, asr #28
20002a60:	20005e4c 	andcs	r5, r0, ip, asr #28

20002a64 <updatePlayer2>:
static void updatePlayer2(POBJECT p2) {
20002a64:	b590      	push	{r4, r7, lr}
20002a66:	b083      	sub	sp, #12
20002a68:	af00      	add	r7, sp, #0
20002a6a:	6078      	str	r0, [r7, #4]
	switch( keyb3_4() ) { // Read right half of keypad
20002a6c:	f7fe fde6 	bl	2000163c <keyb3_4>
20002a70:	0003      	movs	r3, r0
20002a72:	2b0b      	cmp	r3, #11
20002a74:	d022      	beq.n	20002abc <updatePlayer2+0x58>
20002a76:	dc02      	bgt.n	20002a7e <updatePlayer2+0x1a>
20002a78:	2b0a      	cmp	r3, #10
20002a7a:	d016      	beq.n	20002aaa <updatePlayer2+0x46>
20002a7c:	e026      	b.n	20002acc <updatePlayer2+0x68>
20002a7e:	2b0d      	cmp	r3, #13
20002a80:	d002      	beq.n	20002a88 <updatePlayer2+0x24>
20002a82:	2b0f      	cmp	r3, #15
20002a84:	d008      	beq.n	20002a98 <updatePlayer2+0x34>
20002a86:	e021      	b.n	20002acc <updatePlayer2+0x68>
		case 13:	p2NextDirx=p2->maxSpeed;		// right
20002a88:	687b      	ldr	r3, [r7, #4]
20002a8a:	695a      	ldr	r2, [r3, #20]
20002a8c:	4b1d      	ldr	r3, [pc, #116]	; (20002b04 <updatePlayer2+0xa0>)
20002a8e:	601a      	str	r2, [r3, #0]
					p2NextDiry=0;
20002a90:	4b1d      	ldr	r3, [pc, #116]	; (20002b08 <updatePlayer2+0xa4>)
20002a92:	2200      	movs	r2, #0
20002a94:	601a      	str	r2, [r3, #0]
					break;
20002a96:	e019      	b.n	20002acc <updatePlayer2+0x68>
		case 15:	p2NextDirx=-(p2->maxSpeed);		// left
20002a98:	687b      	ldr	r3, [r7, #4]
20002a9a:	695b      	ldr	r3, [r3, #20]
20002a9c:	425a      	negs	r2, r3
20002a9e:	4b19      	ldr	r3, [pc, #100]	; (20002b04 <updatePlayer2+0xa0>)
20002aa0:	601a      	str	r2, [r3, #0]
					p2NextDiry=0;
20002aa2:	4b19      	ldr	r3, [pc, #100]	; (20002b08 <updatePlayer2+0xa4>)
20002aa4:	2200      	movs	r2, #0
20002aa6:	601a      	str	r2, [r3, #0]
					break;
20002aa8:	e010      	b.n	20002acc <updatePlayer2+0x68>
		case 10:	p2NextDirx=0;					// up
20002aaa:	4b16      	ldr	r3, [pc, #88]	; (20002b04 <updatePlayer2+0xa0>)
20002aac:	2200      	movs	r2, #0
20002aae:	601a      	str	r2, [r3, #0]
					p2NextDiry=-(p2->maxSpeed);
20002ab0:	687b      	ldr	r3, [r7, #4]
20002ab2:	695b      	ldr	r3, [r3, #20]
20002ab4:	425a      	negs	r2, r3
20002ab6:	4b14      	ldr	r3, [pc, #80]	; (20002b08 <updatePlayer2+0xa4>)
20002ab8:	601a      	str	r2, [r3, #0]
					break;
20002aba:	e007      	b.n	20002acc <updatePlayer2+0x68>
		case 11:	p2NextDirx=0;					// down
20002abc:	4b11      	ldr	r3, [pc, #68]	; (20002b04 <updatePlayer2+0xa0>)
20002abe:	2200      	movs	r2, #0
20002ac0:	601a      	str	r2, [r3, #0]
					p2NextDiry=p2->maxSpeed;
20002ac2:	687b      	ldr	r3, [r7, #4]
20002ac4:	695a      	ldr	r2, [r3, #20]
20002ac6:	4b10      	ldr	r3, [pc, #64]	; (20002b08 <updatePlayer2+0xa4>)
20002ac8:	601a      	str	r2, [r3, #0]
					break;
20002aca:	46c0      	nop			; (mov r8, r8)
	if (p2->dirx == 0 && p2->diry == 0) {			// Change direction of p2 after reaching a stop
20002acc:	687b      	ldr	r3, [r7, #4]
20002ace:	685b      	ldr	r3, [r3, #4]
20002ad0:	2b00      	cmp	r3, #0
20002ad2:	d112      	bne.n	20002afa <updatePlayer2+0x96>
20002ad4:	687b      	ldr	r3, [r7, #4]
20002ad6:	689b      	ldr	r3, [r3, #8]
20002ad8:	2b00      	cmp	r3, #0
20002ada:	d10e      	bne.n	20002afa <updatePlayer2+0x96>
		p2->set_speed(p2, p2NextDirx, p2NextDiry);
20002adc:	687b      	ldr	r3, [r7, #4]
20002ade:	6a9c      	ldr	r4, [r3, #40]	; 0x28
20002ae0:	4b08      	ldr	r3, [pc, #32]	; (20002b04 <updatePlayer2+0xa0>)
20002ae2:	6819      	ldr	r1, [r3, #0]
20002ae4:	4b08      	ldr	r3, [pc, #32]	; (20002b08 <updatePlayer2+0xa4>)
20002ae6:	681a      	ldr	r2, [r3, #0]
20002ae8:	687b      	ldr	r3, [r7, #4]
20002aea:	0018      	movs	r0, r3
20002aec:	47a0      	blx	r4
		p2NextDirx = 0;
20002aee:	4b05      	ldr	r3, [pc, #20]	; (20002b04 <updatePlayer2+0xa0>)
20002af0:	2200      	movs	r2, #0
20002af2:	601a      	str	r2, [r3, #0]
		p2NextDiry = 0;
20002af4:	4b04      	ldr	r3, [pc, #16]	; (20002b08 <updatePlayer2+0xa4>)
20002af6:	2200      	movs	r2, #0
20002af8:	601a      	str	r2, [r3, #0]
}
20002afa:	46c0      	nop			; (mov r8, r8)
20002afc:	46bd      	mov	sp, r7
20002afe:	b003      	add	sp, #12
20002b00:	bd90      	pop	{r4, r7, pc}
20002b02:	46c0      	nop			; (mov r8, r8)
20002b04:	20005e50 	andcs	r5, r0, r0, asr lr
20002b08:	20005e54 	andcs	r5, r0, r4, asr lr

20002b0c <printScore>:
static void printScore(POBJECT p1, POBJECT p2) {
20002b0c:	b590      	push	{r4, r7, lr}
20002b0e:	b089      	sub	sp, #36	; 0x24
20002b10:	af00      	add	r7, sp, #0
20002b12:	6078      	str	r0, [r7, #4]
20002b14:	6039      	str	r1, [r7, #0]
	char scoreString[] = "  P1     -     P2";
20002b16:	230c      	movs	r3, #12
20002b18:	18fb      	adds	r3, r7, r3
20002b1a:	4a38      	ldr	r2, [pc, #224]	; (20002bfc <printScore+0xf0>)
20002b1c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002b1e:	c313      	stmia	r3!, {r0, r1, r4}
20002b20:	6811      	ldr	r1, [r2, #0]
20002b22:	6019      	str	r1, [r3, #0]
20002b24:	8892      	ldrh	r2, [r2, #4]
20002b26:	809a      	strh	r2, [r3, #4]
	ascii_clear();
20002b28:	f7fd ff95 	bl	20000a56 <ascii_clear>
	if(p1->score < 10) {
20002b2c:	687b      	ldr	r3, [r7, #4]
20002b2e:	699b      	ldr	r3, [r3, #24]
20002b30:	2b09      	cmp	r3, #9
20002b32:	dc08      	bgt.n	20002b46 <printScore+0x3a>
		scoreString[7] = p1->score+48;
20002b34:	687b      	ldr	r3, [r7, #4]
20002b36:	699b      	ldr	r3, [r3, #24]
20002b38:	b2db      	uxtb	r3, r3
20002b3a:	3330      	adds	r3, #48	; 0x30
20002b3c:	b2da      	uxtb	r2, r3
20002b3e:	230c      	movs	r3, #12
20002b40:	18fb      	adds	r3, r7, r3
20002b42:	71da      	strb	r2, [r3, #7]
20002b44:	e020      	b.n	20002b88 <printScore+0x7c>
	} else if (10 <= p1->score && p1->score < 20) {
20002b46:	687b      	ldr	r3, [r7, #4]
20002b48:	699b      	ldr	r3, [r3, #24]
20002b4a:	2b09      	cmp	r3, #9
20002b4c:	dd10      	ble.n	20002b70 <printScore+0x64>
20002b4e:	687b      	ldr	r3, [r7, #4]
20002b50:	699b      	ldr	r3, [r3, #24]
20002b52:	2b13      	cmp	r3, #19
20002b54:	dc0c      	bgt.n	20002b70 <printScore+0x64>
		scoreString[6] = 1+48;
20002b56:	230c      	movs	r3, #12
20002b58:	18fb      	adds	r3, r7, r3
20002b5a:	2231      	movs	r2, #49	; 0x31
20002b5c:	719a      	strb	r2, [r3, #6]
		scoreString[7] = p1->score-10+48;
20002b5e:	687b      	ldr	r3, [r7, #4]
20002b60:	699b      	ldr	r3, [r3, #24]
20002b62:	b2db      	uxtb	r3, r3
20002b64:	3326      	adds	r3, #38	; 0x26
20002b66:	b2da      	uxtb	r2, r3
20002b68:	230c      	movs	r3, #12
20002b6a:	18fb      	adds	r3, r7, r3
20002b6c:	71da      	strb	r2, [r3, #7]
20002b6e:	e00b      	b.n	20002b88 <printScore+0x7c>
	} else if (p1->score == 20) {
20002b70:	687b      	ldr	r3, [r7, #4]
20002b72:	699b      	ldr	r3, [r3, #24]
20002b74:	2b14      	cmp	r3, #20
20002b76:	d107      	bne.n	20002b88 <printScore+0x7c>
		scoreString[6] = 2+48;
20002b78:	230c      	movs	r3, #12
20002b7a:	18fb      	adds	r3, r7, r3
20002b7c:	2232      	movs	r2, #50	; 0x32
20002b7e:	719a      	strb	r2, [r3, #6]
		scoreString[7] = 0+48;
20002b80:	230c      	movs	r3, #12
20002b82:	18fb      	adds	r3, r7, r3
20002b84:	2230      	movs	r2, #48	; 0x30
20002b86:	71da      	strb	r2, [r3, #7]
	if(p2->score < 10) {
20002b88:	683b      	ldr	r3, [r7, #0]
20002b8a:	699b      	ldr	r3, [r3, #24]
20002b8c:	2b09      	cmp	r3, #9
20002b8e:	dc08      	bgt.n	20002ba2 <printScore+0x96>
		scoreString[11] = p2->score+48;
20002b90:	683b      	ldr	r3, [r7, #0]
20002b92:	699b      	ldr	r3, [r3, #24]
20002b94:	b2db      	uxtb	r3, r3
20002b96:	3330      	adds	r3, #48	; 0x30
20002b98:	b2da      	uxtb	r2, r3
20002b9a:	230c      	movs	r3, #12
20002b9c:	18fb      	adds	r3, r7, r3
20002b9e:	72da      	strb	r2, [r3, #11]
20002ba0:	e020      	b.n	20002be4 <printScore+0xd8>
	} else if (10 <= p2->score && p2->score < 20) {
20002ba2:	683b      	ldr	r3, [r7, #0]
20002ba4:	699b      	ldr	r3, [r3, #24]
20002ba6:	2b09      	cmp	r3, #9
20002ba8:	dd10      	ble.n	20002bcc <printScore+0xc0>
20002baa:	683b      	ldr	r3, [r7, #0]
20002bac:	699b      	ldr	r3, [r3, #24]
20002bae:	2b13      	cmp	r3, #19
20002bb0:	dc0c      	bgt.n	20002bcc <printScore+0xc0>
		scoreString[11] = 1+48;
20002bb2:	230c      	movs	r3, #12
20002bb4:	18fb      	adds	r3, r7, r3
20002bb6:	2231      	movs	r2, #49	; 0x31
20002bb8:	72da      	strb	r2, [r3, #11]
		scoreString[12] = p2->score-10+48;
20002bba:	683b      	ldr	r3, [r7, #0]
20002bbc:	699b      	ldr	r3, [r3, #24]
20002bbe:	b2db      	uxtb	r3, r3
20002bc0:	3326      	adds	r3, #38	; 0x26
20002bc2:	b2da      	uxtb	r2, r3
20002bc4:	230c      	movs	r3, #12
20002bc6:	18fb      	adds	r3, r7, r3
20002bc8:	731a      	strb	r2, [r3, #12]
20002bca:	e00b      	b.n	20002be4 <printScore+0xd8>
	} else if (p2->score == 20) {
20002bcc:	683b      	ldr	r3, [r7, #0]
20002bce:	699b      	ldr	r3, [r3, #24]
20002bd0:	2b14      	cmp	r3, #20
20002bd2:	d107      	bne.n	20002be4 <printScore+0xd8>
		scoreString[11] = 2+48;
20002bd4:	230c      	movs	r3, #12
20002bd6:	18fb      	adds	r3, r7, r3
20002bd8:	2232      	movs	r2, #50	; 0x32
20002bda:	72da      	strb	r2, [r3, #11]
		scoreString[12] = 0+48;
20002bdc:	230c      	movs	r3, #12
20002bde:	18fb      	adds	r3, r7, r3
20002be0:	2230      	movs	r2, #48	; 0x30
20002be2:	731a      	strb	r2, [r3, #12]
	ascii_write(scoreString, "");
20002be4:	4a06      	ldr	r2, [pc, #24]	; (20002c00 <printScore+0xf4>)
20002be6:	230c      	movs	r3, #12
20002be8:	18fb      	adds	r3, r7, r3
20002bea:	0011      	movs	r1, r2
20002bec:	0018      	movs	r0, r3
20002bee:	f7fd ff3f 	bl	20000a70 <ascii_write>
}
20002bf2:	46c0      	nop			; (mov r8, r8)
20002bf4:	46bd      	mov	sp, r7
20002bf6:	b009      	add	sp, #36	; 0x24
20002bf8:	bd90      	pop	{r4, r7, pc}
20002bfa:	46c0      	nop			; (mov r8, r8)
20002bfc:	20007398 	mulcs	r0, r8, r3
20002c00:	20007324 	andcs	r7, r0, r4, lsr #6

20002c04 <startingMessageAscii>:
static void startingMessageAscii(void) {
20002c04:	b580      	push	{r7, lr}
20002c06:	af00      	add	r7, sp, #0
	ascii_clear();
20002c08:	f7fd ff25 	bl	20000a56 <ascii_clear>
	ascii_write("   STARTING IN...", "");
20002c0c:	4a1f      	ldr	r2, [pc, #124]	; (20002c8c <startingMessageAscii+0x88>)
20002c0e:	4b20      	ldr	r3, [pc, #128]	; (20002c90 <startingMessageAscii+0x8c>)
20002c10:	0011      	movs	r1, r2
20002c12:	0018      	movs	r0, r3
20002c14:	f7fd ff2c 	bl	20000a70 <ascii_write>
	delay_milli(500);
20002c18:	23fa      	movs	r3, #250	; 0xfa
20002c1a:	005b      	lsls	r3, r3, #1
20002c1c:	0018      	movs	r0, r3
20002c1e:	f7fd ffaf 	bl	20000b80 <delay_milli>
	ascii_clear();
20002c22:	f7fd ff18 	bl	20000a56 <ascii_clear>
	ascii_write("          3", "");
20002c26:	4a19      	ldr	r2, [pc, #100]	; (20002c8c <startingMessageAscii+0x88>)
20002c28:	4b1a      	ldr	r3, [pc, #104]	; (20002c94 <startingMessageAscii+0x90>)
20002c2a:	0011      	movs	r1, r2
20002c2c:	0018      	movs	r0, r3
20002c2e:	f7fd ff1f 	bl	20000a70 <ascii_write>
	delay_milli(400);
20002c32:	23c8      	movs	r3, #200	; 0xc8
20002c34:	005b      	lsls	r3, r3, #1
20002c36:	0018      	movs	r0, r3
20002c38:	f7fd ffa2 	bl	20000b80 <delay_milli>
	ascii_clear();
20002c3c:	f7fd ff0b 	bl	20000a56 <ascii_clear>
	ascii_write("          2", "");
20002c40:	4a12      	ldr	r2, [pc, #72]	; (20002c8c <startingMessageAscii+0x88>)
20002c42:	4b15      	ldr	r3, [pc, #84]	; (20002c98 <startingMessageAscii+0x94>)
20002c44:	0011      	movs	r1, r2
20002c46:	0018      	movs	r0, r3
20002c48:	f7fd ff12 	bl	20000a70 <ascii_write>
	delay_milli(400);
20002c4c:	23c8      	movs	r3, #200	; 0xc8
20002c4e:	005b      	lsls	r3, r3, #1
20002c50:	0018      	movs	r0, r3
20002c52:	f7fd ff95 	bl	20000b80 <delay_milli>
	ascii_clear();
20002c56:	f7fd fefe 	bl	20000a56 <ascii_clear>
	ascii_write("          1", "");
20002c5a:	4a0c      	ldr	r2, [pc, #48]	; (20002c8c <startingMessageAscii+0x88>)
20002c5c:	4b0f      	ldr	r3, [pc, #60]	; (20002c9c <startingMessageAscii+0x98>)
20002c5e:	0011      	movs	r1, r2
20002c60:	0018      	movs	r0, r3
20002c62:	f7fd ff05 	bl	20000a70 <ascii_write>
	delay_milli(400);
20002c66:	23c8      	movs	r3, #200	; 0xc8
20002c68:	005b      	lsls	r3, r3, #1
20002c6a:	0018      	movs	r0, r3
20002c6c:	f7fd ff88 	bl	20000b80 <delay_milli>
	ascii_clear();
20002c70:	f7fd fef1 	bl	20000a56 <ascii_clear>
	ascii_write("         GO", "");
20002c74:	4a05      	ldr	r2, [pc, #20]	; (20002c8c <startingMessageAscii+0x88>)
20002c76:	4b0a      	ldr	r3, [pc, #40]	; (20002ca0 <startingMessageAscii+0x9c>)
20002c78:	0011      	movs	r1, r2
20002c7a:	0018      	movs	r0, r3
20002c7c:	f7fd fef8 	bl	20000a70 <ascii_write>
	delay_milli(150);
20002c80:	2096      	movs	r0, #150	; 0x96
20002c82:	f7fd ff7d 	bl	20000b80 <delay_milli>
}
20002c86:	46c0      	nop			; (mov r8, r8)
20002c88:	46bd      	mov	sp, r7
20002c8a:	bd80      	pop	{r7, pc}
20002c8c:	20007324 	andcs	r7, r0, r4, lsr #6
20002c90:	200073ac 	andcs	r7, r0, ip, lsr #7
20002c94:	200073c0 	andcs	r7, r0, r0, asr #7
20002c98:	200073cc 	andcs	r7, r0, ip, asr #7
20002c9c:	200073d8 	ldrdcs	r7, [r0], -r8
20002ca0:	200073e4 	andcs	r7, r0, r4, ror #7

20002ca4 <init_app>:
static void init_app(void) {
20002ca4:	b580      	push	{r7, lr}
20002ca6:	af00      	add	r7, sp, #0
	GPIO_E.moder = 0x55555555;
20002ca8:	4b11      	ldr	r3, [pc, #68]	; (20002cf0 <init_app+0x4c>)
20002caa:	4a12      	ldr	r2, [pc, #72]	; (20002cf4 <init_app+0x50>)
20002cac:	601a      	str	r2, [r3, #0]
	GPIO_D.moder = 0x55005555;
20002cae:	4b12      	ldr	r3, [pc, #72]	; (20002cf8 <init_app+0x54>)
20002cb0:	4a12      	ldr	r2, [pc, #72]	; (20002cfc <init_app+0x58>)
20002cb2:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper &= ~0xFF00;
20002cb4:	4b10      	ldr	r3, [pc, #64]	; (20002cf8 <init_app+0x54>)
20002cb6:	4a10      	ldr	r2, [pc, #64]	; (20002cf8 <init_app+0x54>)
20002cb8:	6852      	ldr	r2, [r2, #4]
20002cba:	4911      	ldr	r1, [pc, #68]	; (20002d00 <init_app+0x5c>)
20002cbc:	400a      	ands	r2, r1
20002cbe:	605a      	str	r2, [r3, #4]
	GPIO_D.otyper |= 0x0F00;
20002cc0:	4b0d      	ldr	r3, [pc, #52]	; (20002cf8 <init_app+0x54>)
20002cc2:	4a0d      	ldr	r2, [pc, #52]	; (20002cf8 <init_app+0x54>)
20002cc4:	6852      	ldr	r2, [r2, #4]
20002cc6:	21f0      	movs	r1, #240	; 0xf0
20002cc8:	0109      	lsls	r1, r1, #4
20002cca:	430a      	orrs	r2, r1
20002ccc:	605a      	str	r2, [r3, #4]
	GPIO_D.pupdr &= ~0xFFFF0000;
20002cce:	4b0a      	ldr	r3, [pc, #40]	; (20002cf8 <init_app+0x54>)
20002cd0:	4a09      	ldr	r2, [pc, #36]	; (20002cf8 <init_app+0x54>)
20002cd2:	68d2      	ldr	r2, [r2, #12]
20002cd4:	0412      	lsls	r2, r2, #16
20002cd6:	0c12      	lsrs	r2, r2, #16
20002cd8:	60da      	str	r2, [r3, #12]
	GPIO_D.pupdr |= 0x00AA0000;
20002cda:	4b07      	ldr	r3, [pc, #28]	; (20002cf8 <init_app+0x54>)
20002cdc:	4a06      	ldr	r2, [pc, #24]	; (20002cf8 <init_app+0x54>)
20002cde:	68d2      	ldr	r2, [r2, #12]
20002ce0:	21aa      	movs	r1, #170	; 0xaa
20002ce2:	0409      	lsls	r1, r1, #16
20002ce4:	430a      	orrs	r2, r1
20002ce6:	60da      	str	r2, [r3, #12]
}
20002ce8:	46c0      	nop			; (mov r8, r8)
20002cea:	46bd      	mov	sp, r7
20002cec:	bd80      	pop	{r7, pc}
20002cee:	46c0      	nop			; (mov r8, r8)
20002cf0:	40021000 	andmi	r1, r2, r0
20002cf4:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20002cf8:	40020c00 	andmi	r0, r2, r0, lsl #24
20002cfc:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20002d00:	ffff00ff 			; <UNDEFINED> instruction: 0xffff00ff

20002d04 <__divsi3>:
20002d04:	4603      	mov	r3, r0
20002d06:	430b      	orrs	r3, r1
20002d08:	d47f      	bmi.n	20002e0a <__divsi3+0x106>
20002d0a:	2200      	movs	r2, #0
20002d0c:	0843      	lsrs	r3, r0, #1
20002d0e:	428b      	cmp	r3, r1
20002d10:	d374      	bcc.n	20002dfc <__divsi3+0xf8>
20002d12:	0903      	lsrs	r3, r0, #4
20002d14:	428b      	cmp	r3, r1
20002d16:	d35f      	bcc.n	20002dd8 <__divsi3+0xd4>
20002d18:	0a03      	lsrs	r3, r0, #8
20002d1a:	428b      	cmp	r3, r1
20002d1c:	d344      	bcc.n	20002da8 <__divsi3+0xa4>
20002d1e:	0b03      	lsrs	r3, r0, #12
20002d20:	428b      	cmp	r3, r1
20002d22:	d328      	bcc.n	20002d76 <__divsi3+0x72>
20002d24:	0c03      	lsrs	r3, r0, #16
20002d26:	428b      	cmp	r3, r1
20002d28:	d30d      	bcc.n	20002d46 <__divsi3+0x42>
20002d2a:	22ff      	movs	r2, #255	; 0xff
20002d2c:	0209      	lsls	r1, r1, #8
20002d2e:	ba12      	rev	r2, r2
20002d30:	0c03      	lsrs	r3, r0, #16
20002d32:	428b      	cmp	r3, r1
20002d34:	d302      	bcc.n	20002d3c <__divsi3+0x38>
20002d36:	1212      	asrs	r2, r2, #8
20002d38:	0209      	lsls	r1, r1, #8
20002d3a:	d065      	beq.n	20002e08 <__divsi3+0x104>
20002d3c:	0b03      	lsrs	r3, r0, #12
20002d3e:	428b      	cmp	r3, r1
20002d40:	d319      	bcc.n	20002d76 <__divsi3+0x72>
20002d42:	e000      	b.n	20002d46 <__divsi3+0x42>
20002d44:	0a09      	lsrs	r1, r1, #8
20002d46:	0bc3      	lsrs	r3, r0, #15
20002d48:	428b      	cmp	r3, r1
20002d4a:	d301      	bcc.n	20002d50 <__divsi3+0x4c>
20002d4c:	03cb      	lsls	r3, r1, #15
20002d4e:	1ac0      	subs	r0, r0, r3
20002d50:	4152      	adcs	r2, r2
20002d52:	0b83      	lsrs	r3, r0, #14
20002d54:	428b      	cmp	r3, r1
20002d56:	d301      	bcc.n	20002d5c <__divsi3+0x58>
20002d58:	038b      	lsls	r3, r1, #14
20002d5a:	1ac0      	subs	r0, r0, r3
20002d5c:	4152      	adcs	r2, r2
20002d5e:	0b43      	lsrs	r3, r0, #13
20002d60:	428b      	cmp	r3, r1
20002d62:	d301      	bcc.n	20002d68 <__divsi3+0x64>
20002d64:	034b      	lsls	r3, r1, #13
20002d66:	1ac0      	subs	r0, r0, r3
20002d68:	4152      	adcs	r2, r2
20002d6a:	0b03      	lsrs	r3, r0, #12
20002d6c:	428b      	cmp	r3, r1
20002d6e:	d301      	bcc.n	20002d74 <__divsi3+0x70>
20002d70:	030b      	lsls	r3, r1, #12
20002d72:	1ac0      	subs	r0, r0, r3
20002d74:	4152      	adcs	r2, r2
20002d76:	0ac3      	lsrs	r3, r0, #11
20002d78:	428b      	cmp	r3, r1
20002d7a:	d301      	bcc.n	20002d80 <__divsi3+0x7c>
20002d7c:	02cb      	lsls	r3, r1, #11
20002d7e:	1ac0      	subs	r0, r0, r3
20002d80:	4152      	adcs	r2, r2
20002d82:	0a83      	lsrs	r3, r0, #10
20002d84:	428b      	cmp	r3, r1
20002d86:	d301      	bcc.n	20002d8c <__divsi3+0x88>
20002d88:	028b      	lsls	r3, r1, #10
20002d8a:	1ac0      	subs	r0, r0, r3
20002d8c:	4152      	adcs	r2, r2
20002d8e:	0a43      	lsrs	r3, r0, #9
20002d90:	428b      	cmp	r3, r1
20002d92:	d301      	bcc.n	20002d98 <__divsi3+0x94>
20002d94:	024b      	lsls	r3, r1, #9
20002d96:	1ac0      	subs	r0, r0, r3
20002d98:	4152      	adcs	r2, r2
20002d9a:	0a03      	lsrs	r3, r0, #8
20002d9c:	428b      	cmp	r3, r1
20002d9e:	d301      	bcc.n	20002da4 <__divsi3+0xa0>
20002da0:	020b      	lsls	r3, r1, #8
20002da2:	1ac0      	subs	r0, r0, r3
20002da4:	4152      	adcs	r2, r2
20002da6:	d2cd      	bcs.n	20002d44 <__divsi3+0x40>
20002da8:	09c3      	lsrs	r3, r0, #7
20002daa:	428b      	cmp	r3, r1
20002dac:	d301      	bcc.n	20002db2 <__divsi3+0xae>
20002dae:	01cb      	lsls	r3, r1, #7
20002db0:	1ac0      	subs	r0, r0, r3
20002db2:	4152      	adcs	r2, r2
20002db4:	0983      	lsrs	r3, r0, #6
20002db6:	428b      	cmp	r3, r1
20002db8:	d301      	bcc.n	20002dbe <__divsi3+0xba>
20002dba:	018b      	lsls	r3, r1, #6
20002dbc:	1ac0      	subs	r0, r0, r3
20002dbe:	4152      	adcs	r2, r2
20002dc0:	0943      	lsrs	r3, r0, #5
20002dc2:	428b      	cmp	r3, r1
20002dc4:	d301      	bcc.n	20002dca <__divsi3+0xc6>
20002dc6:	014b      	lsls	r3, r1, #5
20002dc8:	1ac0      	subs	r0, r0, r3
20002dca:	4152      	adcs	r2, r2
20002dcc:	0903      	lsrs	r3, r0, #4
20002dce:	428b      	cmp	r3, r1
20002dd0:	d301      	bcc.n	20002dd6 <__divsi3+0xd2>
20002dd2:	010b      	lsls	r3, r1, #4
20002dd4:	1ac0      	subs	r0, r0, r3
20002dd6:	4152      	adcs	r2, r2
20002dd8:	08c3      	lsrs	r3, r0, #3
20002dda:	428b      	cmp	r3, r1
20002ddc:	d301      	bcc.n	20002de2 <__divsi3+0xde>
20002dde:	00cb      	lsls	r3, r1, #3
20002de0:	1ac0      	subs	r0, r0, r3
20002de2:	4152      	adcs	r2, r2
20002de4:	0883      	lsrs	r3, r0, #2
20002de6:	428b      	cmp	r3, r1
20002de8:	d301      	bcc.n	20002dee <__divsi3+0xea>
20002dea:	008b      	lsls	r3, r1, #2
20002dec:	1ac0      	subs	r0, r0, r3
20002dee:	4152      	adcs	r2, r2
20002df0:	0843      	lsrs	r3, r0, #1
20002df2:	428b      	cmp	r3, r1
20002df4:	d301      	bcc.n	20002dfa <__divsi3+0xf6>
20002df6:	004b      	lsls	r3, r1, #1
20002df8:	1ac0      	subs	r0, r0, r3
20002dfa:	4152      	adcs	r2, r2
20002dfc:	1a41      	subs	r1, r0, r1
20002dfe:	d200      	bcs.n	20002e02 <__divsi3+0xfe>
20002e00:	4601      	mov	r1, r0
20002e02:	4152      	adcs	r2, r2
20002e04:	4610      	mov	r0, r2
20002e06:	4770      	bx	lr
20002e08:	e05d      	b.n	20002ec6 <__divsi3+0x1c2>
20002e0a:	0fca      	lsrs	r2, r1, #31
20002e0c:	d000      	beq.n	20002e10 <__divsi3+0x10c>
20002e0e:	4249      	negs	r1, r1
20002e10:	1003      	asrs	r3, r0, #32
20002e12:	d300      	bcc.n	20002e16 <__divsi3+0x112>
20002e14:	4240      	negs	r0, r0
20002e16:	4053      	eors	r3, r2
20002e18:	2200      	movs	r2, #0
20002e1a:	469c      	mov	ip, r3
20002e1c:	0903      	lsrs	r3, r0, #4
20002e1e:	428b      	cmp	r3, r1
20002e20:	d32d      	bcc.n	20002e7e <__divsi3+0x17a>
20002e22:	0a03      	lsrs	r3, r0, #8
20002e24:	428b      	cmp	r3, r1
20002e26:	d312      	bcc.n	20002e4e <__divsi3+0x14a>
20002e28:	22fc      	movs	r2, #252	; 0xfc
20002e2a:	0189      	lsls	r1, r1, #6
20002e2c:	ba12      	rev	r2, r2
20002e2e:	0a03      	lsrs	r3, r0, #8
20002e30:	428b      	cmp	r3, r1
20002e32:	d30c      	bcc.n	20002e4e <__divsi3+0x14a>
20002e34:	0189      	lsls	r1, r1, #6
20002e36:	1192      	asrs	r2, r2, #6
20002e38:	428b      	cmp	r3, r1
20002e3a:	d308      	bcc.n	20002e4e <__divsi3+0x14a>
20002e3c:	0189      	lsls	r1, r1, #6
20002e3e:	1192      	asrs	r2, r2, #6
20002e40:	428b      	cmp	r3, r1
20002e42:	d304      	bcc.n	20002e4e <__divsi3+0x14a>
20002e44:	0189      	lsls	r1, r1, #6
20002e46:	d03a      	beq.n	20002ebe <__divsi3+0x1ba>
20002e48:	1192      	asrs	r2, r2, #6
20002e4a:	e000      	b.n	20002e4e <__divsi3+0x14a>
20002e4c:	0989      	lsrs	r1, r1, #6
20002e4e:	09c3      	lsrs	r3, r0, #7
20002e50:	428b      	cmp	r3, r1
20002e52:	d301      	bcc.n	20002e58 <__divsi3+0x154>
20002e54:	01cb      	lsls	r3, r1, #7
20002e56:	1ac0      	subs	r0, r0, r3
20002e58:	4152      	adcs	r2, r2
20002e5a:	0983      	lsrs	r3, r0, #6
20002e5c:	428b      	cmp	r3, r1
20002e5e:	d301      	bcc.n	20002e64 <__divsi3+0x160>
20002e60:	018b      	lsls	r3, r1, #6
20002e62:	1ac0      	subs	r0, r0, r3
20002e64:	4152      	adcs	r2, r2
20002e66:	0943      	lsrs	r3, r0, #5
20002e68:	428b      	cmp	r3, r1
20002e6a:	d301      	bcc.n	20002e70 <__divsi3+0x16c>
20002e6c:	014b      	lsls	r3, r1, #5
20002e6e:	1ac0      	subs	r0, r0, r3
20002e70:	4152      	adcs	r2, r2
20002e72:	0903      	lsrs	r3, r0, #4
20002e74:	428b      	cmp	r3, r1
20002e76:	d301      	bcc.n	20002e7c <__divsi3+0x178>
20002e78:	010b      	lsls	r3, r1, #4
20002e7a:	1ac0      	subs	r0, r0, r3
20002e7c:	4152      	adcs	r2, r2
20002e7e:	08c3      	lsrs	r3, r0, #3
20002e80:	428b      	cmp	r3, r1
20002e82:	d301      	bcc.n	20002e88 <__divsi3+0x184>
20002e84:	00cb      	lsls	r3, r1, #3
20002e86:	1ac0      	subs	r0, r0, r3
20002e88:	4152      	adcs	r2, r2
20002e8a:	0883      	lsrs	r3, r0, #2
20002e8c:	428b      	cmp	r3, r1
20002e8e:	d301      	bcc.n	20002e94 <__divsi3+0x190>
20002e90:	008b      	lsls	r3, r1, #2
20002e92:	1ac0      	subs	r0, r0, r3
20002e94:	4152      	adcs	r2, r2
20002e96:	d2d9      	bcs.n	20002e4c <__divsi3+0x148>
20002e98:	0843      	lsrs	r3, r0, #1
20002e9a:	428b      	cmp	r3, r1
20002e9c:	d301      	bcc.n	20002ea2 <__divsi3+0x19e>
20002e9e:	004b      	lsls	r3, r1, #1
20002ea0:	1ac0      	subs	r0, r0, r3
20002ea2:	4152      	adcs	r2, r2
20002ea4:	1a41      	subs	r1, r0, r1
20002ea6:	d200      	bcs.n	20002eaa <__divsi3+0x1a6>
20002ea8:	4601      	mov	r1, r0
20002eaa:	4663      	mov	r3, ip
20002eac:	4152      	adcs	r2, r2
20002eae:	105b      	asrs	r3, r3, #1
20002eb0:	4610      	mov	r0, r2
20002eb2:	d301      	bcc.n	20002eb8 <__divsi3+0x1b4>
20002eb4:	4240      	negs	r0, r0
20002eb6:	2b00      	cmp	r3, #0
20002eb8:	d500      	bpl.n	20002ebc <__divsi3+0x1b8>
20002eba:	4249      	negs	r1, r1
20002ebc:	4770      	bx	lr
20002ebe:	4663      	mov	r3, ip
20002ec0:	105b      	asrs	r3, r3, #1
20002ec2:	d300      	bcc.n	20002ec6 <__divsi3+0x1c2>
20002ec4:	4240      	negs	r0, r0
20002ec6:	b501      	push	{r0, lr}
20002ec8:	2000      	movs	r0, #0
20002eca:	f000 f805 	bl	20002ed8 <__aeabi_idiv0>
20002ece:	bd02      	pop	{r1, pc}

20002ed0 <__aeabi_idivmod>:
20002ed0:	2900      	cmp	r1, #0
20002ed2:	d0f8      	beq.n	20002ec6 <__divsi3+0x1c2>
20002ed4:	e716      	b.n	20002d04 <__divsi3>
20002ed6:	4770      	bx	lr

20002ed8 <__aeabi_idiv0>:
20002ed8:	4770      	bx	lr
20002eda:	46c0      	nop			; (mov r8, r8)

20002edc <__aeabi_dadd>:
20002edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
20002ede:	4645      	mov	r5, r8
20002ee0:	46de      	mov	lr, fp
20002ee2:	4657      	mov	r7, sl
20002ee4:	464e      	mov	r6, r9
20002ee6:	030c      	lsls	r4, r1, #12
20002ee8:	b5e0      	push	{r5, r6, r7, lr}
20002eea:	004e      	lsls	r6, r1, #1
20002eec:	0fc9      	lsrs	r1, r1, #31
20002eee:	4688      	mov	r8, r1
20002ef0:	000d      	movs	r5, r1
20002ef2:	0a61      	lsrs	r1, r4, #9
20002ef4:	0f44      	lsrs	r4, r0, #29
20002ef6:	430c      	orrs	r4, r1
20002ef8:	00c7      	lsls	r7, r0, #3
20002efa:	0319      	lsls	r1, r3, #12
20002efc:	0058      	lsls	r0, r3, #1
20002efe:	0fdb      	lsrs	r3, r3, #31
20002f00:	469b      	mov	fp, r3
20002f02:	0a4b      	lsrs	r3, r1, #9
20002f04:	0f51      	lsrs	r1, r2, #29
20002f06:	430b      	orrs	r3, r1
20002f08:	0d76      	lsrs	r6, r6, #21
20002f0a:	0d40      	lsrs	r0, r0, #21
20002f0c:	0019      	movs	r1, r3
20002f0e:	00d2      	lsls	r2, r2, #3
20002f10:	45d8      	cmp	r8, fp
20002f12:	d100      	bne.n	20002f16 <__aeabi_dadd+0x3a>
20002f14:	e0ae      	b.n	20003074 <__aeabi_dadd+0x198>
20002f16:	1a35      	subs	r5, r6, r0
20002f18:	2d00      	cmp	r5, #0
20002f1a:	dc00      	bgt.n	20002f1e <__aeabi_dadd+0x42>
20002f1c:	e0f6      	b.n	2000310c <__aeabi_dadd+0x230>
20002f1e:	2800      	cmp	r0, #0
20002f20:	d10f      	bne.n	20002f42 <__aeabi_dadd+0x66>
20002f22:	4313      	orrs	r3, r2
20002f24:	d100      	bne.n	20002f28 <__aeabi_dadd+0x4c>
20002f26:	e0db      	b.n	200030e0 <__aeabi_dadd+0x204>
20002f28:	1e6b      	subs	r3, r5, #1
20002f2a:	2b00      	cmp	r3, #0
20002f2c:	d000      	beq.n	20002f30 <__aeabi_dadd+0x54>
20002f2e:	e137      	b.n	200031a0 <__aeabi_dadd+0x2c4>
20002f30:	1aba      	subs	r2, r7, r2
20002f32:	4297      	cmp	r7, r2
20002f34:	41bf      	sbcs	r7, r7
20002f36:	1a64      	subs	r4, r4, r1
20002f38:	427f      	negs	r7, r7
20002f3a:	1be4      	subs	r4, r4, r7
20002f3c:	2601      	movs	r6, #1
20002f3e:	0017      	movs	r7, r2
20002f40:	e024      	b.n	20002f8c <__aeabi_dadd+0xb0>
20002f42:	4bc6      	ldr	r3, [pc, #792]	; (2000325c <__aeabi_dadd+0x380>)
20002f44:	429e      	cmp	r6, r3
20002f46:	d04d      	beq.n	20002fe4 <__aeabi_dadd+0x108>
20002f48:	2380      	movs	r3, #128	; 0x80
20002f4a:	041b      	lsls	r3, r3, #16
20002f4c:	4319      	orrs	r1, r3
20002f4e:	2d38      	cmp	r5, #56	; 0x38
20002f50:	dd00      	ble.n	20002f54 <__aeabi_dadd+0x78>
20002f52:	e107      	b.n	20003164 <__aeabi_dadd+0x288>
20002f54:	2d1f      	cmp	r5, #31
20002f56:	dd00      	ble.n	20002f5a <__aeabi_dadd+0x7e>
20002f58:	e138      	b.n	200031cc <__aeabi_dadd+0x2f0>
20002f5a:	2020      	movs	r0, #32
20002f5c:	1b43      	subs	r3, r0, r5
20002f5e:	469a      	mov	sl, r3
20002f60:	000b      	movs	r3, r1
20002f62:	4650      	mov	r0, sl
20002f64:	4083      	lsls	r3, r0
20002f66:	4699      	mov	r9, r3
20002f68:	0013      	movs	r3, r2
20002f6a:	4648      	mov	r0, r9
20002f6c:	40eb      	lsrs	r3, r5
20002f6e:	4318      	orrs	r0, r3
20002f70:	0003      	movs	r3, r0
20002f72:	4650      	mov	r0, sl
20002f74:	4082      	lsls	r2, r0
20002f76:	1e50      	subs	r0, r2, #1
20002f78:	4182      	sbcs	r2, r0
20002f7a:	40e9      	lsrs	r1, r5
20002f7c:	431a      	orrs	r2, r3
20002f7e:	1aba      	subs	r2, r7, r2
20002f80:	1a61      	subs	r1, r4, r1
20002f82:	4297      	cmp	r7, r2
20002f84:	41a4      	sbcs	r4, r4
20002f86:	0017      	movs	r7, r2
20002f88:	4264      	negs	r4, r4
20002f8a:	1b0c      	subs	r4, r1, r4
20002f8c:	0223      	lsls	r3, r4, #8
20002f8e:	d562      	bpl.n	20003056 <__aeabi_dadd+0x17a>
20002f90:	0264      	lsls	r4, r4, #9
20002f92:	0a65      	lsrs	r5, r4, #9
20002f94:	2d00      	cmp	r5, #0
20002f96:	d100      	bne.n	20002f9a <__aeabi_dadd+0xbe>
20002f98:	e0df      	b.n	2000315a <__aeabi_dadd+0x27e>
20002f9a:	0028      	movs	r0, r5
20002f9c:	f000 fb24 	bl	200035e8 <__clzsi2>
20002fa0:	0003      	movs	r3, r0
20002fa2:	3b08      	subs	r3, #8
20002fa4:	2b1f      	cmp	r3, #31
20002fa6:	dd00      	ble.n	20002faa <__aeabi_dadd+0xce>
20002fa8:	e0d2      	b.n	20003150 <__aeabi_dadd+0x274>
20002faa:	2220      	movs	r2, #32
20002fac:	003c      	movs	r4, r7
20002fae:	1ad2      	subs	r2, r2, r3
20002fb0:	409d      	lsls	r5, r3
20002fb2:	40d4      	lsrs	r4, r2
20002fb4:	409f      	lsls	r7, r3
20002fb6:	4325      	orrs	r5, r4
20002fb8:	429e      	cmp	r6, r3
20002fba:	dd00      	ble.n	20002fbe <__aeabi_dadd+0xe2>
20002fbc:	e0c4      	b.n	20003148 <__aeabi_dadd+0x26c>
20002fbe:	1b9e      	subs	r6, r3, r6
20002fc0:	1c73      	adds	r3, r6, #1
20002fc2:	2b1f      	cmp	r3, #31
20002fc4:	dd00      	ble.n	20002fc8 <__aeabi_dadd+0xec>
20002fc6:	e0f1      	b.n	200031ac <__aeabi_dadd+0x2d0>
20002fc8:	2220      	movs	r2, #32
20002fca:	0038      	movs	r0, r7
20002fcc:	0029      	movs	r1, r5
20002fce:	1ad2      	subs	r2, r2, r3
20002fd0:	40d8      	lsrs	r0, r3
20002fd2:	4091      	lsls	r1, r2
20002fd4:	4097      	lsls	r7, r2
20002fd6:	002c      	movs	r4, r5
20002fd8:	4301      	orrs	r1, r0
20002fda:	1e78      	subs	r0, r7, #1
20002fdc:	4187      	sbcs	r7, r0
20002fde:	40dc      	lsrs	r4, r3
20002fe0:	2600      	movs	r6, #0
20002fe2:	430f      	orrs	r7, r1
20002fe4:	077b      	lsls	r3, r7, #29
20002fe6:	d009      	beq.n	20002ffc <__aeabi_dadd+0x120>
20002fe8:	230f      	movs	r3, #15
20002fea:	403b      	ands	r3, r7
20002fec:	2b04      	cmp	r3, #4
20002fee:	d005      	beq.n	20002ffc <__aeabi_dadd+0x120>
20002ff0:	1d3b      	adds	r3, r7, #4
20002ff2:	42bb      	cmp	r3, r7
20002ff4:	41bf      	sbcs	r7, r7
20002ff6:	427f      	negs	r7, r7
20002ff8:	19e4      	adds	r4, r4, r7
20002ffa:	001f      	movs	r7, r3
20002ffc:	0223      	lsls	r3, r4, #8
20002ffe:	d52c      	bpl.n	2000305a <__aeabi_dadd+0x17e>
20003000:	4b96      	ldr	r3, [pc, #600]	; (2000325c <__aeabi_dadd+0x380>)
20003002:	3601      	adds	r6, #1
20003004:	429e      	cmp	r6, r3
20003006:	d100      	bne.n	2000300a <__aeabi_dadd+0x12e>
20003008:	e09a      	b.n	20003140 <__aeabi_dadd+0x264>
2000300a:	4645      	mov	r5, r8
2000300c:	4b94      	ldr	r3, [pc, #592]	; (20003260 <__aeabi_dadd+0x384>)
2000300e:	08ff      	lsrs	r7, r7, #3
20003010:	401c      	ands	r4, r3
20003012:	0760      	lsls	r0, r4, #29
20003014:	0576      	lsls	r6, r6, #21
20003016:	0264      	lsls	r4, r4, #9
20003018:	4307      	orrs	r7, r0
2000301a:	0b24      	lsrs	r4, r4, #12
2000301c:	0d76      	lsrs	r6, r6, #21
2000301e:	2100      	movs	r1, #0
20003020:	0324      	lsls	r4, r4, #12
20003022:	0b23      	lsrs	r3, r4, #12
20003024:	0d0c      	lsrs	r4, r1, #20
20003026:	4a8f      	ldr	r2, [pc, #572]	; (20003264 <__aeabi_dadd+0x388>)
20003028:	0524      	lsls	r4, r4, #20
2000302a:	431c      	orrs	r4, r3
2000302c:	4014      	ands	r4, r2
2000302e:	0533      	lsls	r3, r6, #20
20003030:	4323      	orrs	r3, r4
20003032:	005b      	lsls	r3, r3, #1
20003034:	07ed      	lsls	r5, r5, #31
20003036:	085b      	lsrs	r3, r3, #1
20003038:	432b      	orrs	r3, r5
2000303a:	0038      	movs	r0, r7
2000303c:	0019      	movs	r1, r3
2000303e:	bc3c      	pop	{r2, r3, r4, r5}
20003040:	4690      	mov	r8, r2
20003042:	4699      	mov	r9, r3
20003044:	46a2      	mov	sl, r4
20003046:	46ab      	mov	fp, r5
20003048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2000304a:	4664      	mov	r4, ip
2000304c:	4304      	orrs	r4, r0
2000304e:	d100      	bne.n	20003052 <__aeabi_dadd+0x176>
20003050:	e211      	b.n	20003476 <__aeabi_dadd+0x59a>
20003052:	0004      	movs	r4, r0
20003054:	4667      	mov	r7, ip
20003056:	077b      	lsls	r3, r7, #29
20003058:	d1c6      	bne.n	20002fe8 <__aeabi_dadd+0x10c>
2000305a:	4645      	mov	r5, r8
2000305c:	0760      	lsls	r0, r4, #29
2000305e:	08ff      	lsrs	r7, r7, #3
20003060:	4307      	orrs	r7, r0
20003062:	08e4      	lsrs	r4, r4, #3
20003064:	4b7d      	ldr	r3, [pc, #500]	; (2000325c <__aeabi_dadd+0x380>)
20003066:	429e      	cmp	r6, r3
20003068:	d030      	beq.n	200030cc <__aeabi_dadd+0x1f0>
2000306a:	0324      	lsls	r4, r4, #12
2000306c:	0576      	lsls	r6, r6, #21
2000306e:	0b24      	lsrs	r4, r4, #12
20003070:	0d76      	lsrs	r6, r6, #21
20003072:	e7d4      	b.n	2000301e <__aeabi_dadd+0x142>
20003074:	1a33      	subs	r3, r6, r0
20003076:	469a      	mov	sl, r3
20003078:	2b00      	cmp	r3, #0
2000307a:	dd78      	ble.n	2000316e <__aeabi_dadd+0x292>
2000307c:	2800      	cmp	r0, #0
2000307e:	d031      	beq.n	200030e4 <__aeabi_dadd+0x208>
20003080:	4876      	ldr	r0, [pc, #472]	; (2000325c <__aeabi_dadd+0x380>)
20003082:	4286      	cmp	r6, r0
20003084:	d0ae      	beq.n	20002fe4 <__aeabi_dadd+0x108>
20003086:	2080      	movs	r0, #128	; 0x80
20003088:	0400      	lsls	r0, r0, #16
2000308a:	4301      	orrs	r1, r0
2000308c:	4653      	mov	r3, sl
2000308e:	2b38      	cmp	r3, #56	; 0x38
20003090:	dc00      	bgt.n	20003094 <__aeabi_dadd+0x1b8>
20003092:	e0e9      	b.n	20003268 <__aeabi_dadd+0x38c>
20003094:	430a      	orrs	r2, r1
20003096:	1e51      	subs	r1, r2, #1
20003098:	418a      	sbcs	r2, r1
2000309a:	2100      	movs	r1, #0
2000309c:	19d2      	adds	r2, r2, r7
2000309e:	42ba      	cmp	r2, r7
200030a0:	41bf      	sbcs	r7, r7
200030a2:	1909      	adds	r1, r1, r4
200030a4:	427c      	negs	r4, r7
200030a6:	0017      	movs	r7, r2
200030a8:	190c      	adds	r4, r1, r4
200030aa:	0223      	lsls	r3, r4, #8
200030ac:	d5d3      	bpl.n	20003056 <__aeabi_dadd+0x17a>
200030ae:	4b6b      	ldr	r3, [pc, #428]	; (2000325c <__aeabi_dadd+0x380>)
200030b0:	3601      	adds	r6, #1
200030b2:	429e      	cmp	r6, r3
200030b4:	d100      	bne.n	200030b8 <__aeabi_dadd+0x1dc>
200030b6:	e13a      	b.n	2000332e <__aeabi_dadd+0x452>
200030b8:	2001      	movs	r0, #1
200030ba:	4b69      	ldr	r3, [pc, #420]	; (20003260 <__aeabi_dadd+0x384>)
200030bc:	401c      	ands	r4, r3
200030be:	087b      	lsrs	r3, r7, #1
200030c0:	4007      	ands	r7, r0
200030c2:	431f      	orrs	r7, r3
200030c4:	07e0      	lsls	r0, r4, #31
200030c6:	4307      	orrs	r7, r0
200030c8:	0864      	lsrs	r4, r4, #1
200030ca:	e78b      	b.n	20002fe4 <__aeabi_dadd+0x108>
200030cc:	0023      	movs	r3, r4
200030ce:	433b      	orrs	r3, r7
200030d0:	d100      	bne.n	200030d4 <__aeabi_dadd+0x1f8>
200030d2:	e1cb      	b.n	2000346c <__aeabi_dadd+0x590>
200030d4:	2280      	movs	r2, #128	; 0x80
200030d6:	0312      	lsls	r2, r2, #12
200030d8:	4314      	orrs	r4, r2
200030da:	0324      	lsls	r4, r4, #12
200030dc:	0b24      	lsrs	r4, r4, #12
200030de:	e79e      	b.n	2000301e <__aeabi_dadd+0x142>
200030e0:	002e      	movs	r6, r5
200030e2:	e77f      	b.n	20002fe4 <__aeabi_dadd+0x108>
200030e4:	0008      	movs	r0, r1
200030e6:	4310      	orrs	r0, r2
200030e8:	d100      	bne.n	200030ec <__aeabi_dadd+0x210>
200030ea:	e0b4      	b.n	20003256 <__aeabi_dadd+0x37a>
200030ec:	1e58      	subs	r0, r3, #1
200030ee:	2800      	cmp	r0, #0
200030f0:	d000      	beq.n	200030f4 <__aeabi_dadd+0x218>
200030f2:	e0de      	b.n	200032b2 <__aeabi_dadd+0x3d6>
200030f4:	18ba      	adds	r2, r7, r2
200030f6:	42ba      	cmp	r2, r7
200030f8:	419b      	sbcs	r3, r3
200030fa:	1864      	adds	r4, r4, r1
200030fc:	425b      	negs	r3, r3
200030fe:	18e4      	adds	r4, r4, r3
20003100:	0017      	movs	r7, r2
20003102:	2601      	movs	r6, #1
20003104:	0223      	lsls	r3, r4, #8
20003106:	d5a6      	bpl.n	20003056 <__aeabi_dadd+0x17a>
20003108:	2602      	movs	r6, #2
2000310a:	e7d5      	b.n	200030b8 <__aeabi_dadd+0x1dc>
2000310c:	2d00      	cmp	r5, #0
2000310e:	d16e      	bne.n	200031ee <__aeabi_dadd+0x312>
20003110:	1c70      	adds	r0, r6, #1
20003112:	0540      	lsls	r0, r0, #21
20003114:	0d40      	lsrs	r0, r0, #21
20003116:	2801      	cmp	r0, #1
20003118:	dc00      	bgt.n	2000311c <__aeabi_dadd+0x240>
2000311a:	e0f9      	b.n	20003310 <__aeabi_dadd+0x434>
2000311c:	1ab8      	subs	r0, r7, r2
2000311e:	4684      	mov	ip, r0
20003120:	4287      	cmp	r7, r0
20003122:	4180      	sbcs	r0, r0
20003124:	1ae5      	subs	r5, r4, r3
20003126:	4240      	negs	r0, r0
20003128:	1a2d      	subs	r5, r5, r0
2000312a:	0228      	lsls	r0, r5, #8
2000312c:	d400      	bmi.n	20003130 <__aeabi_dadd+0x254>
2000312e:	e089      	b.n	20003244 <__aeabi_dadd+0x368>
20003130:	1bd7      	subs	r7, r2, r7
20003132:	42ba      	cmp	r2, r7
20003134:	4192      	sbcs	r2, r2
20003136:	1b1c      	subs	r4, r3, r4
20003138:	4252      	negs	r2, r2
2000313a:	1aa5      	subs	r5, r4, r2
2000313c:	46d8      	mov	r8, fp
2000313e:	e729      	b.n	20002f94 <__aeabi_dadd+0xb8>
20003140:	4645      	mov	r5, r8
20003142:	2400      	movs	r4, #0
20003144:	2700      	movs	r7, #0
20003146:	e76a      	b.n	2000301e <__aeabi_dadd+0x142>
20003148:	4c45      	ldr	r4, [pc, #276]	; (20003260 <__aeabi_dadd+0x384>)
2000314a:	1af6      	subs	r6, r6, r3
2000314c:	402c      	ands	r4, r5
2000314e:	e749      	b.n	20002fe4 <__aeabi_dadd+0x108>
20003150:	003d      	movs	r5, r7
20003152:	3828      	subs	r0, #40	; 0x28
20003154:	4085      	lsls	r5, r0
20003156:	2700      	movs	r7, #0
20003158:	e72e      	b.n	20002fb8 <__aeabi_dadd+0xdc>
2000315a:	0038      	movs	r0, r7
2000315c:	f000 fa44 	bl	200035e8 <__clzsi2>
20003160:	3020      	adds	r0, #32
20003162:	e71d      	b.n	20002fa0 <__aeabi_dadd+0xc4>
20003164:	430a      	orrs	r2, r1
20003166:	1e51      	subs	r1, r2, #1
20003168:	418a      	sbcs	r2, r1
2000316a:	2100      	movs	r1, #0
2000316c:	e707      	b.n	20002f7e <__aeabi_dadd+0xa2>
2000316e:	2b00      	cmp	r3, #0
20003170:	d000      	beq.n	20003174 <__aeabi_dadd+0x298>
20003172:	e0f3      	b.n	2000335c <__aeabi_dadd+0x480>
20003174:	1c70      	adds	r0, r6, #1
20003176:	0543      	lsls	r3, r0, #21
20003178:	0d5b      	lsrs	r3, r3, #21
2000317a:	2b01      	cmp	r3, #1
2000317c:	dc00      	bgt.n	20003180 <__aeabi_dadd+0x2a4>
2000317e:	e0ad      	b.n	200032dc <__aeabi_dadd+0x400>
20003180:	4b36      	ldr	r3, [pc, #216]	; (2000325c <__aeabi_dadd+0x380>)
20003182:	4298      	cmp	r0, r3
20003184:	d100      	bne.n	20003188 <__aeabi_dadd+0x2ac>
20003186:	e0d1      	b.n	2000332c <__aeabi_dadd+0x450>
20003188:	18ba      	adds	r2, r7, r2
2000318a:	42ba      	cmp	r2, r7
2000318c:	41bf      	sbcs	r7, r7
2000318e:	1864      	adds	r4, r4, r1
20003190:	427f      	negs	r7, r7
20003192:	19e4      	adds	r4, r4, r7
20003194:	07e7      	lsls	r7, r4, #31
20003196:	0852      	lsrs	r2, r2, #1
20003198:	4317      	orrs	r7, r2
2000319a:	0864      	lsrs	r4, r4, #1
2000319c:	0006      	movs	r6, r0
2000319e:	e721      	b.n	20002fe4 <__aeabi_dadd+0x108>
200031a0:	482e      	ldr	r0, [pc, #184]	; (2000325c <__aeabi_dadd+0x380>)
200031a2:	4285      	cmp	r5, r0
200031a4:	d100      	bne.n	200031a8 <__aeabi_dadd+0x2cc>
200031a6:	e093      	b.n	200032d0 <__aeabi_dadd+0x3f4>
200031a8:	001d      	movs	r5, r3
200031aa:	e6d0      	b.n	20002f4e <__aeabi_dadd+0x72>
200031ac:	0029      	movs	r1, r5
200031ae:	3e1f      	subs	r6, #31
200031b0:	40f1      	lsrs	r1, r6
200031b2:	2b20      	cmp	r3, #32
200031b4:	d100      	bne.n	200031b8 <__aeabi_dadd+0x2dc>
200031b6:	e08d      	b.n	200032d4 <__aeabi_dadd+0x3f8>
200031b8:	2240      	movs	r2, #64	; 0x40
200031ba:	1ad3      	subs	r3, r2, r3
200031bc:	409d      	lsls	r5, r3
200031be:	432f      	orrs	r7, r5
200031c0:	1e7d      	subs	r5, r7, #1
200031c2:	41af      	sbcs	r7, r5
200031c4:	2400      	movs	r4, #0
200031c6:	430f      	orrs	r7, r1
200031c8:	2600      	movs	r6, #0
200031ca:	e744      	b.n	20003056 <__aeabi_dadd+0x17a>
200031cc:	002b      	movs	r3, r5
200031ce:	0008      	movs	r0, r1
200031d0:	3b20      	subs	r3, #32
200031d2:	40d8      	lsrs	r0, r3
200031d4:	0003      	movs	r3, r0
200031d6:	2d20      	cmp	r5, #32
200031d8:	d100      	bne.n	200031dc <__aeabi_dadd+0x300>
200031da:	e07d      	b.n	200032d8 <__aeabi_dadd+0x3fc>
200031dc:	2040      	movs	r0, #64	; 0x40
200031de:	1b45      	subs	r5, r0, r5
200031e0:	40a9      	lsls	r1, r5
200031e2:	430a      	orrs	r2, r1
200031e4:	1e51      	subs	r1, r2, #1
200031e6:	418a      	sbcs	r2, r1
200031e8:	2100      	movs	r1, #0
200031ea:	431a      	orrs	r2, r3
200031ec:	e6c7      	b.n	20002f7e <__aeabi_dadd+0xa2>
200031ee:	2e00      	cmp	r6, #0
200031f0:	d050      	beq.n	20003294 <__aeabi_dadd+0x3b8>
200031f2:	4e1a      	ldr	r6, [pc, #104]	; (2000325c <__aeabi_dadd+0x380>)
200031f4:	42b0      	cmp	r0, r6
200031f6:	d057      	beq.n	200032a8 <__aeabi_dadd+0x3cc>
200031f8:	2680      	movs	r6, #128	; 0x80
200031fa:	426b      	negs	r3, r5
200031fc:	4699      	mov	r9, r3
200031fe:	0436      	lsls	r6, r6, #16
20003200:	4334      	orrs	r4, r6
20003202:	464b      	mov	r3, r9
20003204:	2b38      	cmp	r3, #56	; 0x38
20003206:	dd00      	ble.n	2000320a <__aeabi_dadd+0x32e>
20003208:	e0d6      	b.n	200033b8 <__aeabi_dadd+0x4dc>
2000320a:	2b1f      	cmp	r3, #31
2000320c:	dd00      	ble.n	20003210 <__aeabi_dadd+0x334>
2000320e:	e135      	b.n	2000347c <__aeabi_dadd+0x5a0>
20003210:	2620      	movs	r6, #32
20003212:	1af5      	subs	r5, r6, r3
20003214:	0026      	movs	r6, r4
20003216:	40ae      	lsls	r6, r5
20003218:	46b2      	mov	sl, r6
2000321a:	003e      	movs	r6, r7
2000321c:	40de      	lsrs	r6, r3
2000321e:	46ac      	mov	ip, r5
20003220:	0035      	movs	r5, r6
20003222:	4656      	mov	r6, sl
20003224:	432e      	orrs	r6, r5
20003226:	4665      	mov	r5, ip
20003228:	40af      	lsls	r7, r5
2000322a:	1e7d      	subs	r5, r7, #1
2000322c:	41af      	sbcs	r7, r5
2000322e:	40dc      	lsrs	r4, r3
20003230:	4337      	orrs	r7, r6
20003232:	1bd7      	subs	r7, r2, r7
20003234:	42ba      	cmp	r2, r7
20003236:	4192      	sbcs	r2, r2
20003238:	1b0c      	subs	r4, r1, r4
2000323a:	4252      	negs	r2, r2
2000323c:	1aa4      	subs	r4, r4, r2
2000323e:	0006      	movs	r6, r0
20003240:	46d8      	mov	r8, fp
20003242:	e6a3      	b.n	20002f8c <__aeabi_dadd+0xb0>
20003244:	4664      	mov	r4, ip
20003246:	4667      	mov	r7, ip
20003248:	432c      	orrs	r4, r5
2000324a:	d000      	beq.n	2000324e <__aeabi_dadd+0x372>
2000324c:	e6a2      	b.n	20002f94 <__aeabi_dadd+0xb8>
2000324e:	2500      	movs	r5, #0
20003250:	2600      	movs	r6, #0
20003252:	2700      	movs	r7, #0
20003254:	e706      	b.n	20003064 <__aeabi_dadd+0x188>
20003256:	001e      	movs	r6, r3
20003258:	e6c4      	b.n	20002fe4 <__aeabi_dadd+0x108>
2000325a:	46c0      	nop			; (mov r8, r8)
2000325c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20003260:	ff7fffff 			; <UNDEFINED> instruction: 0xff7fffff
20003264:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>
20003268:	2b1f      	cmp	r3, #31
2000326a:	dc63      	bgt.n	20003334 <__aeabi_dadd+0x458>
2000326c:	2020      	movs	r0, #32
2000326e:	1ac3      	subs	r3, r0, r3
20003270:	0008      	movs	r0, r1
20003272:	4098      	lsls	r0, r3
20003274:	469c      	mov	ip, r3
20003276:	4683      	mov	fp, r0
20003278:	4653      	mov	r3, sl
2000327a:	0010      	movs	r0, r2
2000327c:	40d8      	lsrs	r0, r3
2000327e:	0003      	movs	r3, r0
20003280:	4658      	mov	r0, fp
20003282:	4318      	orrs	r0, r3
20003284:	4663      	mov	r3, ip
20003286:	409a      	lsls	r2, r3
20003288:	1e53      	subs	r3, r2, #1
2000328a:	419a      	sbcs	r2, r3
2000328c:	4653      	mov	r3, sl
2000328e:	4302      	orrs	r2, r0
20003290:	40d9      	lsrs	r1, r3
20003292:	e703      	b.n	2000309c <__aeabi_dadd+0x1c0>
20003294:	0026      	movs	r6, r4
20003296:	433e      	orrs	r6, r7
20003298:	d006      	beq.n	200032a8 <__aeabi_dadd+0x3cc>
2000329a:	43eb      	mvns	r3, r5
2000329c:	4699      	mov	r9, r3
2000329e:	2b00      	cmp	r3, #0
200032a0:	d0c7      	beq.n	20003232 <__aeabi_dadd+0x356>
200032a2:	4e94      	ldr	r6, [pc, #592]	; (200034f4 <__aeabi_dadd+0x618>)
200032a4:	42b0      	cmp	r0, r6
200032a6:	d1ac      	bne.n	20003202 <__aeabi_dadd+0x326>
200032a8:	000c      	movs	r4, r1
200032aa:	0017      	movs	r7, r2
200032ac:	0006      	movs	r6, r0
200032ae:	46d8      	mov	r8, fp
200032b0:	e698      	b.n	20002fe4 <__aeabi_dadd+0x108>
200032b2:	4b90      	ldr	r3, [pc, #576]	; (200034f4 <__aeabi_dadd+0x618>)
200032b4:	459a      	cmp	sl, r3
200032b6:	d00b      	beq.n	200032d0 <__aeabi_dadd+0x3f4>
200032b8:	4682      	mov	sl, r0
200032ba:	e6e7      	b.n	2000308c <__aeabi_dadd+0x1b0>
200032bc:	2800      	cmp	r0, #0
200032be:	d000      	beq.n	200032c2 <__aeabi_dadd+0x3e6>
200032c0:	e09e      	b.n	20003400 <__aeabi_dadd+0x524>
200032c2:	0018      	movs	r0, r3
200032c4:	4310      	orrs	r0, r2
200032c6:	d100      	bne.n	200032ca <__aeabi_dadd+0x3ee>
200032c8:	e0e9      	b.n	2000349e <__aeabi_dadd+0x5c2>
200032ca:	001c      	movs	r4, r3
200032cc:	0017      	movs	r7, r2
200032ce:	46d8      	mov	r8, fp
200032d0:	4e88      	ldr	r6, [pc, #544]	; (200034f4 <__aeabi_dadd+0x618>)
200032d2:	e687      	b.n	20002fe4 <__aeabi_dadd+0x108>
200032d4:	2500      	movs	r5, #0
200032d6:	e772      	b.n	200031be <__aeabi_dadd+0x2e2>
200032d8:	2100      	movs	r1, #0
200032da:	e782      	b.n	200031e2 <__aeabi_dadd+0x306>
200032dc:	0023      	movs	r3, r4
200032de:	433b      	orrs	r3, r7
200032e0:	2e00      	cmp	r6, #0
200032e2:	d000      	beq.n	200032e6 <__aeabi_dadd+0x40a>
200032e4:	e0ab      	b.n	2000343e <__aeabi_dadd+0x562>
200032e6:	2b00      	cmp	r3, #0
200032e8:	d100      	bne.n	200032ec <__aeabi_dadd+0x410>
200032ea:	e0e7      	b.n	200034bc <__aeabi_dadd+0x5e0>
200032ec:	000b      	movs	r3, r1
200032ee:	4313      	orrs	r3, r2
200032f0:	d100      	bne.n	200032f4 <__aeabi_dadd+0x418>
200032f2:	e677      	b.n	20002fe4 <__aeabi_dadd+0x108>
200032f4:	18ba      	adds	r2, r7, r2
200032f6:	42ba      	cmp	r2, r7
200032f8:	41bf      	sbcs	r7, r7
200032fa:	1864      	adds	r4, r4, r1
200032fc:	427f      	negs	r7, r7
200032fe:	19e4      	adds	r4, r4, r7
20003300:	0223      	lsls	r3, r4, #8
20003302:	d400      	bmi.n	20003306 <__aeabi_dadd+0x42a>
20003304:	e0f2      	b.n	200034ec <__aeabi_dadd+0x610>
20003306:	4b7c      	ldr	r3, [pc, #496]	; (200034f8 <__aeabi_dadd+0x61c>)
20003308:	0017      	movs	r7, r2
2000330a:	401c      	ands	r4, r3
2000330c:	0006      	movs	r6, r0
2000330e:	e669      	b.n	20002fe4 <__aeabi_dadd+0x108>
20003310:	0020      	movs	r0, r4
20003312:	4338      	orrs	r0, r7
20003314:	2e00      	cmp	r6, #0
20003316:	d1d1      	bne.n	200032bc <__aeabi_dadd+0x3e0>
20003318:	2800      	cmp	r0, #0
2000331a:	d15b      	bne.n	200033d4 <__aeabi_dadd+0x4f8>
2000331c:	001c      	movs	r4, r3
2000331e:	4314      	orrs	r4, r2
20003320:	d100      	bne.n	20003324 <__aeabi_dadd+0x448>
20003322:	e0a8      	b.n	20003476 <__aeabi_dadd+0x59a>
20003324:	001c      	movs	r4, r3
20003326:	0017      	movs	r7, r2
20003328:	46d8      	mov	r8, fp
2000332a:	e65b      	b.n	20002fe4 <__aeabi_dadd+0x108>
2000332c:	0006      	movs	r6, r0
2000332e:	2400      	movs	r4, #0
20003330:	2700      	movs	r7, #0
20003332:	e697      	b.n	20003064 <__aeabi_dadd+0x188>
20003334:	4650      	mov	r0, sl
20003336:	000b      	movs	r3, r1
20003338:	3820      	subs	r0, #32
2000333a:	40c3      	lsrs	r3, r0
2000333c:	4699      	mov	r9, r3
2000333e:	4653      	mov	r3, sl
20003340:	2b20      	cmp	r3, #32
20003342:	d100      	bne.n	20003346 <__aeabi_dadd+0x46a>
20003344:	e095      	b.n	20003472 <__aeabi_dadd+0x596>
20003346:	2340      	movs	r3, #64	; 0x40
20003348:	4650      	mov	r0, sl
2000334a:	1a1b      	subs	r3, r3, r0
2000334c:	4099      	lsls	r1, r3
2000334e:	430a      	orrs	r2, r1
20003350:	1e51      	subs	r1, r2, #1
20003352:	418a      	sbcs	r2, r1
20003354:	464b      	mov	r3, r9
20003356:	2100      	movs	r1, #0
20003358:	431a      	orrs	r2, r3
2000335a:	e69f      	b.n	2000309c <__aeabi_dadd+0x1c0>
2000335c:	2e00      	cmp	r6, #0
2000335e:	d130      	bne.n	200033c2 <__aeabi_dadd+0x4e6>
20003360:	0026      	movs	r6, r4
20003362:	433e      	orrs	r6, r7
20003364:	d067      	beq.n	20003436 <__aeabi_dadd+0x55a>
20003366:	43db      	mvns	r3, r3
20003368:	469a      	mov	sl, r3
2000336a:	2b00      	cmp	r3, #0
2000336c:	d01c      	beq.n	200033a8 <__aeabi_dadd+0x4cc>
2000336e:	4e61      	ldr	r6, [pc, #388]	; (200034f4 <__aeabi_dadd+0x618>)
20003370:	42b0      	cmp	r0, r6
20003372:	d060      	beq.n	20003436 <__aeabi_dadd+0x55a>
20003374:	4653      	mov	r3, sl
20003376:	2b38      	cmp	r3, #56	; 0x38
20003378:	dd00      	ble.n	2000337c <__aeabi_dadd+0x4a0>
2000337a:	e096      	b.n	200034aa <__aeabi_dadd+0x5ce>
2000337c:	2b1f      	cmp	r3, #31
2000337e:	dd00      	ble.n	20003382 <__aeabi_dadd+0x4a6>
20003380:	e09f      	b.n	200034c2 <__aeabi_dadd+0x5e6>
20003382:	2620      	movs	r6, #32
20003384:	1af3      	subs	r3, r6, r3
20003386:	0026      	movs	r6, r4
20003388:	409e      	lsls	r6, r3
2000338a:	469c      	mov	ip, r3
2000338c:	46b3      	mov	fp, r6
2000338e:	4653      	mov	r3, sl
20003390:	003e      	movs	r6, r7
20003392:	40de      	lsrs	r6, r3
20003394:	0033      	movs	r3, r6
20003396:	465e      	mov	r6, fp
20003398:	431e      	orrs	r6, r3
2000339a:	4663      	mov	r3, ip
2000339c:	409f      	lsls	r7, r3
2000339e:	1e7b      	subs	r3, r7, #1
200033a0:	419f      	sbcs	r7, r3
200033a2:	4653      	mov	r3, sl
200033a4:	40dc      	lsrs	r4, r3
200033a6:	4337      	orrs	r7, r6
200033a8:	18bf      	adds	r7, r7, r2
200033aa:	4297      	cmp	r7, r2
200033ac:	4192      	sbcs	r2, r2
200033ae:	1864      	adds	r4, r4, r1
200033b0:	4252      	negs	r2, r2
200033b2:	18a4      	adds	r4, r4, r2
200033b4:	0006      	movs	r6, r0
200033b6:	e678      	b.n	200030aa <__aeabi_dadd+0x1ce>
200033b8:	4327      	orrs	r7, r4
200033ba:	1e7c      	subs	r4, r7, #1
200033bc:	41a7      	sbcs	r7, r4
200033be:	2400      	movs	r4, #0
200033c0:	e737      	b.n	20003232 <__aeabi_dadd+0x356>
200033c2:	4e4c      	ldr	r6, [pc, #304]	; (200034f4 <__aeabi_dadd+0x618>)
200033c4:	42b0      	cmp	r0, r6
200033c6:	d036      	beq.n	20003436 <__aeabi_dadd+0x55a>
200033c8:	2680      	movs	r6, #128	; 0x80
200033ca:	425b      	negs	r3, r3
200033cc:	0436      	lsls	r6, r6, #16
200033ce:	469a      	mov	sl, r3
200033d0:	4334      	orrs	r4, r6
200033d2:	e7cf      	b.n	20003374 <__aeabi_dadd+0x498>
200033d4:	0018      	movs	r0, r3
200033d6:	4310      	orrs	r0, r2
200033d8:	d100      	bne.n	200033dc <__aeabi_dadd+0x500>
200033da:	e603      	b.n	20002fe4 <__aeabi_dadd+0x108>
200033dc:	1ab8      	subs	r0, r7, r2
200033de:	4684      	mov	ip, r0
200033e0:	4567      	cmp	r7, ip
200033e2:	41ad      	sbcs	r5, r5
200033e4:	1ae0      	subs	r0, r4, r3
200033e6:	426d      	negs	r5, r5
200033e8:	1b40      	subs	r0, r0, r5
200033ea:	0205      	lsls	r5, r0, #8
200033ec:	d400      	bmi.n	200033f0 <__aeabi_dadd+0x514>
200033ee:	e62c      	b.n	2000304a <__aeabi_dadd+0x16e>
200033f0:	1bd7      	subs	r7, r2, r7
200033f2:	42ba      	cmp	r2, r7
200033f4:	4192      	sbcs	r2, r2
200033f6:	1b1c      	subs	r4, r3, r4
200033f8:	4252      	negs	r2, r2
200033fa:	1aa4      	subs	r4, r4, r2
200033fc:	46d8      	mov	r8, fp
200033fe:	e5f1      	b.n	20002fe4 <__aeabi_dadd+0x108>
20003400:	0018      	movs	r0, r3
20003402:	4310      	orrs	r0, r2
20003404:	d100      	bne.n	20003408 <__aeabi_dadd+0x52c>
20003406:	e763      	b.n	200032d0 <__aeabi_dadd+0x3f4>
20003408:	08f8      	lsrs	r0, r7, #3
2000340a:	0767      	lsls	r7, r4, #29
2000340c:	4307      	orrs	r7, r0
2000340e:	2080      	movs	r0, #128	; 0x80
20003410:	08e4      	lsrs	r4, r4, #3
20003412:	0300      	lsls	r0, r0, #12
20003414:	4204      	tst	r4, r0
20003416:	d008      	beq.n	2000342a <__aeabi_dadd+0x54e>
20003418:	08dd      	lsrs	r5, r3, #3
2000341a:	4205      	tst	r5, r0
2000341c:	d105      	bne.n	2000342a <__aeabi_dadd+0x54e>
2000341e:	08d2      	lsrs	r2, r2, #3
20003420:	0759      	lsls	r1, r3, #29
20003422:	4311      	orrs	r1, r2
20003424:	000f      	movs	r7, r1
20003426:	002c      	movs	r4, r5
20003428:	46d8      	mov	r8, fp
2000342a:	0f7b      	lsrs	r3, r7, #29
2000342c:	00e4      	lsls	r4, r4, #3
2000342e:	431c      	orrs	r4, r3
20003430:	00ff      	lsls	r7, r7, #3
20003432:	4e30      	ldr	r6, [pc, #192]	; (200034f4 <__aeabi_dadd+0x618>)
20003434:	e5d6      	b.n	20002fe4 <__aeabi_dadd+0x108>
20003436:	000c      	movs	r4, r1
20003438:	0017      	movs	r7, r2
2000343a:	0006      	movs	r6, r0
2000343c:	e5d2      	b.n	20002fe4 <__aeabi_dadd+0x108>
2000343e:	2b00      	cmp	r3, #0
20003440:	d038      	beq.n	200034b4 <__aeabi_dadd+0x5d8>
20003442:	000b      	movs	r3, r1
20003444:	4313      	orrs	r3, r2
20003446:	d100      	bne.n	2000344a <__aeabi_dadd+0x56e>
20003448:	e742      	b.n	200032d0 <__aeabi_dadd+0x3f4>
2000344a:	08f8      	lsrs	r0, r7, #3
2000344c:	0767      	lsls	r7, r4, #29
2000344e:	4307      	orrs	r7, r0
20003450:	2080      	movs	r0, #128	; 0x80
20003452:	08e4      	lsrs	r4, r4, #3
20003454:	0300      	lsls	r0, r0, #12
20003456:	4204      	tst	r4, r0
20003458:	d0e7      	beq.n	2000342a <__aeabi_dadd+0x54e>
2000345a:	08cb      	lsrs	r3, r1, #3
2000345c:	4203      	tst	r3, r0
2000345e:	d1e4      	bne.n	2000342a <__aeabi_dadd+0x54e>
20003460:	08d2      	lsrs	r2, r2, #3
20003462:	0749      	lsls	r1, r1, #29
20003464:	4311      	orrs	r1, r2
20003466:	000f      	movs	r7, r1
20003468:	001c      	movs	r4, r3
2000346a:	e7de      	b.n	2000342a <__aeabi_dadd+0x54e>
2000346c:	2700      	movs	r7, #0
2000346e:	2400      	movs	r4, #0
20003470:	e5d5      	b.n	2000301e <__aeabi_dadd+0x142>
20003472:	2100      	movs	r1, #0
20003474:	e76b      	b.n	2000334e <__aeabi_dadd+0x472>
20003476:	2500      	movs	r5, #0
20003478:	2700      	movs	r7, #0
2000347a:	e5f3      	b.n	20003064 <__aeabi_dadd+0x188>
2000347c:	464e      	mov	r6, r9
2000347e:	0025      	movs	r5, r4
20003480:	3e20      	subs	r6, #32
20003482:	40f5      	lsrs	r5, r6
20003484:	464b      	mov	r3, r9
20003486:	002e      	movs	r6, r5
20003488:	2b20      	cmp	r3, #32
2000348a:	d02d      	beq.n	200034e8 <__aeabi_dadd+0x60c>
2000348c:	2540      	movs	r5, #64	; 0x40
2000348e:	1aed      	subs	r5, r5, r3
20003490:	40ac      	lsls	r4, r5
20003492:	4327      	orrs	r7, r4
20003494:	1e7c      	subs	r4, r7, #1
20003496:	41a7      	sbcs	r7, r4
20003498:	2400      	movs	r4, #0
2000349a:	4337      	orrs	r7, r6
2000349c:	e6c9      	b.n	20003232 <__aeabi_dadd+0x356>
2000349e:	2480      	movs	r4, #128	; 0x80
200034a0:	2500      	movs	r5, #0
200034a2:	0324      	lsls	r4, r4, #12
200034a4:	4e13      	ldr	r6, [pc, #76]	; (200034f4 <__aeabi_dadd+0x618>)
200034a6:	2700      	movs	r7, #0
200034a8:	e5dc      	b.n	20003064 <__aeabi_dadd+0x188>
200034aa:	4327      	orrs	r7, r4
200034ac:	1e7c      	subs	r4, r7, #1
200034ae:	41a7      	sbcs	r7, r4
200034b0:	2400      	movs	r4, #0
200034b2:	e779      	b.n	200033a8 <__aeabi_dadd+0x4cc>
200034b4:	000c      	movs	r4, r1
200034b6:	0017      	movs	r7, r2
200034b8:	4e0e      	ldr	r6, [pc, #56]	; (200034f4 <__aeabi_dadd+0x618>)
200034ba:	e593      	b.n	20002fe4 <__aeabi_dadd+0x108>
200034bc:	000c      	movs	r4, r1
200034be:	0017      	movs	r7, r2
200034c0:	e590      	b.n	20002fe4 <__aeabi_dadd+0x108>
200034c2:	4656      	mov	r6, sl
200034c4:	0023      	movs	r3, r4
200034c6:	3e20      	subs	r6, #32
200034c8:	40f3      	lsrs	r3, r6
200034ca:	4699      	mov	r9, r3
200034cc:	4653      	mov	r3, sl
200034ce:	2b20      	cmp	r3, #32
200034d0:	d00e      	beq.n	200034f0 <__aeabi_dadd+0x614>
200034d2:	2340      	movs	r3, #64	; 0x40
200034d4:	4656      	mov	r6, sl
200034d6:	1b9b      	subs	r3, r3, r6
200034d8:	409c      	lsls	r4, r3
200034da:	4327      	orrs	r7, r4
200034dc:	1e7c      	subs	r4, r7, #1
200034de:	41a7      	sbcs	r7, r4
200034e0:	464b      	mov	r3, r9
200034e2:	2400      	movs	r4, #0
200034e4:	431f      	orrs	r7, r3
200034e6:	e75f      	b.n	200033a8 <__aeabi_dadd+0x4cc>
200034e8:	2400      	movs	r4, #0
200034ea:	e7d2      	b.n	20003492 <__aeabi_dadd+0x5b6>
200034ec:	0017      	movs	r7, r2
200034ee:	e5b2      	b.n	20003056 <__aeabi_dadd+0x17a>
200034f0:	2400      	movs	r4, #0
200034f2:	e7f2      	b.n	200034da <__aeabi_dadd+0x5fe>
200034f4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200034f8:	ff7fffff 			; <UNDEFINED> instruction: 0xff7fffff

200034fc <__aeabi_d2iz>:
200034fc:	b530      	push	{r4, r5, lr}
200034fe:	4d13      	ldr	r5, [pc, #76]	; (2000354c <__aeabi_d2iz+0x50>)
20003500:	030a      	lsls	r2, r1, #12
20003502:	004b      	lsls	r3, r1, #1
20003504:	0b12      	lsrs	r2, r2, #12
20003506:	0d5b      	lsrs	r3, r3, #21
20003508:	0fc9      	lsrs	r1, r1, #31
2000350a:	2400      	movs	r4, #0
2000350c:	42ab      	cmp	r3, r5
2000350e:	dd10      	ble.n	20003532 <__aeabi_d2iz+0x36>
20003510:	4c0f      	ldr	r4, [pc, #60]	; (20003550 <__aeabi_d2iz+0x54>)
20003512:	42a3      	cmp	r3, r4
20003514:	dc0f      	bgt.n	20003536 <__aeabi_d2iz+0x3a>
20003516:	2480      	movs	r4, #128	; 0x80
20003518:	4d0e      	ldr	r5, [pc, #56]	; (20003554 <__aeabi_d2iz+0x58>)
2000351a:	0364      	lsls	r4, r4, #13
2000351c:	4322      	orrs	r2, r4
2000351e:	1aed      	subs	r5, r5, r3
20003520:	2d1f      	cmp	r5, #31
20003522:	dd0b      	ble.n	2000353c <__aeabi_d2iz+0x40>
20003524:	480c      	ldr	r0, [pc, #48]	; (20003558 <__aeabi_d2iz+0x5c>)
20003526:	1ac3      	subs	r3, r0, r3
20003528:	40da      	lsrs	r2, r3
2000352a:	4254      	negs	r4, r2
2000352c:	2900      	cmp	r1, #0
2000352e:	d100      	bne.n	20003532 <__aeabi_d2iz+0x36>
20003530:	0014      	movs	r4, r2
20003532:	0020      	movs	r0, r4
20003534:	bd30      	pop	{r4, r5, pc}
20003536:	4b09      	ldr	r3, [pc, #36]	; (2000355c <__aeabi_d2iz+0x60>)
20003538:	18cc      	adds	r4, r1, r3
2000353a:	e7fa      	b.n	20003532 <__aeabi_d2iz+0x36>
2000353c:	4c08      	ldr	r4, [pc, #32]	; (20003560 <__aeabi_d2iz+0x64>)
2000353e:	40e8      	lsrs	r0, r5
20003540:	46a4      	mov	ip, r4
20003542:	4463      	add	r3, ip
20003544:	409a      	lsls	r2, r3
20003546:	4302      	orrs	r2, r0
20003548:	e7ef      	b.n	2000352a <__aeabi_d2iz+0x2e>
2000354a:	46c0      	nop			; (mov r8, r8)
2000354c:	000003fe 	strdeq	r0, [r0], -lr
20003550:	0000041d 	andeq	r0, r0, sp, lsl r4
20003554:	00000433 	andeq	r0, r0, r3, lsr r4
20003558:	00000413 	andeq	r0, r0, r3, lsl r4
2000355c:	7fffffff 	svcvc	0x00ffffff
20003560:	fffffbed 			; <UNDEFINED> instruction: 0xfffffbed

20003564 <__aeabi_i2d>:
20003564:	b570      	push	{r4, r5, r6, lr}
20003566:	2800      	cmp	r0, #0
20003568:	d030      	beq.n	200035cc <__aeabi_i2d+0x68>
2000356a:	17c3      	asrs	r3, r0, #31
2000356c:	18c4      	adds	r4, r0, r3
2000356e:	405c      	eors	r4, r3
20003570:	0fc5      	lsrs	r5, r0, #31
20003572:	0020      	movs	r0, r4
20003574:	f000 f838 	bl	200035e8 <__clzsi2>
20003578:	4b17      	ldr	r3, [pc, #92]	; (200035d8 <__aeabi_i2d+0x74>)
2000357a:	4a18      	ldr	r2, [pc, #96]	; (200035dc <__aeabi_i2d+0x78>)
2000357c:	1a1b      	subs	r3, r3, r0
2000357e:	1ad2      	subs	r2, r2, r3
20003580:	2a1f      	cmp	r2, #31
20003582:	dd18      	ble.n	200035b6 <__aeabi_i2d+0x52>
20003584:	4a16      	ldr	r2, [pc, #88]	; (200035e0 <__aeabi_i2d+0x7c>)
20003586:	1ad2      	subs	r2, r2, r3
20003588:	4094      	lsls	r4, r2
2000358a:	2200      	movs	r2, #0
2000358c:	0324      	lsls	r4, r4, #12
2000358e:	055b      	lsls	r3, r3, #21
20003590:	0b24      	lsrs	r4, r4, #12
20003592:	0d5b      	lsrs	r3, r3, #21
20003594:	2100      	movs	r1, #0
20003596:	0010      	movs	r0, r2
20003598:	0324      	lsls	r4, r4, #12
2000359a:	0d0a      	lsrs	r2, r1, #20
2000359c:	0b24      	lsrs	r4, r4, #12
2000359e:	0512      	lsls	r2, r2, #20
200035a0:	4322      	orrs	r2, r4
200035a2:	4c10      	ldr	r4, [pc, #64]	; (200035e4 <__aeabi_i2d+0x80>)
200035a4:	051b      	lsls	r3, r3, #20
200035a6:	4022      	ands	r2, r4
200035a8:	4313      	orrs	r3, r2
200035aa:	005b      	lsls	r3, r3, #1
200035ac:	07ed      	lsls	r5, r5, #31
200035ae:	085b      	lsrs	r3, r3, #1
200035b0:	432b      	orrs	r3, r5
200035b2:	0019      	movs	r1, r3
200035b4:	bd70      	pop	{r4, r5, r6, pc}
200035b6:	0021      	movs	r1, r4
200035b8:	4091      	lsls	r1, r2
200035ba:	000a      	movs	r2, r1
200035bc:	210b      	movs	r1, #11
200035be:	1a08      	subs	r0, r1, r0
200035c0:	40c4      	lsrs	r4, r0
200035c2:	055b      	lsls	r3, r3, #21
200035c4:	0324      	lsls	r4, r4, #12
200035c6:	0b24      	lsrs	r4, r4, #12
200035c8:	0d5b      	lsrs	r3, r3, #21
200035ca:	e7e3      	b.n	20003594 <__aeabi_i2d+0x30>
200035cc:	2500      	movs	r5, #0
200035ce:	2300      	movs	r3, #0
200035d0:	2400      	movs	r4, #0
200035d2:	2200      	movs	r2, #0
200035d4:	e7de      	b.n	20003594 <__aeabi_i2d+0x30>
200035d6:	46c0      	nop			; (mov r8, r8)
200035d8:	0000041e 	andeq	r0, r0, lr, lsl r4
200035dc:	00000433 	andeq	r0, r0, r3, lsr r4
200035e0:	00000413 	andeq	r0, r0, r3, lsl r4
200035e4:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>

200035e8 <__clzsi2>:
200035e8:	211c      	movs	r1, #28
200035ea:	2301      	movs	r3, #1
200035ec:	041b      	lsls	r3, r3, #16
200035ee:	4298      	cmp	r0, r3
200035f0:	d301      	bcc.n	200035f6 <__clzsi2+0xe>
200035f2:	0c00      	lsrs	r0, r0, #16
200035f4:	3910      	subs	r1, #16
200035f6:	0a1b      	lsrs	r3, r3, #8
200035f8:	4298      	cmp	r0, r3
200035fa:	d301      	bcc.n	20003600 <__clzsi2+0x18>
200035fc:	0a00      	lsrs	r0, r0, #8
200035fe:	3908      	subs	r1, #8
20003600:	091b      	lsrs	r3, r3, #4
20003602:	4298      	cmp	r0, r3
20003604:	d301      	bcc.n	2000360a <__clzsi2+0x22>
20003606:	0900      	lsrs	r0, r0, #4
20003608:	3904      	subs	r1, #4
2000360a:	a202      	add	r2, pc, #8	; (adr r2, 20003614 <__clzsi2+0x2c>)
2000360c:	5c10      	ldrb	r0, [r2, r0]
2000360e:	1840      	adds	r0, r0, r1
20003610:	4770      	bx	lr
20003612:	46c0      	nop			; (mov r8, r8)
20003614:	02020304 	andeq	r0, r2, #4, 6	; 0x10000000
20003618:	01010101 	tsteq	r1, r1, lsl #2
	...

20003624 <__aeabi_cdrcmple>:
20003624:	4684      	mov	ip, r0
20003626:	1c10      	adds	r0, r2, #0
20003628:	4662      	mov	r2, ip
2000362a:	468c      	mov	ip, r1
2000362c:	1c19      	adds	r1, r3, #0
2000362e:	4663      	mov	r3, ip
20003630:	e000      	b.n	20003634 <__aeabi_cdcmpeq>
20003632:	46c0      	nop			; (mov r8, r8)

20003634 <__aeabi_cdcmpeq>:
20003634:	b51f      	push	{r0, r1, r2, r3, r4, lr}
20003636:	f000 fc05 	bl	20003e44 <__ledf2>
2000363a:	2800      	cmp	r0, #0
2000363c:	d401      	bmi.n	20003642 <__aeabi_cdcmpeq+0xe>
2000363e:	2100      	movs	r1, #0
20003640:	42c8      	cmn	r0, r1
20003642:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

20003644 <__aeabi_dcmpeq>:
20003644:	b510      	push	{r4, lr}
20003646:	f000 fb5f 	bl	20003d08 <__eqdf2>
2000364a:	4240      	negs	r0, r0
2000364c:	3001      	adds	r0, #1
2000364e:	bd10      	pop	{r4, pc}

20003650 <__aeabi_dcmplt>:
20003650:	b510      	push	{r4, lr}
20003652:	f000 fbf7 	bl	20003e44 <__ledf2>
20003656:	2800      	cmp	r0, #0
20003658:	db01      	blt.n	2000365e <__aeabi_dcmplt+0xe>
2000365a:	2000      	movs	r0, #0
2000365c:	bd10      	pop	{r4, pc}
2000365e:	2001      	movs	r0, #1
20003660:	bd10      	pop	{r4, pc}
20003662:	46c0      	nop			; (mov r8, r8)

20003664 <__aeabi_dcmple>:
20003664:	b510      	push	{r4, lr}
20003666:	f000 fbed 	bl	20003e44 <__ledf2>
2000366a:	2800      	cmp	r0, #0
2000366c:	dd01      	ble.n	20003672 <__aeabi_dcmple+0xe>
2000366e:	2000      	movs	r0, #0
20003670:	bd10      	pop	{r4, pc}
20003672:	2001      	movs	r0, #1
20003674:	bd10      	pop	{r4, pc}
20003676:	46c0      	nop			; (mov r8, r8)

20003678 <__aeabi_dcmpgt>:
20003678:	b510      	push	{r4, lr}
2000367a:	f000 fb7f 	bl	20003d7c <__gedf2>
2000367e:	2800      	cmp	r0, #0
20003680:	dc01      	bgt.n	20003686 <__aeabi_dcmpgt+0xe>
20003682:	2000      	movs	r0, #0
20003684:	bd10      	pop	{r4, pc}
20003686:	2001      	movs	r0, #1
20003688:	bd10      	pop	{r4, pc}
2000368a:	46c0      	nop			; (mov r8, r8)

2000368c <__aeabi_dcmpge>:
2000368c:	b510      	push	{r4, lr}
2000368e:	f000 fb75 	bl	20003d7c <__gedf2>
20003692:	2800      	cmp	r0, #0
20003694:	da01      	bge.n	2000369a <__aeabi_dcmpge+0xe>
20003696:	2000      	movs	r0, #0
20003698:	bd10      	pop	{r4, pc}
2000369a:	2001      	movs	r0, #1
2000369c:	bd10      	pop	{r4, pc}
2000369e:	46c0      	nop			; (mov r8, r8)

200036a0 <__aeabi_ddiv>:
200036a0:	b5f0      	push	{r4, r5, r6, r7, lr}
200036a2:	4657      	mov	r7, sl
200036a4:	4645      	mov	r5, r8
200036a6:	46de      	mov	lr, fp
200036a8:	464e      	mov	r6, r9
200036aa:	b5e0      	push	{r5, r6, r7, lr}
200036ac:	004c      	lsls	r4, r1, #1
200036ae:	030e      	lsls	r6, r1, #12
200036b0:	b087      	sub	sp, #28
200036b2:	4683      	mov	fp, r0
200036b4:	4692      	mov	sl, r2
200036b6:	001d      	movs	r5, r3
200036b8:	4680      	mov	r8, r0
200036ba:	0b36      	lsrs	r6, r6, #12
200036bc:	0d64      	lsrs	r4, r4, #21
200036be:	0fcf      	lsrs	r7, r1, #31
200036c0:	2c00      	cmp	r4, #0
200036c2:	d04f      	beq.n	20003764 <__aeabi_ddiv+0xc4>
200036c4:	4b6f      	ldr	r3, [pc, #444]	; (20003884 <__aeabi_ddiv+0x1e4>)
200036c6:	429c      	cmp	r4, r3
200036c8:	d035      	beq.n	20003736 <__aeabi_ddiv+0x96>
200036ca:	2380      	movs	r3, #128	; 0x80
200036cc:	0f42      	lsrs	r2, r0, #29
200036ce:	041b      	lsls	r3, r3, #16
200036d0:	00f6      	lsls	r6, r6, #3
200036d2:	4313      	orrs	r3, r2
200036d4:	4333      	orrs	r3, r6
200036d6:	4699      	mov	r9, r3
200036d8:	00c3      	lsls	r3, r0, #3
200036da:	4698      	mov	r8, r3
200036dc:	4b6a      	ldr	r3, [pc, #424]	; (20003888 <__aeabi_ddiv+0x1e8>)
200036de:	2600      	movs	r6, #0
200036e0:	469c      	mov	ip, r3
200036e2:	2300      	movs	r3, #0
200036e4:	4464      	add	r4, ip
200036e6:	9303      	str	r3, [sp, #12]
200036e8:	032b      	lsls	r3, r5, #12
200036ea:	0b1b      	lsrs	r3, r3, #12
200036ec:	469b      	mov	fp, r3
200036ee:	006b      	lsls	r3, r5, #1
200036f0:	0fed      	lsrs	r5, r5, #31
200036f2:	4650      	mov	r0, sl
200036f4:	0d5b      	lsrs	r3, r3, #21
200036f6:	9501      	str	r5, [sp, #4]
200036f8:	d05e      	beq.n	200037b8 <__aeabi_ddiv+0x118>
200036fa:	4a62      	ldr	r2, [pc, #392]	; (20003884 <__aeabi_ddiv+0x1e4>)
200036fc:	4293      	cmp	r3, r2
200036fe:	d053      	beq.n	200037a8 <__aeabi_ddiv+0x108>
20003700:	465a      	mov	r2, fp
20003702:	00d1      	lsls	r1, r2, #3
20003704:	2280      	movs	r2, #128	; 0x80
20003706:	0f40      	lsrs	r0, r0, #29
20003708:	0412      	lsls	r2, r2, #16
2000370a:	4302      	orrs	r2, r0
2000370c:	430a      	orrs	r2, r1
2000370e:	4693      	mov	fp, r2
20003710:	4652      	mov	r2, sl
20003712:	00d1      	lsls	r1, r2, #3
20003714:	4a5c      	ldr	r2, [pc, #368]	; (20003888 <__aeabi_ddiv+0x1e8>)
20003716:	4694      	mov	ip, r2
20003718:	2200      	movs	r2, #0
2000371a:	4463      	add	r3, ip
2000371c:	0038      	movs	r0, r7
2000371e:	4068      	eors	r0, r5
20003720:	4684      	mov	ip, r0
20003722:	9002      	str	r0, [sp, #8]
20003724:	1ae4      	subs	r4, r4, r3
20003726:	4316      	orrs	r6, r2
20003728:	2e0f      	cmp	r6, #15
2000372a:	d900      	bls.n	2000372e <__aeabi_ddiv+0x8e>
2000372c:	e0b4      	b.n	20003898 <__aeabi_ddiv+0x1f8>
2000372e:	4b57      	ldr	r3, [pc, #348]	; (2000388c <__aeabi_ddiv+0x1ec>)
20003730:	00b6      	lsls	r6, r6, #2
20003732:	599b      	ldr	r3, [r3, r6]
20003734:	469f      	mov	pc, r3
20003736:	0003      	movs	r3, r0
20003738:	4333      	orrs	r3, r6
2000373a:	4699      	mov	r9, r3
2000373c:	d16c      	bne.n	20003818 <__aeabi_ddiv+0x178>
2000373e:	2300      	movs	r3, #0
20003740:	4698      	mov	r8, r3
20003742:	3302      	adds	r3, #2
20003744:	2608      	movs	r6, #8
20003746:	9303      	str	r3, [sp, #12]
20003748:	e7ce      	b.n	200036e8 <__aeabi_ddiv+0x48>
2000374a:	46cb      	mov	fp, r9
2000374c:	4641      	mov	r1, r8
2000374e:	9a03      	ldr	r2, [sp, #12]
20003750:	9701      	str	r7, [sp, #4]
20003752:	2a02      	cmp	r2, #2
20003754:	d165      	bne.n	20003822 <__aeabi_ddiv+0x182>
20003756:	9b01      	ldr	r3, [sp, #4]
20003758:	4c4a      	ldr	r4, [pc, #296]	; (20003884 <__aeabi_ddiv+0x1e4>)
2000375a:	469c      	mov	ip, r3
2000375c:	2300      	movs	r3, #0
2000375e:	2200      	movs	r2, #0
20003760:	4698      	mov	r8, r3
20003762:	e06b      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003764:	0003      	movs	r3, r0
20003766:	4333      	orrs	r3, r6
20003768:	4699      	mov	r9, r3
2000376a:	d04e      	beq.n	2000380a <__aeabi_ddiv+0x16a>
2000376c:	2e00      	cmp	r6, #0
2000376e:	d100      	bne.n	20003772 <__aeabi_ddiv+0xd2>
20003770:	e1bc      	b.n	20003aec <__aeabi_ddiv+0x44c>
20003772:	0030      	movs	r0, r6
20003774:	f7ff ff38 	bl	200035e8 <__clzsi2>
20003778:	0003      	movs	r3, r0
2000377a:	3b0b      	subs	r3, #11
2000377c:	2b1c      	cmp	r3, #28
2000377e:	dd00      	ble.n	20003782 <__aeabi_ddiv+0xe2>
20003780:	e1ac      	b.n	20003adc <__aeabi_ddiv+0x43c>
20003782:	221d      	movs	r2, #29
20003784:	1ad3      	subs	r3, r2, r3
20003786:	465a      	mov	r2, fp
20003788:	0001      	movs	r1, r0
2000378a:	40da      	lsrs	r2, r3
2000378c:	3908      	subs	r1, #8
2000378e:	408e      	lsls	r6, r1
20003790:	0013      	movs	r3, r2
20003792:	4333      	orrs	r3, r6
20003794:	4699      	mov	r9, r3
20003796:	465b      	mov	r3, fp
20003798:	408b      	lsls	r3, r1
2000379a:	4698      	mov	r8, r3
2000379c:	2300      	movs	r3, #0
2000379e:	4c3c      	ldr	r4, [pc, #240]	; (20003890 <__aeabi_ddiv+0x1f0>)
200037a0:	2600      	movs	r6, #0
200037a2:	1a24      	subs	r4, r4, r0
200037a4:	9303      	str	r3, [sp, #12]
200037a6:	e79f      	b.n	200036e8 <__aeabi_ddiv+0x48>
200037a8:	4651      	mov	r1, sl
200037aa:	465a      	mov	r2, fp
200037ac:	4311      	orrs	r1, r2
200037ae:	d129      	bne.n	20003804 <__aeabi_ddiv+0x164>
200037b0:	2200      	movs	r2, #0
200037b2:	4693      	mov	fp, r2
200037b4:	3202      	adds	r2, #2
200037b6:	e7b1      	b.n	2000371c <__aeabi_ddiv+0x7c>
200037b8:	4659      	mov	r1, fp
200037ba:	4301      	orrs	r1, r0
200037bc:	d01e      	beq.n	200037fc <__aeabi_ddiv+0x15c>
200037be:	465b      	mov	r3, fp
200037c0:	2b00      	cmp	r3, #0
200037c2:	d100      	bne.n	200037c6 <__aeabi_ddiv+0x126>
200037c4:	e19e      	b.n	20003b04 <__aeabi_ddiv+0x464>
200037c6:	4658      	mov	r0, fp
200037c8:	f7ff ff0e 	bl	200035e8 <__clzsi2>
200037cc:	0003      	movs	r3, r0
200037ce:	3b0b      	subs	r3, #11
200037d0:	2b1c      	cmp	r3, #28
200037d2:	dd00      	ble.n	200037d6 <__aeabi_ddiv+0x136>
200037d4:	e18f      	b.n	20003af6 <__aeabi_ddiv+0x456>
200037d6:	0002      	movs	r2, r0
200037d8:	4659      	mov	r1, fp
200037da:	3a08      	subs	r2, #8
200037dc:	4091      	lsls	r1, r2
200037de:	468b      	mov	fp, r1
200037e0:	211d      	movs	r1, #29
200037e2:	1acb      	subs	r3, r1, r3
200037e4:	4651      	mov	r1, sl
200037e6:	40d9      	lsrs	r1, r3
200037e8:	000b      	movs	r3, r1
200037ea:	4659      	mov	r1, fp
200037ec:	430b      	orrs	r3, r1
200037ee:	4651      	mov	r1, sl
200037f0:	469b      	mov	fp, r3
200037f2:	4091      	lsls	r1, r2
200037f4:	4b26      	ldr	r3, [pc, #152]	; (20003890 <__aeabi_ddiv+0x1f0>)
200037f6:	2200      	movs	r2, #0
200037f8:	1a1b      	subs	r3, r3, r0
200037fa:	e78f      	b.n	2000371c <__aeabi_ddiv+0x7c>
200037fc:	2300      	movs	r3, #0
200037fe:	2201      	movs	r2, #1
20003800:	469b      	mov	fp, r3
20003802:	e78b      	b.n	2000371c <__aeabi_ddiv+0x7c>
20003804:	4651      	mov	r1, sl
20003806:	2203      	movs	r2, #3
20003808:	e788      	b.n	2000371c <__aeabi_ddiv+0x7c>
2000380a:	2300      	movs	r3, #0
2000380c:	4698      	mov	r8, r3
2000380e:	3301      	adds	r3, #1
20003810:	2604      	movs	r6, #4
20003812:	2400      	movs	r4, #0
20003814:	9303      	str	r3, [sp, #12]
20003816:	e767      	b.n	200036e8 <__aeabi_ddiv+0x48>
20003818:	2303      	movs	r3, #3
2000381a:	46b1      	mov	r9, r6
2000381c:	9303      	str	r3, [sp, #12]
2000381e:	260c      	movs	r6, #12
20003820:	e762      	b.n	200036e8 <__aeabi_ddiv+0x48>
20003822:	2a03      	cmp	r2, #3
20003824:	d100      	bne.n	20003828 <__aeabi_ddiv+0x188>
20003826:	e25c      	b.n	20003ce2 <__aeabi_ddiv+0x642>
20003828:	9b01      	ldr	r3, [sp, #4]
2000382a:	2a01      	cmp	r2, #1
2000382c:	d000      	beq.n	20003830 <__aeabi_ddiv+0x190>
2000382e:	e1e4      	b.n	20003bfa <__aeabi_ddiv+0x55a>
20003830:	4013      	ands	r3, r2
20003832:	469c      	mov	ip, r3
20003834:	2300      	movs	r3, #0
20003836:	2400      	movs	r4, #0
20003838:	2200      	movs	r2, #0
2000383a:	4698      	mov	r8, r3
2000383c:	2100      	movs	r1, #0
2000383e:	0312      	lsls	r2, r2, #12
20003840:	0b13      	lsrs	r3, r2, #12
20003842:	0d0a      	lsrs	r2, r1, #20
20003844:	0512      	lsls	r2, r2, #20
20003846:	431a      	orrs	r2, r3
20003848:	0523      	lsls	r3, r4, #20
2000384a:	4c12      	ldr	r4, [pc, #72]	; (20003894 <__aeabi_ddiv+0x1f4>)
2000384c:	4640      	mov	r0, r8
2000384e:	4022      	ands	r2, r4
20003850:	4313      	orrs	r3, r2
20003852:	4662      	mov	r2, ip
20003854:	005b      	lsls	r3, r3, #1
20003856:	07d2      	lsls	r2, r2, #31
20003858:	085b      	lsrs	r3, r3, #1
2000385a:	4313      	orrs	r3, r2
2000385c:	0019      	movs	r1, r3
2000385e:	b007      	add	sp, #28
20003860:	bc3c      	pop	{r2, r3, r4, r5}
20003862:	4690      	mov	r8, r2
20003864:	4699      	mov	r9, r3
20003866:	46a2      	mov	sl, r4
20003868:	46ab      	mov	fp, r5
2000386a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2000386c:	2300      	movs	r3, #0
2000386e:	2280      	movs	r2, #128	; 0x80
20003870:	469c      	mov	ip, r3
20003872:	0312      	lsls	r2, r2, #12
20003874:	4698      	mov	r8, r3
20003876:	4c03      	ldr	r4, [pc, #12]	; (20003884 <__aeabi_ddiv+0x1e4>)
20003878:	e7e0      	b.n	2000383c <__aeabi_ddiv+0x19c>
2000387a:	2300      	movs	r3, #0
2000387c:	4c01      	ldr	r4, [pc, #4]	; (20003884 <__aeabi_ddiv+0x1e4>)
2000387e:	2200      	movs	r2, #0
20003880:	4698      	mov	r8, r3
20003882:	e7db      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003884:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20003888:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
2000388c:	200073f0 	strdcs	r7, [r0], -r0
20003890:	fffffc0d 			; <UNDEFINED> instruction: 0xfffffc0d
20003894:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>
20003898:	45d9      	cmp	r9, fp
2000389a:	d900      	bls.n	2000389e <__aeabi_ddiv+0x1fe>
2000389c:	e139      	b.n	20003b12 <__aeabi_ddiv+0x472>
2000389e:	d100      	bne.n	200038a2 <__aeabi_ddiv+0x202>
200038a0:	e134      	b.n	20003b0c <__aeabi_ddiv+0x46c>
200038a2:	2300      	movs	r3, #0
200038a4:	4646      	mov	r6, r8
200038a6:	464d      	mov	r5, r9
200038a8:	469a      	mov	sl, r3
200038aa:	3c01      	subs	r4, #1
200038ac:	465b      	mov	r3, fp
200038ae:	0e0a      	lsrs	r2, r1, #24
200038b0:	021b      	lsls	r3, r3, #8
200038b2:	431a      	orrs	r2, r3
200038b4:	020b      	lsls	r3, r1, #8
200038b6:	0c17      	lsrs	r7, r2, #16
200038b8:	9303      	str	r3, [sp, #12]
200038ba:	0413      	lsls	r3, r2, #16
200038bc:	0c1b      	lsrs	r3, r3, #16
200038be:	0039      	movs	r1, r7
200038c0:	0028      	movs	r0, r5
200038c2:	4690      	mov	r8, r2
200038c4:	9301      	str	r3, [sp, #4]
200038c6:	f001 f8d5 	bl	20004a74 <__udivsi3>
200038ca:	0002      	movs	r2, r0
200038cc:	9b01      	ldr	r3, [sp, #4]
200038ce:	4683      	mov	fp, r0
200038d0:	435a      	muls	r2, r3
200038d2:	0028      	movs	r0, r5
200038d4:	0039      	movs	r1, r7
200038d6:	4691      	mov	r9, r2
200038d8:	f001 f952 	bl	20004b80 <__aeabi_uidivmod>
200038dc:	0c35      	lsrs	r5, r6, #16
200038de:	0409      	lsls	r1, r1, #16
200038e0:	430d      	orrs	r5, r1
200038e2:	45a9      	cmp	r9, r5
200038e4:	d90d      	bls.n	20003902 <__aeabi_ddiv+0x262>
200038e6:	465b      	mov	r3, fp
200038e8:	4445      	add	r5, r8
200038ea:	3b01      	subs	r3, #1
200038ec:	45a8      	cmp	r8, r5
200038ee:	d900      	bls.n	200038f2 <__aeabi_ddiv+0x252>
200038f0:	e13a      	b.n	20003b68 <__aeabi_ddiv+0x4c8>
200038f2:	45a9      	cmp	r9, r5
200038f4:	d800      	bhi.n	200038f8 <__aeabi_ddiv+0x258>
200038f6:	e137      	b.n	20003b68 <__aeabi_ddiv+0x4c8>
200038f8:	2302      	movs	r3, #2
200038fa:	425b      	negs	r3, r3
200038fc:	469c      	mov	ip, r3
200038fe:	4445      	add	r5, r8
20003900:	44e3      	add	fp, ip
20003902:	464b      	mov	r3, r9
20003904:	1aeb      	subs	r3, r5, r3
20003906:	0039      	movs	r1, r7
20003908:	0018      	movs	r0, r3
2000390a:	9304      	str	r3, [sp, #16]
2000390c:	f001 f8b2 	bl	20004a74 <__udivsi3>
20003910:	9b01      	ldr	r3, [sp, #4]
20003912:	0005      	movs	r5, r0
20003914:	4343      	muls	r3, r0
20003916:	0039      	movs	r1, r7
20003918:	9804      	ldr	r0, [sp, #16]
2000391a:	4699      	mov	r9, r3
2000391c:	f001 f930 	bl	20004b80 <__aeabi_uidivmod>
20003920:	0433      	lsls	r3, r6, #16
20003922:	0409      	lsls	r1, r1, #16
20003924:	0c1b      	lsrs	r3, r3, #16
20003926:	430b      	orrs	r3, r1
20003928:	4599      	cmp	r9, r3
2000392a:	d909      	bls.n	20003940 <__aeabi_ddiv+0x2a0>
2000392c:	4443      	add	r3, r8
2000392e:	1e6a      	subs	r2, r5, #1
20003930:	4598      	cmp	r8, r3
20003932:	d900      	bls.n	20003936 <__aeabi_ddiv+0x296>
20003934:	e11a      	b.n	20003b6c <__aeabi_ddiv+0x4cc>
20003936:	4599      	cmp	r9, r3
20003938:	d800      	bhi.n	2000393c <__aeabi_ddiv+0x29c>
2000393a:	e117      	b.n	20003b6c <__aeabi_ddiv+0x4cc>
2000393c:	3d02      	subs	r5, #2
2000393e:	4443      	add	r3, r8
20003940:	464a      	mov	r2, r9
20003942:	1a9b      	subs	r3, r3, r2
20003944:	465a      	mov	r2, fp
20003946:	0412      	lsls	r2, r2, #16
20003948:	432a      	orrs	r2, r5
2000394a:	9903      	ldr	r1, [sp, #12]
2000394c:	4693      	mov	fp, r2
2000394e:	0c10      	lsrs	r0, r2, #16
20003950:	0c0a      	lsrs	r2, r1, #16
20003952:	4691      	mov	r9, r2
20003954:	0409      	lsls	r1, r1, #16
20003956:	465a      	mov	r2, fp
20003958:	0c09      	lsrs	r1, r1, #16
2000395a:	464e      	mov	r6, r9
2000395c:	000d      	movs	r5, r1
2000395e:	0412      	lsls	r2, r2, #16
20003960:	0c12      	lsrs	r2, r2, #16
20003962:	4345      	muls	r5, r0
20003964:	9105      	str	r1, [sp, #20]
20003966:	4351      	muls	r1, r2
20003968:	4372      	muls	r2, r6
2000396a:	4370      	muls	r0, r6
2000396c:	1952      	adds	r2, r2, r5
2000396e:	0c0e      	lsrs	r6, r1, #16
20003970:	18b2      	adds	r2, r6, r2
20003972:	4295      	cmp	r5, r2
20003974:	d903      	bls.n	2000397e <__aeabi_ddiv+0x2de>
20003976:	2580      	movs	r5, #128	; 0x80
20003978:	026d      	lsls	r5, r5, #9
2000397a:	46ac      	mov	ip, r5
2000397c:	4460      	add	r0, ip
2000397e:	0c15      	lsrs	r5, r2, #16
20003980:	0409      	lsls	r1, r1, #16
20003982:	0412      	lsls	r2, r2, #16
20003984:	0c09      	lsrs	r1, r1, #16
20003986:	1828      	adds	r0, r5, r0
20003988:	1852      	adds	r2, r2, r1
2000398a:	4283      	cmp	r3, r0
2000398c:	d200      	bcs.n	20003990 <__aeabi_ddiv+0x2f0>
2000398e:	e0ce      	b.n	20003b2e <__aeabi_ddiv+0x48e>
20003990:	d100      	bne.n	20003994 <__aeabi_ddiv+0x2f4>
20003992:	e0c8      	b.n	20003b26 <__aeabi_ddiv+0x486>
20003994:	1a1d      	subs	r5, r3, r0
20003996:	4653      	mov	r3, sl
20003998:	1a9e      	subs	r6, r3, r2
2000399a:	45b2      	cmp	sl, r6
2000399c:	4192      	sbcs	r2, r2
2000399e:	4252      	negs	r2, r2
200039a0:	1aab      	subs	r3, r5, r2
200039a2:	469a      	mov	sl, r3
200039a4:	4598      	cmp	r8, r3
200039a6:	d100      	bne.n	200039aa <__aeabi_ddiv+0x30a>
200039a8:	e117      	b.n	20003bda <__aeabi_ddiv+0x53a>
200039aa:	0039      	movs	r1, r7
200039ac:	0018      	movs	r0, r3
200039ae:	f001 f861 	bl	20004a74 <__udivsi3>
200039b2:	9b01      	ldr	r3, [sp, #4]
200039b4:	0005      	movs	r5, r0
200039b6:	4343      	muls	r3, r0
200039b8:	0039      	movs	r1, r7
200039ba:	4650      	mov	r0, sl
200039bc:	9304      	str	r3, [sp, #16]
200039be:	f001 f8df 	bl	20004b80 <__aeabi_uidivmod>
200039c2:	9804      	ldr	r0, [sp, #16]
200039c4:	040b      	lsls	r3, r1, #16
200039c6:	0c31      	lsrs	r1, r6, #16
200039c8:	4319      	orrs	r1, r3
200039ca:	4288      	cmp	r0, r1
200039cc:	d909      	bls.n	200039e2 <__aeabi_ddiv+0x342>
200039ce:	4441      	add	r1, r8
200039d0:	1e6b      	subs	r3, r5, #1
200039d2:	4588      	cmp	r8, r1
200039d4:	d900      	bls.n	200039d8 <__aeabi_ddiv+0x338>
200039d6:	e107      	b.n	20003be8 <__aeabi_ddiv+0x548>
200039d8:	4288      	cmp	r0, r1
200039da:	d800      	bhi.n	200039de <__aeabi_ddiv+0x33e>
200039dc:	e104      	b.n	20003be8 <__aeabi_ddiv+0x548>
200039de:	3d02      	subs	r5, #2
200039e0:	4441      	add	r1, r8
200039e2:	9b04      	ldr	r3, [sp, #16]
200039e4:	1acb      	subs	r3, r1, r3
200039e6:	0018      	movs	r0, r3
200039e8:	0039      	movs	r1, r7
200039ea:	9304      	str	r3, [sp, #16]
200039ec:	f001 f842 	bl	20004a74 <__udivsi3>
200039f0:	9b01      	ldr	r3, [sp, #4]
200039f2:	4682      	mov	sl, r0
200039f4:	4343      	muls	r3, r0
200039f6:	0039      	movs	r1, r7
200039f8:	9804      	ldr	r0, [sp, #16]
200039fa:	9301      	str	r3, [sp, #4]
200039fc:	f001 f8c0 	bl	20004b80 <__aeabi_uidivmod>
20003a00:	9801      	ldr	r0, [sp, #4]
20003a02:	040b      	lsls	r3, r1, #16
20003a04:	0431      	lsls	r1, r6, #16
20003a06:	0c09      	lsrs	r1, r1, #16
20003a08:	4319      	orrs	r1, r3
20003a0a:	4288      	cmp	r0, r1
20003a0c:	d90d      	bls.n	20003a2a <__aeabi_ddiv+0x38a>
20003a0e:	4653      	mov	r3, sl
20003a10:	4441      	add	r1, r8
20003a12:	3b01      	subs	r3, #1
20003a14:	4588      	cmp	r8, r1
20003a16:	d900      	bls.n	20003a1a <__aeabi_ddiv+0x37a>
20003a18:	e0e8      	b.n	20003bec <__aeabi_ddiv+0x54c>
20003a1a:	4288      	cmp	r0, r1
20003a1c:	d800      	bhi.n	20003a20 <__aeabi_ddiv+0x380>
20003a1e:	e0e5      	b.n	20003bec <__aeabi_ddiv+0x54c>
20003a20:	2302      	movs	r3, #2
20003a22:	425b      	negs	r3, r3
20003a24:	469c      	mov	ip, r3
20003a26:	4441      	add	r1, r8
20003a28:	44e2      	add	sl, ip
20003a2a:	9b01      	ldr	r3, [sp, #4]
20003a2c:	042d      	lsls	r5, r5, #16
20003a2e:	1ace      	subs	r6, r1, r3
20003a30:	4651      	mov	r1, sl
20003a32:	4329      	orrs	r1, r5
20003a34:	9d05      	ldr	r5, [sp, #20]
20003a36:	464f      	mov	r7, r9
20003a38:	002a      	movs	r2, r5
20003a3a:	040b      	lsls	r3, r1, #16
20003a3c:	0c08      	lsrs	r0, r1, #16
20003a3e:	0c1b      	lsrs	r3, r3, #16
20003a40:	435a      	muls	r2, r3
20003a42:	4345      	muls	r5, r0
20003a44:	437b      	muls	r3, r7
20003a46:	4378      	muls	r0, r7
20003a48:	195b      	adds	r3, r3, r5
20003a4a:	0c17      	lsrs	r7, r2, #16
20003a4c:	18fb      	adds	r3, r7, r3
20003a4e:	429d      	cmp	r5, r3
20003a50:	d903      	bls.n	20003a5a <__aeabi_ddiv+0x3ba>
20003a52:	2580      	movs	r5, #128	; 0x80
20003a54:	026d      	lsls	r5, r5, #9
20003a56:	46ac      	mov	ip, r5
20003a58:	4460      	add	r0, ip
20003a5a:	0c1d      	lsrs	r5, r3, #16
20003a5c:	0412      	lsls	r2, r2, #16
20003a5e:	041b      	lsls	r3, r3, #16
20003a60:	0c12      	lsrs	r2, r2, #16
20003a62:	1828      	adds	r0, r5, r0
20003a64:	189b      	adds	r3, r3, r2
20003a66:	4286      	cmp	r6, r0
20003a68:	d200      	bcs.n	20003a6c <__aeabi_ddiv+0x3cc>
20003a6a:	e093      	b.n	20003b94 <__aeabi_ddiv+0x4f4>
20003a6c:	d100      	bne.n	20003a70 <__aeabi_ddiv+0x3d0>
20003a6e:	e08e      	b.n	20003b8e <__aeabi_ddiv+0x4ee>
20003a70:	2301      	movs	r3, #1
20003a72:	4319      	orrs	r1, r3
20003a74:	4ba0      	ldr	r3, [pc, #640]	; (20003cf8 <__aeabi_ddiv+0x658>)
20003a76:	18e3      	adds	r3, r4, r3
20003a78:	2b00      	cmp	r3, #0
20003a7a:	dc00      	bgt.n	20003a7e <__aeabi_ddiv+0x3de>
20003a7c:	e099      	b.n	20003bb2 <__aeabi_ddiv+0x512>
20003a7e:	074a      	lsls	r2, r1, #29
20003a80:	d000      	beq.n	20003a84 <__aeabi_ddiv+0x3e4>
20003a82:	e09e      	b.n	20003bc2 <__aeabi_ddiv+0x522>
20003a84:	465a      	mov	r2, fp
20003a86:	01d2      	lsls	r2, r2, #7
20003a88:	d506      	bpl.n	20003a98 <__aeabi_ddiv+0x3f8>
20003a8a:	465a      	mov	r2, fp
20003a8c:	4b9b      	ldr	r3, [pc, #620]	; (20003cfc <__aeabi_ddiv+0x65c>)
20003a8e:	401a      	ands	r2, r3
20003a90:	2380      	movs	r3, #128	; 0x80
20003a92:	4693      	mov	fp, r2
20003a94:	00db      	lsls	r3, r3, #3
20003a96:	18e3      	adds	r3, r4, r3
20003a98:	4a99      	ldr	r2, [pc, #612]	; (20003d00 <__aeabi_ddiv+0x660>)
20003a9a:	4293      	cmp	r3, r2
20003a9c:	dd68      	ble.n	20003b70 <__aeabi_ddiv+0x4d0>
20003a9e:	2301      	movs	r3, #1
20003aa0:	9a02      	ldr	r2, [sp, #8]
20003aa2:	4c98      	ldr	r4, [pc, #608]	; (20003d04 <__aeabi_ddiv+0x664>)
20003aa4:	401a      	ands	r2, r3
20003aa6:	2300      	movs	r3, #0
20003aa8:	4694      	mov	ip, r2
20003aaa:	4698      	mov	r8, r3
20003aac:	2200      	movs	r2, #0
20003aae:	e6c5      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003ab0:	2280      	movs	r2, #128	; 0x80
20003ab2:	464b      	mov	r3, r9
20003ab4:	0312      	lsls	r2, r2, #12
20003ab6:	4213      	tst	r3, r2
20003ab8:	d00a      	beq.n	20003ad0 <__aeabi_ddiv+0x430>
20003aba:	465b      	mov	r3, fp
20003abc:	4213      	tst	r3, r2
20003abe:	d106      	bne.n	20003ace <__aeabi_ddiv+0x42e>
20003ac0:	431a      	orrs	r2, r3
20003ac2:	0312      	lsls	r2, r2, #12
20003ac4:	0b12      	lsrs	r2, r2, #12
20003ac6:	46ac      	mov	ip, r5
20003ac8:	4688      	mov	r8, r1
20003aca:	4c8e      	ldr	r4, [pc, #568]	; (20003d04 <__aeabi_ddiv+0x664>)
20003acc:	e6b6      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003ace:	464b      	mov	r3, r9
20003ad0:	431a      	orrs	r2, r3
20003ad2:	0312      	lsls	r2, r2, #12
20003ad4:	0b12      	lsrs	r2, r2, #12
20003ad6:	46bc      	mov	ip, r7
20003ad8:	4c8a      	ldr	r4, [pc, #552]	; (20003d04 <__aeabi_ddiv+0x664>)
20003ada:	e6af      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003adc:	0003      	movs	r3, r0
20003ade:	465a      	mov	r2, fp
20003ae0:	3b28      	subs	r3, #40	; 0x28
20003ae2:	409a      	lsls	r2, r3
20003ae4:	2300      	movs	r3, #0
20003ae6:	4691      	mov	r9, r2
20003ae8:	4698      	mov	r8, r3
20003aea:	e657      	b.n	2000379c <__aeabi_ddiv+0xfc>
20003aec:	4658      	mov	r0, fp
20003aee:	f7ff fd7b 	bl	200035e8 <__clzsi2>
20003af2:	3020      	adds	r0, #32
20003af4:	e640      	b.n	20003778 <__aeabi_ddiv+0xd8>
20003af6:	0003      	movs	r3, r0
20003af8:	4652      	mov	r2, sl
20003afa:	3b28      	subs	r3, #40	; 0x28
20003afc:	409a      	lsls	r2, r3
20003afe:	2100      	movs	r1, #0
20003b00:	4693      	mov	fp, r2
20003b02:	e677      	b.n	200037f4 <__aeabi_ddiv+0x154>
20003b04:	f7ff fd70 	bl	200035e8 <__clzsi2>
20003b08:	3020      	adds	r0, #32
20003b0a:	e65f      	b.n	200037cc <__aeabi_ddiv+0x12c>
20003b0c:	4588      	cmp	r8, r1
20003b0e:	d200      	bcs.n	20003b12 <__aeabi_ddiv+0x472>
20003b10:	e6c7      	b.n	200038a2 <__aeabi_ddiv+0x202>
20003b12:	464b      	mov	r3, r9
20003b14:	07de      	lsls	r6, r3, #31
20003b16:	085d      	lsrs	r5, r3, #1
20003b18:	4643      	mov	r3, r8
20003b1a:	085b      	lsrs	r3, r3, #1
20003b1c:	431e      	orrs	r6, r3
20003b1e:	4643      	mov	r3, r8
20003b20:	07db      	lsls	r3, r3, #31
20003b22:	469a      	mov	sl, r3
20003b24:	e6c2      	b.n	200038ac <__aeabi_ddiv+0x20c>
20003b26:	2500      	movs	r5, #0
20003b28:	4592      	cmp	sl, r2
20003b2a:	d300      	bcc.n	20003b2e <__aeabi_ddiv+0x48e>
20003b2c:	e733      	b.n	20003996 <__aeabi_ddiv+0x2f6>
20003b2e:	9e03      	ldr	r6, [sp, #12]
20003b30:	4659      	mov	r1, fp
20003b32:	46b4      	mov	ip, r6
20003b34:	44e2      	add	sl, ip
20003b36:	45b2      	cmp	sl, r6
20003b38:	41ad      	sbcs	r5, r5
20003b3a:	426d      	negs	r5, r5
20003b3c:	4445      	add	r5, r8
20003b3e:	18eb      	adds	r3, r5, r3
20003b40:	3901      	subs	r1, #1
20003b42:	4598      	cmp	r8, r3
20003b44:	d207      	bcs.n	20003b56 <__aeabi_ddiv+0x4b6>
20003b46:	4298      	cmp	r0, r3
20003b48:	d900      	bls.n	20003b4c <__aeabi_ddiv+0x4ac>
20003b4a:	e07f      	b.n	20003c4c <__aeabi_ddiv+0x5ac>
20003b4c:	d100      	bne.n	20003b50 <__aeabi_ddiv+0x4b0>
20003b4e:	e0bc      	b.n	20003cca <__aeabi_ddiv+0x62a>
20003b50:	1a1d      	subs	r5, r3, r0
20003b52:	468b      	mov	fp, r1
20003b54:	e71f      	b.n	20003996 <__aeabi_ddiv+0x2f6>
20003b56:	4598      	cmp	r8, r3
20003b58:	d1fa      	bne.n	20003b50 <__aeabi_ddiv+0x4b0>
20003b5a:	9d03      	ldr	r5, [sp, #12]
20003b5c:	4555      	cmp	r5, sl
20003b5e:	d9f2      	bls.n	20003b46 <__aeabi_ddiv+0x4a6>
20003b60:	4643      	mov	r3, r8
20003b62:	468b      	mov	fp, r1
20003b64:	1a1d      	subs	r5, r3, r0
20003b66:	e716      	b.n	20003996 <__aeabi_ddiv+0x2f6>
20003b68:	469b      	mov	fp, r3
20003b6a:	e6ca      	b.n	20003902 <__aeabi_ddiv+0x262>
20003b6c:	0015      	movs	r5, r2
20003b6e:	e6e7      	b.n	20003940 <__aeabi_ddiv+0x2a0>
20003b70:	465a      	mov	r2, fp
20003b72:	08c9      	lsrs	r1, r1, #3
20003b74:	0752      	lsls	r2, r2, #29
20003b76:	430a      	orrs	r2, r1
20003b78:	055b      	lsls	r3, r3, #21
20003b7a:	4690      	mov	r8, r2
20003b7c:	0d5c      	lsrs	r4, r3, #21
20003b7e:	465a      	mov	r2, fp
20003b80:	2301      	movs	r3, #1
20003b82:	9902      	ldr	r1, [sp, #8]
20003b84:	0252      	lsls	r2, r2, #9
20003b86:	4019      	ands	r1, r3
20003b88:	0b12      	lsrs	r2, r2, #12
20003b8a:	468c      	mov	ip, r1
20003b8c:	e656      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003b8e:	2b00      	cmp	r3, #0
20003b90:	d100      	bne.n	20003b94 <__aeabi_ddiv+0x4f4>
20003b92:	e76f      	b.n	20003a74 <__aeabi_ddiv+0x3d4>
20003b94:	4446      	add	r6, r8
20003b96:	1e4a      	subs	r2, r1, #1
20003b98:	45b0      	cmp	r8, r6
20003b9a:	d929      	bls.n	20003bf0 <__aeabi_ddiv+0x550>
20003b9c:	0011      	movs	r1, r2
20003b9e:	4286      	cmp	r6, r0
20003ba0:	d000      	beq.n	20003ba4 <__aeabi_ddiv+0x504>
20003ba2:	e765      	b.n	20003a70 <__aeabi_ddiv+0x3d0>
20003ba4:	9a03      	ldr	r2, [sp, #12]
20003ba6:	4293      	cmp	r3, r2
20003ba8:	d000      	beq.n	20003bac <__aeabi_ddiv+0x50c>
20003baa:	e761      	b.n	20003a70 <__aeabi_ddiv+0x3d0>
20003bac:	e762      	b.n	20003a74 <__aeabi_ddiv+0x3d4>
20003bae:	2101      	movs	r1, #1
20003bb0:	4249      	negs	r1, r1
20003bb2:	2001      	movs	r0, #1
20003bb4:	1ac2      	subs	r2, r0, r3
20003bb6:	2a38      	cmp	r2, #56	; 0x38
20003bb8:	dd21      	ble.n	20003bfe <__aeabi_ddiv+0x55e>
20003bba:	9b02      	ldr	r3, [sp, #8]
20003bbc:	4003      	ands	r3, r0
20003bbe:	469c      	mov	ip, r3
20003bc0:	e638      	b.n	20003834 <__aeabi_ddiv+0x194>
20003bc2:	220f      	movs	r2, #15
20003bc4:	400a      	ands	r2, r1
20003bc6:	2a04      	cmp	r2, #4
20003bc8:	d100      	bne.n	20003bcc <__aeabi_ddiv+0x52c>
20003bca:	e75b      	b.n	20003a84 <__aeabi_ddiv+0x3e4>
20003bcc:	000a      	movs	r2, r1
20003bce:	1d11      	adds	r1, r2, #4
20003bd0:	4291      	cmp	r1, r2
20003bd2:	4192      	sbcs	r2, r2
20003bd4:	4252      	negs	r2, r2
20003bd6:	4493      	add	fp, r2
20003bd8:	e754      	b.n	20003a84 <__aeabi_ddiv+0x3e4>
20003bda:	4b47      	ldr	r3, [pc, #284]	; (20003cf8 <__aeabi_ddiv+0x658>)
20003bdc:	18e3      	adds	r3, r4, r3
20003bde:	2b00      	cmp	r3, #0
20003be0:	dde5      	ble.n	20003bae <__aeabi_ddiv+0x50e>
20003be2:	2201      	movs	r2, #1
20003be4:	4252      	negs	r2, r2
20003be6:	e7f2      	b.n	20003bce <__aeabi_ddiv+0x52e>
20003be8:	001d      	movs	r5, r3
20003bea:	e6fa      	b.n	200039e2 <__aeabi_ddiv+0x342>
20003bec:	469a      	mov	sl, r3
20003bee:	e71c      	b.n	20003a2a <__aeabi_ddiv+0x38a>
20003bf0:	42b0      	cmp	r0, r6
20003bf2:	d839      	bhi.n	20003c68 <__aeabi_ddiv+0x5c8>
20003bf4:	d06e      	beq.n	20003cd4 <__aeabi_ddiv+0x634>
20003bf6:	0011      	movs	r1, r2
20003bf8:	e73a      	b.n	20003a70 <__aeabi_ddiv+0x3d0>
20003bfa:	9302      	str	r3, [sp, #8]
20003bfc:	e73a      	b.n	20003a74 <__aeabi_ddiv+0x3d4>
20003bfe:	2a1f      	cmp	r2, #31
20003c00:	dc3c      	bgt.n	20003c7c <__aeabi_ddiv+0x5dc>
20003c02:	2320      	movs	r3, #32
20003c04:	1a9b      	subs	r3, r3, r2
20003c06:	000c      	movs	r4, r1
20003c08:	4658      	mov	r0, fp
20003c0a:	4099      	lsls	r1, r3
20003c0c:	4098      	lsls	r0, r3
20003c0e:	1e4b      	subs	r3, r1, #1
20003c10:	4199      	sbcs	r1, r3
20003c12:	465b      	mov	r3, fp
20003c14:	40d4      	lsrs	r4, r2
20003c16:	40d3      	lsrs	r3, r2
20003c18:	4320      	orrs	r0, r4
20003c1a:	4308      	orrs	r0, r1
20003c1c:	001a      	movs	r2, r3
20003c1e:	0743      	lsls	r3, r0, #29
20003c20:	d009      	beq.n	20003c36 <__aeabi_ddiv+0x596>
20003c22:	230f      	movs	r3, #15
20003c24:	4003      	ands	r3, r0
20003c26:	2b04      	cmp	r3, #4
20003c28:	d005      	beq.n	20003c36 <__aeabi_ddiv+0x596>
20003c2a:	0001      	movs	r1, r0
20003c2c:	1d08      	adds	r0, r1, #4
20003c2e:	4288      	cmp	r0, r1
20003c30:	419b      	sbcs	r3, r3
20003c32:	425b      	negs	r3, r3
20003c34:	18d2      	adds	r2, r2, r3
20003c36:	0213      	lsls	r3, r2, #8
20003c38:	d53a      	bpl.n	20003cb0 <__aeabi_ddiv+0x610>
20003c3a:	2301      	movs	r3, #1
20003c3c:	9a02      	ldr	r2, [sp, #8]
20003c3e:	2401      	movs	r4, #1
20003c40:	401a      	ands	r2, r3
20003c42:	2300      	movs	r3, #0
20003c44:	4694      	mov	ip, r2
20003c46:	4698      	mov	r8, r3
20003c48:	2200      	movs	r2, #0
20003c4a:	e5f7      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003c4c:	2102      	movs	r1, #2
20003c4e:	4249      	negs	r1, r1
20003c50:	468c      	mov	ip, r1
20003c52:	9d03      	ldr	r5, [sp, #12]
20003c54:	44e3      	add	fp, ip
20003c56:	46ac      	mov	ip, r5
20003c58:	44e2      	add	sl, ip
20003c5a:	45aa      	cmp	sl, r5
20003c5c:	41ad      	sbcs	r5, r5
20003c5e:	426d      	negs	r5, r5
20003c60:	4445      	add	r5, r8
20003c62:	18ed      	adds	r5, r5, r3
20003c64:	1a2d      	subs	r5, r5, r0
20003c66:	e696      	b.n	20003996 <__aeabi_ddiv+0x2f6>
20003c68:	1e8a      	subs	r2, r1, #2
20003c6a:	9903      	ldr	r1, [sp, #12]
20003c6c:	004d      	lsls	r5, r1, #1
20003c6e:	428d      	cmp	r5, r1
20003c70:	4189      	sbcs	r1, r1
20003c72:	4249      	negs	r1, r1
20003c74:	4441      	add	r1, r8
20003c76:	1876      	adds	r6, r6, r1
20003c78:	9503      	str	r5, [sp, #12]
20003c7a:	e78f      	b.n	20003b9c <__aeabi_ddiv+0x4fc>
20003c7c:	201f      	movs	r0, #31
20003c7e:	4240      	negs	r0, r0
20003c80:	1ac3      	subs	r3, r0, r3
20003c82:	4658      	mov	r0, fp
20003c84:	40d8      	lsrs	r0, r3
20003c86:	0003      	movs	r3, r0
20003c88:	2a20      	cmp	r2, #32
20003c8a:	d028      	beq.n	20003cde <__aeabi_ddiv+0x63e>
20003c8c:	2040      	movs	r0, #64	; 0x40
20003c8e:	465d      	mov	r5, fp
20003c90:	1a82      	subs	r2, r0, r2
20003c92:	4095      	lsls	r5, r2
20003c94:	4329      	orrs	r1, r5
20003c96:	1e4a      	subs	r2, r1, #1
20003c98:	4191      	sbcs	r1, r2
20003c9a:	4319      	orrs	r1, r3
20003c9c:	2307      	movs	r3, #7
20003c9e:	2200      	movs	r2, #0
20003ca0:	400b      	ands	r3, r1
20003ca2:	d009      	beq.n	20003cb8 <__aeabi_ddiv+0x618>
20003ca4:	230f      	movs	r3, #15
20003ca6:	2200      	movs	r2, #0
20003ca8:	400b      	ands	r3, r1
20003caa:	0008      	movs	r0, r1
20003cac:	2b04      	cmp	r3, #4
20003cae:	d1bd      	bne.n	20003c2c <__aeabi_ddiv+0x58c>
20003cb0:	0001      	movs	r1, r0
20003cb2:	0753      	lsls	r3, r2, #29
20003cb4:	0252      	lsls	r2, r2, #9
20003cb6:	0b12      	lsrs	r2, r2, #12
20003cb8:	08c9      	lsrs	r1, r1, #3
20003cba:	4319      	orrs	r1, r3
20003cbc:	2301      	movs	r3, #1
20003cbe:	4688      	mov	r8, r1
20003cc0:	9902      	ldr	r1, [sp, #8]
20003cc2:	2400      	movs	r4, #0
20003cc4:	4019      	ands	r1, r3
20003cc6:	468c      	mov	ip, r1
20003cc8:	e5b8      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003cca:	4552      	cmp	r2, sl
20003ccc:	d8be      	bhi.n	20003c4c <__aeabi_ddiv+0x5ac>
20003cce:	468b      	mov	fp, r1
20003cd0:	2500      	movs	r5, #0
20003cd2:	e660      	b.n	20003996 <__aeabi_ddiv+0x2f6>
20003cd4:	9d03      	ldr	r5, [sp, #12]
20003cd6:	429d      	cmp	r5, r3
20003cd8:	d3c6      	bcc.n	20003c68 <__aeabi_ddiv+0x5c8>
20003cda:	0011      	movs	r1, r2
20003cdc:	e762      	b.n	20003ba4 <__aeabi_ddiv+0x504>
20003cde:	2500      	movs	r5, #0
20003ce0:	e7d8      	b.n	20003c94 <__aeabi_ddiv+0x5f4>
20003ce2:	2280      	movs	r2, #128	; 0x80
20003ce4:	465b      	mov	r3, fp
20003ce6:	0312      	lsls	r2, r2, #12
20003ce8:	431a      	orrs	r2, r3
20003cea:	9b01      	ldr	r3, [sp, #4]
20003cec:	0312      	lsls	r2, r2, #12
20003cee:	0b12      	lsrs	r2, r2, #12
20003cf0:	469c      	mov	ip, r3
20003cf2:	4688      	mov	r8, r1
20003cf4:	4c03      	ldr	r4, [pc, #12]	; (20003d04 <__aeabi_ddiv+0x664>)
20003cf6:	e5a1      	b.n	2000383c <__aeabi_ddiv+0x19c>
20003cf8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20003cfc:	feffffff 	mrc2	15, 7, pc, cr15, cr15, {7}
20003d00:	000007fe 	strdeq	r0, [r0], -lr
20003d04:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003d08 <__eqdf2>:
20003d08:	b5f0      	push	{r4, r5, r6, r7, lr}
20003d0a:	464f      	mov	r7, r9
20003d0c:	4646      	mov	r6, r8
20003d0e:	46d6      	mov	lr, sl
20003d10:	005c      	lsls	r4, r3, #1
20003d12:	b5c0      	push	{r6, r7, lr}
20003d14:	031f      	lsls	r7, r3, #12
20003d16:	0fdb      	lsrs	r3, r3, #31
20003d18:	469a      	mov	sl, r3
20003d1a:	4b17      	ldr	r3, [pc, #92]	; (20003d78 <__eqdf2+0x70>)
20003d1c:	030e      	lsls	r6, r1, #12
20003d1e:	004d      	lsls	r5, r1, #1
20003d20:	4684      	mov	ip, r0
20003d22:	4680      	mov	r8, r0
20003d24:	0b36      	lsrs	r6, r6, #12
20003d26:	0d6d      	lsrs	r5, r5, #21
20003d28:	0fc9      	lsrs	r1, r1, #31
20003d2a:	4691      	mov	r9, r2
20003d2c:	0b3f      	lsrs	r7, r7, #12
20003d2e:	0d64      	lsrs	r4, r4, #21
20003d30:	2001      	movs	r0, #1
20003d32:	429d      	cmp	r5, r3
20003d34:	d008      	beq.n	20003d48 <__eqdf2+0x40>
20003d36:	429c      	cmp	r4, r3
20003d38:	d001      	beq.n	20003d3e <__eqdf2+0x36>
20003d3a:	42a5      	cmp	r5, r4
20003d3c:	d00b      	beq.n	20003d56 <__eqdf2+0x4e>
20003d3e:	bc1c      	pop	{r2, r3, r4}
20003d40:	4690      	mov	r8, r2
20003d42:	4699      	mov	r9, r3
20003d44:	46a2      	mov	sl, r4
20003d46:	bdf0      	pop	{r4, r5, r6, r7, pc}
20003d48:	4663      	mov	r3, ip
20003d4a:	4333      	orrs	r3, r6
20003d4c:	d1f7      	bne.n	20003d3e <__eqdf2+0x36>
20003d4e:	42ac      	cmp	r4, r5
20003d50:	d1f5      	bne.n	20003d3e <__eqdf2+0x36>
20003d52:	433a      	orrs	r2, r7
20003d54:	d1f3      	bne.n	20003d3e <__eqdf2+0x36>
20003d56:	2001      	movs	r0, #1
20003d58:	42be      	cmp	r6, r7
20003d5a:	d1f0      	bne.n	20003d3e <__eqdf2+0x36>
20003d5c:	45c8      	cmp	r8, r9
20003d5e:	d1ee      	bne.n	20003d3e <__eqdf2+0x36>
20003d60:	4551      	cmp	r1, sl
20003d62:	d007      	beq.n	20003d74 <__eqdf2+0x6c>
20003d64:	2d00      	cmp	r5, #0
20003d66:	d1ea      	bne.n	20003d3e <__eqdf2+0x36>
20003d68:	4663      	mov	r3, ip
20003d6a:	431e      	orrs	r6, r3
20003d6c:	0030      	movs	r0, r6
20003d6e:	1e46      	subs	r6, r0, #1
20003d70:	41b0      	sbcs	r0, r6
20003d72:	e7e4      	b.n	20003d3e <__eqdf2+0x36>
20003d74:	2000      	movs	r0, #0
20003d76:	e7e2      	b.n	20003d3e <__eqdf2+0x36>
20003d78:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003d7c <__gedf2>:
20003d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
20003d7e:	4645      	mov	r5, r8
20003d80:	46de      	mov	lr, fp
20003d82:	4657      	mov	r7, sl
20003d84:	464e      	mov	r6, r9
20003d86:	b5e0      	push	{r5, r6, r7, lr}
20003d88:	031f      	lsls	r7, r3, #12
20003d8a:	0b3d      	lsrs	r5, r7, #12
20003d8c:	4f2c      	ldr	r7, [pc, #176]	; (20003e40 <__gedf2+0xc4>)
20003d8e:	030e      	lsls	r6, r1, #12
20003d90:	004c      	lsls	r4, r1, #1
20003d92:	46ab      	mov	fp, r5
20003d94:	005d      	lsls	r5, r3, #1
20003d96:	4684      	mov	ip, r0
20003d98:	0b36      	lsrs	r6, r6, #12
20003d9a:	0d64      	lsrs	r4, r4, #21
20003d9c:	0fc9      	lsrs	r1, r1, #31
20003d9e:	4690      	mov	r8, r2
20003da0:	0d6d      	lsrs	r5, r5, #21
20003da2:	0fdb      	lsrs	r3, r3, #31
20003da4:	42bc      	cmp	r4, r7
20003da6:	d02a      	beq.n	20003dfe <__gedf2+0x82>
20003da8:	4f25      	ldr	r7, [pc, #148]	; (20003e40 <__gedf2+0xc4>)
20003daa:	42bd      	cmp	r5, r7
20003dac:	d02d      	beq.n	20003e0a <__gedf2+0x8e>
20003dae:	2c00      	cmp	r4, #0
20003db0:	d10f      	bne.n	20003dd2 <__gedf2+0x56>
20003db2:	4330      	orrs	r0, r6
20003db4:	0007      	movs	r7, r0
20003db6:	4681      	mov	r9, r0
20003db8:	4278      	negs	r0, r7
20003dba:	4178      	adcs	r0, r7
20003dbc:	b2c0      	uxtb	r0, r0
20003dbe:	2d00      	cmp	r5, #0
20003dc0:	d117      	bne.n	20003df2 <__gedf2+0x76>
20003dc2:	465f      	mov	r7, fp
20003dc4:	433a      	orrs	r2, r7
20003dc6:	d114      	bne.n	20003df2 <__gedf2+0x76>
20003dc8:	464b      	mov	r3, r9
20003dca:	2000      	movs	r0, #0
20003dcc:	2b00      	cmp	r3, #0
20003dce:	d00a      	beq.n	20003de6 <__gedf2+0x6a>
20003dd0:	e006      	b.n	20003de0 <__gedf2+0x64>
20003dd2:	2d00      	cmp	r5, #0
20003dd4:	d102      	bne.n	20003ddc <__gedf2+0x60>
20003dd6:	4658      	mov	r0, fp
20003dd8:	4302      	orrs	r2, r0
20003dda:	d001      	beq.n	20003de0 <__gedf2+0x64>
20003ddc:	4299      	cmp	r1, r3
20003dde:	d018      	beq.n	20003e12 <__gedf2+0x96>
20003de0:	4248      	negs	r0, r1
20003de2:	2101      	movs	r1, #1
20003de4:	4308      	orrs	r0, r1
20003de6:	bc3c      	pop	{r2, r3, r4, r5}
20003de8:	4690      	mov	r8, r2
20003dea:	4699      	mov	r9, r3
20003dec:	46a2      	mov	sl, r4
20003dee:	46ab      	mov	fp, r5
20003df0:	bdf0      	pop	{r4, r5, r6, r7, pc}
20003df2:	2800      	cmp	r0, #0
20003df4:	d0f2      	beq.n	20003ddc <__gedf2+0x60>
20003df6:	2001      	movs	r0, #1
20003df8:	3b01      	subs	r3, #1
20003dfa:	4318      	orrs	r0, r3
20003dfc:	e7f3      	b.n	20003de6 <__gedf2+0x6a>
20003dfe:	0037      	movs	r7, r6
20003e00:	4307      	orrs	r7, r0
20003e02:	d0d1      	beq.n	20003da8 <__gedf2+0x2c>
20003e04:	2002      	movs	r0, #2
20003e06:	4240      	negs	r0, r0
20003e08:	e7ed      	b.n	20003de6 <__gedf2+0x6a>
20003e0a:	465f      	mov	r7, fp
20003e0c:	4317      	orrs	r7, r2
20003e0e:	d0ce      	beq.n	20003dae <__gedf2+0x32>
20003e10:	e7f8      	b.n	20003e04 <__gedf2+0x88>
20003e12:	42ac      	cmp	r4, r5
20003e14:	dce4      	bgt.n	20003de0 <__gedf2+0x64>
20003e16:	da03      	bge.n	20003e20 <__gedf2+0xa4>
20003e18:	1e48      	subs	r0, r1, #1
20003e1a:	2101      	movs	r1, #1
20003e1c:	4308      	orrs	r0, r1
20003e1e:	e7e2      	b.n	20003de6 <__gedf2+0x6a>
20003e20:	455e      	cmp	r6, fp
20003e22:	d8dd      	bhi.n	20003de0 <__gedf2+0x64>
20003e24:	d006      	beq.n	20003e34 <__gedf2+0xb8>
20003e26:	2000      	movs	r0, #0
20003e28:	455e      	cmp	r6, fp
20003e2a:	d2dc      	bcs.n	20003de6 <__gedf2+0x6a>
20003e2c:	2301      	movs	r3, #1
20003e2e:	1e48      	subs	r0, r1, #1
20003e30:	4318      	orrs	r0, r3
20003e32:	e7d8      	b.n	20003de6 <__gedf2+0x6a>
20003e34:	45c4      	cmp	ip, r8
20003e36:	d8d3      	bhi.n	20003de0 <__gedf2+0x64>
20003e38:	2000      	movs	r0, #0
20003e3a:	45c4      	cmp	ip, r8
20003e3c:	d3f6      	bcc.n	20003e2c <__gedf2+0xb0>
20003e3e:	e7d2      	b.n	20003de6 <__gedf2+0x6a>
20003e40:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003e44 <__ledf2>:
20003e44:	b5f0      	push	{r4, r5, r6, r7, lr}
20003e46:	464e      	mov	r6, r9
20003e48:	4645      	mov	r5, r8
20003e4a:	46de      	mov	lr, fp
20003e4c:	4657      	mov	r7, sl
20003e4e:	005c      	lsls	r4, r3, #1
20003e50:	b5e0      	push	{r5, r6, r7, lr}
20003e52:	031f      	lsls	r7, r3, #12
20003e54:	0fdb      	lsrs	r3, r3, #31
20003e56:	4699      	mov	r9, r3
20003e58:	4b2a      	ldr	r3, [pc, #168]	; (20003f04 <__ledf2+0xc0>)
20003e5a:	030e      	lsls	r6, r1, #12
20003e5c:	004d      	lsls	r5, r1, #1
20003e5e:	0fc9      	lsrs	r1, r1, #31
20003e60:	4684      	mov	ip, r0
20003e62:	0b36      	lsrs	r6, r6, #12
20003e64:	0d6d      	lsrs	r5, r5, #21
20003e66:	468b      	mov	fp, r1
20003e68:	4690      	mov	r8, r2
20003e6a:	0b3f      	lsrs	r7, r7, #12
20003e6c:	0d64      	lsrs	r4, r4, #21
20003e6e:	429d      	cmp	r5, r3
20003e70:	d020      	beq.n	20003eb4 <__ledf2+0x70>
20003e72:	4b24      	ldr	r3, [pc, #144]	; (20003f04 <__ledf2+0xc0>)
20003e74:	429c      	cmp	r4, r3
20003e76:	d022      	beq.n	20003ebe <__ledf2+0x7a>
20003e78:	2d00      	cmp	r5, #0
20003e7a:	d112      	bne.n	20003ea2 <__ledf2+0x5e>
20003e7c:	4330      	orrs	r0, r6
20003e7e:	4243      	negs	r3, r0
20003e80:	4143      	adcs	r3, r0
20003e82:	b2db      	uxtb	r3, r3
20003e84:	2c00      	cmp	r4, #0
20003e86:	d01f      	beq.n	20003ec8 <__ledf2+0x84>
20003e88:	2b00      	cmp	r3, #0
20003e8a:	d00c      	beq.n	20003ea6 <__ledf2+0x62>
20003e8c:	464b      	mov	r3, r9
20003e8e:	2001      	movs	r0, #1
20003e90:	3b01      	subs	r3, #1
20003e92:	4303      	orrs	r3, r0
20003e94:	0018      	movs	r0, r3
20003e96:	bc3c      	pop	{r2, r3, r4, r5}
20003e98:	4690      	mov	r8, r2
20003e9a:	4699      	mov	r9, r3
20003e9c:	46a2      	mov	sl, r4
20003e9e:	46ab      	mov	fp, r5
20003ea0:	bdf0      	pop	{r4, r5, r6, r7, pc}
20003ea2:	2c00      	cmp	r4, #0
20003ea4:	d016      	beq.n	20003ed4 <__ledf2+0x90>
20003ea6:	45cb      	cmp	fp, r9
20003ea8:	d017      	beq.n	20003eda <__ledf2+0x96>
20003eaa:	465b      	mov	r3, fp
20003eac:	4259      	negs	r1, r3
20003eae:	2301      	movs	r3, #1
20003eb0:	430b      	orrs	r3, r1
20003eb2:	e7ef      	b.n	20003e94 <__ledf2+0x50>
20003eb4:	0031      	movs	r1, r6
20003eb6:	2302      	movs	r3, #2
20003eb8:	4301      	orrs	r1, r0
20003eba:	d1eb      	bne.n	20003e94 <__ledf2+0x50>
20003ebc:	e7d9      	b.n	20003e72 <__ledf2+0x2e>
20003ebe:	0039      	movs	r1, r7
20003ec0:	2302      	movs	r3, #2
20003ec2:	4311      	orrs	r1, r2
20003ec4:	d1e6      	bne.n	20003e94 <__ledf2+0x50>
20003ec6:	e7d7      	b.n	20003e78 <__ledf2+0x34>
20003ec8:	433a      	orrs	r2, r7
20003eca:	d1dd      	bne.n	20003e88 <__ledf2+0x44>
20003ecc:	2300      	movs	r3, #0
20003ece:	2800      	cmp	r0, #0
20003ed0:	d0e0      	beq.n	20003e94 <__ledf2+0x50>
20003ed2:	e7ea      	b.n	20003eaa <__ledf2+0x66>
20003ed4:	433a      	orrs	r2, r7
20003ed6:	d1e6      	bne.n	20003ea6 <__ledf2+0x62>
20003ed8:	e7e7      	b.n	20003eaa <__ledf2+0x66>
20003eda:	42a5      	cmp	r5, r4
20003edc:	dce5      	bgt.n	20003eaa <__ledf2+0x66>
20003ede:	db05      	blt.n	20003eec <__ledf2+0xa8>
20003ee0:	42be      	cmp	r6, r7
20003ee2:	d8e2      	bhi.n	20003eaa <__ledf2+0x66>
20003ee4:	d007      	beq.n	20003ef6 <__ledf2+0xb2>
20003ee6:	2300      	movs	r3, #0
20003ee8:	42be      	cmp	r6, r7
20003eea:	d2d3      	bcs.n	20003e94 <__ledf2+0x50>
20003eec:	4659      	mov	r1, fp
20003eee:	2301      	movs	r3, #1
20003ef0:	3901      	subs	r1, #1
20003ef2:	430b      	orrs	r3, r1
20003ef4:	e7ce      	b.n	20003e94 <__ledf2+0x50>
20003ef6:	45c4      	cmp	ip, r8
20003ef8:	d8d7      	bhi.n	20003eaa <__ledf2+0x66>
20003efa:	2300      	movs	r3, #0
20003efc:	45c4      	cmp	ip, r8
20003efe:	d3f5      	bcc.n	20003eec <__ledf2+0xa8>
20003f00:	e7c8      	b.n	20003e94 <__ledf2+0x50>
20003f02:	46c0      	nop			; (mov r8, r8)
20003f04:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003f08 <__aeabi_dmul>:
20003f08:	b5f0      	push	{r4, r5, r6, r7, lr}
20003f0a:	4657      	mov	r7, sl
20003f0c:	4645      	mov	r5, r8
20003f0e:	46de      	mov	lr, fp
20003f10:	464e      	mov	r6, r9
20003f12:	b5e0      	push	{r5, r6, r7, lr}
20003f14:	030c      	lsls	r4, r1, #12
20003f16:	4698      	mov	r8, r3
20003f18:	004e      	lsls	r6, r1, #1
20003f1a:	0b23      	lsrs	r3, r4, #12
20003f1c:	b087      	sub	sp, #28
20003f1e:	0007      	movs	r7, r0
20003f20:	4692      	mov	sl, r2
20003f22:	469b      	mov	fp, r3
20003f24:	0d76      	lsrs	r6, r6, #21
20003f26:	0fcd      	lsrs	r5, r1, #31
20003f28:	2e00      	cmp	r6, #0
20003f2a:	d06b      	beq.n	20004004 <__aeabi_dmul+0xfc>
20003f2c:	4b6d      	ldr	r3, [pc, #436]	; (200040e4 <__aeabi_dmul+0x1dc>)
20003f2e:	429e      	cmp	r6, r3
20003f30:	d035      	beq.n	20003f9e <__aeabi_dmul+0x96>
20003f32:	2480      	movs	r4, #128	; 0x80
20003f34:	465b      	mov	r3, fp
20003f36:	0f42      	lsrs	r2, r0, #29
20003f38:	0424      	lsls	r4, r4, #16
20003f3a:	00db      	lsls	r3, r3, #3
20003f3c:	4314      	orrs	r4, r2
20003f3e:	431c      	orrs	r4, r3
20003f40:	00c3      	lsls	r3, r0, #3
20003f42:	4699      	mov	r9, r3
20003f44:	4b68      	ldr	r3, [pc, #416]	; (200040e8 <__aeabi_dmul+0x1e0>)
20003f46:	46a3      	mov	fp, r4
20003f48:	469c      	mov	ip, r3
20003f4a:	2300      	movs	r3, #0
20003f4c:	2700      	movs	r7, #0
20003f4e:	4466      	add	r6, ip
20003f50:	9302      	str	r3, [sp, #8]
20003f52:	4643      	mov	r3, r8
20003f54:	031c      	lsls	r4, r3, #12
20003f56:	005a      	lsls	r2, r3, #1
20003f58:	0fdb      	lsrs	r3, r3, #31
20003f5a:	4650      	mov	r0, sl
20003f5c:	0b24      	lsrs	r4, r4, #12
20003f5e:	0d52      	lsrs	r2, r2, #21
20003f60:	4698      	mov	r8, r3
20003f62:	d100      	bne.n	20003f66 <__aeabi_dmul+0x5e>
20003f64:	e076      	b.n	20004054 <__aeabi_dmul+0x14c>
20003f66:	4b5f      	ldr	r3, [pc, #380]	; (200040e4 <__aeabi_dmul+0x1dc>)
20003f68:	429a      	cmp	r2, r3
20003f6a:	d06d      	beq.n	20004048 <__aeabi_dmul+0x140>
20003f6c:	2380      	movs	r3, #128	; 0x80
20003f6e:	0f41      	lsrs	r1, r0, #29
20003f70:	041b      	lsls	r3, r3, #16
20003f72:	430b      	orrs	r3, r1
20003f74:	495c      	ldr	r1, [pc, #368]	; (200040e8 <__aeabi_dmul+0x1e0>)
20003f76:	00e4      	lsls	r4, r4, #3
20003f78:	468c      	mov	ip, r1
20003f7a:	431c      	orrs	r4, r3
20003f7c:	00c3      	lsls	r3, r0, #3
20003f7e:	2000      	movs	r0, #0
20003f80:	4462      	add	r2, ip
20003f82:	4641      	mov	r1, r8
20003f84:	18b6      	adds	r6, r6, r2
20003f86:	4069      	eors	r1, r5
20003f88:	1c72      	adds	r2, r6, #1
20003f8a:	9101      	str	r1, [sp, #4]
20003f8c:	4694      	mov	ip, r2
20003f8e:	4307      	orrs	r7, r0
20003f90:	2f0f      	cmp	r7, #15
20003f92:	d900      	bls.n	20003f96 <__aeabi_dmul+0x8e>
20003f94:	e0b0      	b.n	200040f8 <__aeabi_dmul+0x1f0>
20003f96:	4a55      	ldr	r2, [pc, #340]	; (200040ec <__aeabi_dmul+0x1e4>)
20003f98:	00bf      	lsls	r7, r7, #2
20003f9a:	59d2      	ldr	r2, [r2, r7]
20003f9c:	4697      	mov	pc, r2
20003f9e:	465b      	mov	r3, fp
20003fa0:	4303      	orrs	r3, r0
20003fa2:	4699      	mov	r9, r3
20003fa4:	d000      	beq.n	20003fa8 <__aeabi_dmul+0xa0>
20003fa6:	e087      	b.n	200040b8 <__aeabi_dmul+0x1b0>
20003fa8:	2300      	movs	r3, #0
20003faa:	469b      	mov	fp, r3
20003fac:	3302      	adds	r3, #2
20003fae:	2708      	movs	r7, #8
20003fb0:	9302      	str	r3, [sp, #8]
20003fb2:	e7ce      	b.n	20003f52 <__aeabi_dmul+0x4a>
20003fb4:	4642      	mov	r2, r8
20003fb6:	9201      	str	r2, [sp, #4]
20003fb8:	2802      	cmp	r0, #2
20003fba:	d067      	beq.n	2000408c <__aeabi_dmul+0x184>
20003fbc:	2803      	cmp	r0, #3
20003fbe:	d100      	bne.n	20003fc2 <__aeabi_dmul+0xba>
20003fc0:	e20e      	b.n	200043e0 <__aeabi_dmul+0x4d8>
20003fc2:	2801      	cmp	r0, #1
20003fc4:	d000      	beq.n	20003fc8 <__aeabi_dmul+0xc0>
20003fc6:	e162      	b.n	2000428e <__aeabi_dmul+0x386>
20003fc8:	2300      	movs	r3, #0
20003fca:	2400      	movs	r4, #0
20003fcc:	2200      	movs	r2, #0
20003fce:	4699      	mov	r9, r3
20003fd0:	9901      	ldr	r1, [sp, #4]
20003fd2:	4001      	ands	r1, r0
20003fd4:	b2cd      	uxtb	r5, r1
20003fd6:	2100      	movs	r1, #0
20003fd8:	0312      	lsls	r2, r2, #12
20003fda:	0d0b      	lsrs	r3, r1, #20
20003fdc:	0b12      	lsrs	r2, r2, #12
20003fde:	051b      	lsls	r3, r3, #20
20003fe0:	4313      	orrs	r3, r2
20003fe2:	4a43      	ldr	r2, [pc, #268]	; (200040f0 <__aeabi_dmul+0x1e8>)
20003fe4:	0524      	lsls	r4, r4, #20
20003fe6:	4013      	ands	r3, r2
20003fe8:	431c      	orrs	r4, r3
20003fea:	0064      	lsls	r4, r4, #1
20003fec:	07ed      	lsls	r5, r5, #31
20003fee:	0864      	lsrs	r4, r4, #1
20003ff0:	432c      	orrs	r4, r5
20003ff2:	4648      	mov	r0, r9
20003ff4:	0021      	movs	r1, r4
20003ff6:	b007      	add	sp, #28
20003ff8:	bc3c      	pop	{r2, r3, r4, r5}
20003ffa:	4690      	mov	r8, r2
20003ffc:	4699      	mov	r9, r3
20003ffe:	46a2      	mov	sl, r4
20004000:	46ab      	mov	fp, r5
20004002:	bdf0      	pop	{r4, r5, r6, r7, pc}
20004004:	4303      	orrs	r3, r0
20004006:	4699      	mov	r9, r3
20004008:	d04f      	beq.n	200040aa <__aeabi_dmul+0x1a2>
2000400a:	465b      	mov	r3, fp
2000400c:	2b00      	cmp	r3, #0
2000400e:	d100      	bne.n	20004012 <__aeabi_dmul+0x10a>
20004010:	e189      	b.n	20004326 <__aeabi_dmul+0x41e>
20004012:	4658      	mov	r0, fp
20004014:	f7ff fae8 	bl	200035e8 <__clzsi2>
20004018:	0003      	movs	r3, r0
2000401a:	3b0b      	subs	r3, #11
2000401c:	2b1c      	cmp	r3, #28
2000401e:	dd00      	ble.n	20004022 <__aeabi_dmul+0x11a>
20004020:	e17a      	b.n	20004318 <__aeabi_dmul+0x410>
20004022:	221d      	movs	r2, #29
20004024:	1ad3      	subs	r3, r2, r3
20004026:	003a      	movs	r2, r7
20004028:	0001      	movs	r1, r0
2000402a:	465c      	mov	r4, fp
2000402c:	40da      	lsrs	r2, r3
2000402e:	3908      	subs	r1, #8
20004030:	408c      	lsls	r4, r1
20004032:	0013      	movs	r3, r2
20004034:	408f      	lsls	r7, r1
20004036:	4323      	orrs	r3, r4
20004038:	469b      	mov	fp, r3
2000403a:	46b9      	mov	r9, r7
2000403c:	2300      	movs	r3, #0
2000403e:	4e2d      	ldr	r6, [pc, #180]	; (200040f4 <__aeabi_dmul+0x1ec>)
20004040:	2700      	movs	r7, #0
20004042:	1a36      	subs	r6, r6, r0
20004044:	9302      	str	r3, [sp, #8]
20004046:	e784      	b.n	20003f52 <__aeabi_dmul+0x4a>
20004048:	4653      	mov	r3, sl
2000404a:	4323      	orrs	r3, r4
2000404c:	d12a      	bne.n	200040a4 <__aeabi_dmul+0x19c>
2000404e:	2400      	movs	r4, #0
20004050:	2002      	movs	r0, #2
20004052:	e796      	b.n	20003f82 <__aeabi_dmul+0x7a>
20004054:	4653      	mov	r3, sl
20004056:	4323      	orrs	r3, r4
20004058:	d020      	beq.n	2000409c <__aeabi_dmul+0x194>
2000405a:	2c00      	cmp	r4, #0
2000405c:	d100      	bne.n	20004060 <__aeabi_dmul+0x158>
2000405e:	e157      	b.n	20004310 <__aeabi_dmul+0x408>
20004060:	0020      	movs	r0, r4
20004062:	f7ff fac1 	bl	200035e8 <__clzsi2>
20004066:	0003      	movs	r3, r0
20004068:	3b0b      	subs	r3, #11
2000406a:	2b1c      	cmp	r3, #28
2000406c:	dd00      	ble.n	20004070 <__aeabi_dmul+0x168>
2000406e:	e149      	b.n	20004304 <__aeabi_dmul+0x3fc>
20004070:	211d      	movs	r1, #29
20004072:	1acb      	subs	r3, r1, r3
20004074:	4651      	mov	r1, sl
20004076:	0002      	movs	r2, r0
20004078:	40d9      	lsrs	r1, r3
2000407a:	4653      	mov	r3, sl
2000407c:	3a08      	subs	r2, #8
2000407e:	4094      	lsls	r4, r2
20004080:	4093      	lsls	r3, r2
20004082:	430c      	orrs	r4, r1
20004084:	4a1b      	ldr	r2, [pc, #108]	; (200040f4 <__aeabi_dmul+0x1ec>)
20004086:	1a12      	subs	r2, r2, r0
20004088:	2000      	movs	r0, #0
2000408a:	e77a      	b.n	20003f82 <__aeabi_dmul+0x7a>
2000408c:	2501      	movs	r5, #1
2000408e:	9b01      	ldr	r3, [sp, #4]
20004090:	4c14      	ldr	r4, [pc, #80]	; (200040e4 <__aeabi_dmul+0x1dc>)
20004092:	401d      	ands	r5, r3
20004094:	2300      	movs	r3, #0
20004096:	2200      	movs	r2, #0
20004098:	4699      	mov	r9, r3
2000409a:	e79c      	b.n	20003fd6 <__aeabi_dmul+0xce>
2000409c:	2400      	movs	r4, #0
2000409e:	2200      	movs	r2, #0
200040a0:	2001      	movs	r0, #1
200040a2:	e76e      	b.n	20003f82 <__aeabi_dmul+0x7a>
200040a4:	4653      	mov	r3, sl
200040a6:	2003      	movs	r0, #3
200040a8:	e76b      	b.n	20003f82 <__aeabi_dmul+0x7a>
200040aa:	2300      	movs	r3, #0
200040ac:	469b      	mov	fp, r3
200040ae:	3301      	adds	r3, #1
200040b0:	2704      	movs	r7, #4
200040b2:	2600      	movs	r6, #0
200040b4:	9302      	str	r3, [sp, #8]
200040b6:	e74c      	b.n	20003f52 <__aeabi_dmul+0x4a>
200040b8:	2303      	movs	r3, #3
200040ba:	4681      	mov	r9, r0
200040bc:	270c      	movs	r7, #12
200040be:	9302      	str	r3, [sp, #8]
200040c0:	e747      	b.n	20003f52 <__aeabi_dmul+0x4a>
200040c2:	2280      	movs	r2, #128	; 0x80
200040c4:	2300      	movs	r3, #0
200040c6:	2500      	movs	r5, #0
200040c8:	0312      	lsls	r2, r2, #12
200040ca:	4699      	mov	r9, r3
200040cc:	4c05      	ldr	r4, [pc, #20]	; (200040e4 <__aeabi_dmul+0x1dc>)
200040ce:	e782      	b.n	20003fd6 <__aeabi_dmul+0xce>
200040d0:	465c      	mov	r4, fp
200040d2:	464b      	mov	r3, r9
200040d4:	9802      	ldr	r0, [sp, #8]
200040d6:	e76f      	b.n	20003fb8 <__aeabi_dmul+0xb0>
200040d8:	465c      	mov	r4, fp
200040da:	464b      	mov	r3, r9
200040dc:	9501      	str	r5, [sp, #4]
200040de:	9802      	ldr	r0, [sp, #8]
200040e0:	e76a      	b.n	20003fb8 <__aeabi_dmul+0xb0>
200040e2:	46c0      	nop			; (mov r8, r8)
200040e4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200040e8:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
200040ec:	20007430 	andcs	r7, r0, r0, lsr r4
200040f0:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>
200040f4:	fffffc0d 			; <UNDEFINED> instruction: 0xfffffc0d
200040f8:	464a      	mov	r2, r9
200040fa:	4649      	mov	r1, r9
200040fc:	0c17      	lsrs	r7, r2, #16
200040fe:	0c1a      	lsrs	r2, r3, #16
20004100:	041b      	lsls	r3, r3, #16
20004102:	0c1b      	lsrs	r3, r3, #16
20004104:	0408      	lsls	r0, r1, #16
20004106:	0019      	movs	r1, r3
20004108:	0c00      	lsrs	r0, r0, #16
2000410a:	4341      	muls	r1, r0
2000410c:	0015      	movs	r5, r2
2000410e:	4688      	mov	r8, r1
20004110:	0019      	movs	r1, r3
20004112:	437d      	muls	r5, r7
20004114:	4379      	muls	r1, r7
20004116:	9503      	str	r5, [sp, #12]
20004118:	4689      	mov	r9, r1
2000411a:	0029      	movs	r1, r5
2000411c:	0015      	movs	r5, r2
2000411e:	4345      	muls	r5, r0
20004120:	444d      	add	r5, r9
20004122:	9502      	str	r5, [sp, #8]
20004124:	4645      	mov	r5, r8
20004126:	0c2d      	lsrs	r5, r5, #16
20004128:	46aa      	mov	sl, r5
2000412a:	9d02      	ldr	r5, [sp, #8]
2000412c:	4455      	add	r5, sl
2000412e:	45a9      	cmp	r9, r5
20004130:	d906      	bls.n	20004140 <__aeabi_dmul+0x238>
20004132:	468a      	mov	sl, r1
20004134:	2180      	movs	r1, #128	; 0x80
20004136:	0249      	lsls	r1, r1, #9
20004138:	4689      	mov	r9, r1
2000413a:	44ca      	add	sl, r9
2000413c:	4651      	mov	r1, sl
2000413e:	9103      	str	r1, [sp, #12]
20004140:	0c29      	lsrs	r1, r5, #16
20004142:	9104      	str	r1, [sp, #16]
20004144:	4641      	mov	r1, r8
20004146:	0409      	lsls	r1, r1, #16
20004148:	042d      	lsls	r5, r5, #16
2000414a:	0c09      	lsrs	r1, r1, #16
2000414c:	4688      	mov	r8, r1
2000414e:	0029      	movs	r1, r5
20004150:	0c25      	lsrs	r5, r4, #16
20004152:	0424      	lsls	r4, r4, #16
20004154:	4441      	add	r1, r8
20004156:	0c24      	lsrs	r4, r4, #16
20004158:	9105      	str	r1, [sp, #20]
2000415a:	0021      	movs	r1, r4
2000415c:	4341      	muls	r1, r0
2000415e:	4688      	mov	r8, r1
20004160:	0021      	movs	r1, r4
20004162:	4379      	muls	r1, r7
20004164:	468a      	mov	sl, r1
20004166:	4368      	muls	r0, r5
20004168:	4641      	mov	r1, r8
2000416a:	4450      	add	r0, sl
2000416c:	4681      	mov	r9, r0
2000416e:	0c08      	lsrs	r0, r1, #16
20004170:	4448      	add	r0, r9
20004172:	436f      	muls	r7, r5
20004174:	4582      	cmp	sl, r0
20004176:	d903      	bls.n	20004180 <__aeabi_dmul+0x278>
20004178:	2180      	movs	r1, #128	; 0x80
2000417a:	0249      	lsls	r1, r1, #9
2000417c:	4689      	mov	r9, r1
2000417e:	444f      	add	r7, r9
20004180:	0c01      	lsrs	r1, r0, #16
20004182:	4689      	mov	r9, r1
20004184:	0039      	movs	r1, r7
20004186:	4449      	add	r1, r9
20004188:	9102      	str	r1, [sp, #8]
2000418a:	4641      	mov	r1, r8
2000418c:	040f      	lsls	r7, r1, #16
2000418e:	9904      	ldr	r1, [sp, #16]
20004190:	0c3f      	lsrs	r7, r7, #16
20004192:	4688      	mov	r8, r1
20004194:	0400      	lsls	r0, r0, #16
20004196:	19c0      	adds	r0, r0, r7
20004198:	4480      	add	r8, r0
2000419a:	4641      	mov	r1, r8
2000419c:	9104      	str	r1, [sp, #16]
2000419e:	4659      	mov	r1, fp
200041a0:	0c0f      	lsrs	r7, r1, #16
200041a2:	0409      	lsls	r1, r1, #16
200041a4:	0c09      	lsrs	r1, r1, #16
200041a6:	4688      	mov	r8, r1
200041a8:	4359      	muls	r1, r3
200041aa:	468a      	mov	sl, r1
200041ac:	0039      	movs	r1, r7
200041ae:	4351      	muls	r1, r2
200041b0:	4689      	mov	r9, r1
200041b2:	4641      	mov	r1, r8
200041b4:	434a      	muls	r2, r1
200041b6:	4651      	mov	r1, sl
200041b8:	0c09      	lsrs	r1, r1, #16
200041ba:	468b      	mov	fp, r1
200041bc:	437b      	muls	r3, r7
200041be:	18d2      	adds	r2, r2, r3
200041c0:	445a      	add	r2, fp
200041c2:	4293      	cmp	r3, r2
200041c4:	d903      	bls.n	200041ce <__aeabi_dmul+0x2c6>
200041c6:	2380      	movs	r3, #128	; 0x80
200041c8:	025b      	lsls	r3, r3, #9
200041ca:	469b      	mov	fp, r3
200041cc:	44d9      	add	r9, fp
200041ce:	4651      	mov	r1, sl
200041d0:	0409      	lsls	r1, r1, #16
200041d2:	0c09      	lsrs	r1, r1, #16
200041d4:	468a      	mov	sl, r1
200041d6:	4641      	mov	r1, r8
200041d8:	4361      	muls	r1, r4
200041da:	437c      	muls	r4, r7
200041dc:	0c13      	lsrs	r3, r2, #16
200041de:	0412      	lsls	r2, r2, #16
200041e0:	444b      	add	r3, r9
200041e2:	4452      	add	r2, sl
200041e4:	46a1      	mov	r9, r4
200041e6:	468a      	mov	sl, r1
200041e8:	003c      	movs	r4, r7
200041ea:	4641      	mov	r1, r8
200041ec:	436c      	muls	r4, r5
200041ee:	434d      	muls	r5, r1
200041f0:	4651      	mov	r1, sl
200041f2:	444d      	add	r5, r9
200041f4:	0c0f      	lsrs	r7, r1, #16
200041f6:	197d      	adds	r5, r7, r5
200041f8:	45a9      	cmp	r9, r5
200041fa:	d903      	bls.n	20004204 <__aeabi_dmul+0x2fc>
200041fc:	2180      	movs	r1, #128	; 0x80
200041fe:	0249      	lsls	r1, r1, #9
20004200:	4688      	mov	r8, r1
20004202:	4444      	add	r4, r8
20004204:	9f04      	ldr	r7, [sp, #16]
20004206:	9903      	ldr	r1, [sp, #12]
20004208:	46b8      	mov	r8, r7
2000420a:	4441      	add	r1, r8
2000420c:	468b      	mov	fp, r1
2000420e:	4583      	cmp	fp, r0
20004210:	4180      	sbcs	r0, r0
20004212:	4241      	negs	r1, r0
20004214:	4688      	mov	r8, r1
20004216:	4651      	mov	r1, sl
20004218:	0408      	lsls	r0, r1, #16
2000421a:	042f      	lsls	r7, r5, #16
2000421c:	0c00      	lsrs	r0, r0, #16
2000421e:	183f      	adds	r7, r7, r0
20004220:	4658      	mov	r0, fp
20004222:	9902      	ldr	r1, [sp, #8]
20004224:	1810      	adds	r0, r2, r0
20004226:	4689      	mov	r9, r1
20004228:	4290      	cmp	r0, r2
2000422a:	4192      	sbcs	r2, r2
2000422c:	444f      	add	r7, r9
2000422e:	46ba      	mov	sl, r7
20004230:	4252      	negs	r2, r2
20004232:	4699      	mov	r9, r3
20004234:	4693      	mov	fp, r2
20004236:	44c2      	add	sl, r8
20004238:	44d1      	add	r9, sl
2000423a:	44cb      	add	fp, r9
2000423c:	428f      	cmp	r7, r1
2000423e:	41bf      	sbcs	r7, r7
20004240:	45c2      	cmp	sl, r8
20004242:	4189      	sbcs	r1, r1
20004244:	4599      	cmp	r9, r3
20004246:	419b      	sbcs	r3, r3
20004248:	4593      	cmp	fp, r2
2000424a:	4192      	sbcs	r2, r2
2000424c:	427f      	negs	r7, r7
2000424e:	4249      	negs	r1, r1
20004250:	0c2d      	lsrs	r5, r5, #16
20004252:	4252      	negs	r2, r2
20004254:	430f      	orrs	r7, r1
20004256:	425b      	negs	r3, r3
20004258:	4313      	orrs	r3, r2
2000425a:	197f      	adds	r7, r7, r5
2000425c:	18ff      	adds	r7, r7, r3
2000425e:	465b      	mov	r3, fp
20004260:	193c      	adds	r4, r7, r4
20004262:	0ddb      	lsrs	r3, r3, #23
20004264:	9a05      	ldr	r2, [sp, #20]
20004266:	0264      	lsls	r4, r4, #9
20004268:	431c      	orrs	r4, r3
2000426a:	0243      	lsls	r3, r0, #9
2000426c:	4313      	orrs	r3, r2
2000426e:	1e5d      	subs	r5, r3, #1
20004270:	41ab      	sbcs	r3, r5
20004272:	465a      	mov	r2, fp
20004274:	0dc0      	lsrs	r0, r0, #23
20004276:	4303      	orrs	r3, r0
20004278:	0252      	lsls	r2, r2, #9
2000427a:	4313      	orrs	r3, r2
2000427c:	01e2      	lsls	r2, r4, #7
2000427e:	d556      	bpl.n	2000432e <__aeabi_dmul+0x426>
20004280:	2001      	movs	r0, #1
20004282:	085a      	lsrs	r2, r3, #1
20004284:	4003      	ands	r3, r0
20004286:	4313      	orrs	r3, r2
20004288:	07e2      	lsls	r2, r4, #31
2000428a:	4313      	orrs	r3, r2
2000428c:	0864      	lsrs	r4, r4, #1
2000428e:	485a      	ldr	r0, [pc, #360]	; (200043f8 <__aeabi_dmul+0x4f0>)
20004290:	4460      	add	r0, ip
20004292:	2800      	cmp	r0, #0
20004294:	dd4d      	ble.n	20004332 <__aeabi_dmul+0x42a>
20004296:	075a      	lsls	r2, r3, #29
20004298:	d009      	beq.n	200042ae <__aeabi_dmul+0x3a6>
2000429a:	220f      	movs	r2, #15
2000429c:	401a      	ands	r2, r3
2000429e:	2a04      	cmp	r2, #4
200042a0:	d005      	beq.n	200042ae <__aeabi_dmul+0x3a6>
200042a2:	1d1a      	adds	r2, r3, #4
200042a4:	429a      	cmp	r2, r3
200042a6:	419b      	sbcs	r3, r3
200042a8:	425b      	negs	r3, r3
200042aa:	18e4      	adds	r4, r4, r3
200042ac:	0013      	movs	r3, r2
200042ae:	01e2      	lsls	r2, r4, #7
200042b0:	d504      	bpl.n	200042bc <__aeabi_dmul+0x3b4>
200042b2:	2080      	movs	r0, #128	; 0x80
200042b4:	4a51      	ldr	r2, [pc, #324]	; (200043fc <__aeabi_dmul+0x4f4>)
200042b6:	00c0      	lsls	r0, r0, #3
200042b8:	4014      	ands	r4, r2
200042ba:	4460      	add	r0, ip
200042bc:	4a50      	ldr	r2, [pc, #320]	; (20004400 <__aeabi_dmul+0x4f8>)
200042be:	4290      	cmp	r0, r2
200042c0:	dd00      	ble.n	200042c4 <__aeabi_dmul+0x3bc>
200042c2:	e6e3      	b.n	2000408c <__aeabi_dmul+0x184>
200042c4:	2501      	movs	r5, #1
200042c6:	08db      	lsrs	r3, r3, #3
200042c8:	0762      	lsls	r2, r4, #29
200042ca:	431a      	orrs	r2, r3
200042cc:	0264      	lsls	r4, r4, #9
200042ce:	9b01      	ldr	r3, [sp, #4]
200042d0:	4691      	mov	r9, r2
200042d2:	0b22      	lsrs	r2, r4, #12
200042d4:	0544      	lsls	r4, r0, #21
200042d6:	0d64      	lsrs	r4, r4, #21
200042d8:	401d      	ands	r5, r3
200042da:	e67c      	b.n	20003fd6 <__aeabi_dmul+0xce>
200042dc:	2280      	movs	r2, #128	; 0x80
200042de:	4659      	mov	r1, fp
200042e0:	0312      	lsls	r2, r2, #12
200042e2:	4211      	tst	r1, r2
200042e4:	d008      	beq.n	200042f8 <__aeabi_dmul+0x3f0>
200042e6:	4214      	tst	r4, r2
200042e8:	d106      	bne.n	200042f8 <__aeabi_dmul+0x3f0>
200042ea:	4322      	orrs	r2, r4
200042ec:	0312      	lsls	r2, r2, #12
200042ee:	0b12      	lsrs	r2, r2, #12
200042f0:	4645      	mov	r5, r8
200042f2:	4699      	mov	r9, r3
200042f4:	4c43      	ldr	r4, [pc, #268]	; (20004404 <__aeabi_dmul+0x4fc>)
200042f6:	e66e      	b.n	20003fd6 <__aeabi_dmul+0xce>
200042f8:	465b      	mov	r3, fp
200042fa:	431a      	orrs	r2, r3
200042fc:	0312      	lsls	r2, r2, #12
200042fe:	0b12      	lsrs	r2, r2, #12
20004300:	4c40      	ldr	r4, [pc, #256]	; (20004404 <__aeabi_dmul+0x4fc>)
20004302:	e668      	b.n	20003fd6 <__aeabi_dmul+0xce>
20004304:	0003      	movs	r3, r0
20004306:	4654      	mov	r4, sl
20004308:	3b28      	subs	r3, #40	; 0x28
2000430a:	409c      	lsls	r4, r3
2000430c:	2300      	movs	r3, #0
2000430e:	e6b9      	b.n	20004084 <__aeabi_dmul+0x17c>
20004310:	f7ff f96a 	bl	200035e8 <__clzsi2>
20004314:	3020      	adds	r0, #32
20004316:	e6a6      	b.n	20004066 <__aeabi_dmul+0x15e>
20004318:	0003      	movs	r3, r0
2000431a:	3b28      	subs	r3, #40	; 0x28
2000431c:	409f      	lsls	r7, r3
2000431e:	2300      	movs	r3, #0
20004320:	46bb      	mov	fp, r7
20004322:	4699      	mov	r9, r3
20004324:	e68a      	b.n	2000403c <__aeabi_dmul+0x134>
20004326:	f7ff f95f 	bl	200035e8 <__clzsi2>
2000432a:	3020      	adds	r0, #32
2000432c:	e674      	b.n	20004018 <__aeabi_dmul+0x110>
2000432e:	46b4      	mov	ip, r6
20004330:	e7ad      	b.n	2000428e <__aeabi_dmul+0x386>
20004332:	2501      	movs	r5, #1
20004334:	1a2a      	subs	r2, r5, r0
20004336:	2a38      	cmp	r2, #56	; 0x38
20004338:	dd06      	ble.n	20004348 <__aeabi_dmul+0x440>
2000433a:	9b01      	ldr	r3, [sp, #4]
2000433c:	2400      	movs	r4, #0
2000433e:	401d      	ands	r5, r3
20004340:	2300      	movs	r3, #0
20004342:	2200      	movs	r2, #0
20004344:	4699      	mov	r9, r3
20004346:	e646      	b.n	20003fd6 <__aeabi_dmul+0xce>
20004348:	2a1f      	cmp	r2, #31
2000434a:	dc21      	bgt.n	20004390 <__aeabi_dmul+0x488>
2000434c:	2520      	movs	r5, #32
2000434e:	0020      	movs	r0, r4
20004350:	1aad      	subs	r5, r5, r2
20004352:	001e      	movs	r6, r3
20004354:	40ab      	lsls	r3, r5
20004356:	40a8      	lsls	r0, r5
20004358:	40d6      	lsrs	r6, r2
2000435a:	1e5d      	subs	r5, r3, #1
2000435c:	41ab      	sbcs	r3, r5
2000435e:	4330      	orrs	r0, r6
20004360:	4318      	orrs	r0, r3
20004362:	40d4      	lsrs	r4, r2
20004364:	0743      	lsls	r3, r0, #29
20004366:	d009      	beq.n	2000437c <__aeabi_dmul+0x474>
20004368:	230f      	movs	r3, #15
2000436a:	4003      	ands	r3, r0
2000436c:	2b04      	cmp	r3, #4
2000436e:	d005      	beq.n	2000437c <__aeabi_dmul+0x474>
20004370:	0003      	movs	r3, r0
20004372:	1d18      	adds	r0, r3, #4
20004374:	4298      	cmp	r0, r3
20004376:	419b      	sbcs	r3, r3
20004378:	425b      	negs	r3, r3
2000437a:	18e4      	adds	r4, r4, r3
2000437c:	0223      	lsls	r3, r4, #8
2000437e:	d521      	bpl.n	200043c4 <__aeabi_dmul+0x4bc>
20004380:	2501      	movs	r5, #1
20004382:	9b01      	ldr	r3, [sp, #4]
20004384:	2401      	movs	r4, #1
20004386:	401d      	ands	r5, r3
20004388:	2300      	movs	r3, #0
2000438a:	2200      	movs	r2, #0
2000438c:	4699      	mov	r9, r3
2000438e:	e622      	b.n	20003fd6 <__aeabi_dmul+0xce>
20004390:	251f      	movs	r5, #31
20004392:	0021      	movs	r1, r4
20004394:	426d      	negs	r5, r5
20004396:	1a28      	subs	r0, r5, r0
20004398:	40c1      	lsrs	r1, r0
2000439a:	0008      	movs	r0, r1
2000439c:	2a20      	cmp	r2, #32
2000439e:	d01d      	beq.n	200043dc <__aeabi_dmul+0x4d4>
200043a0:	355f      	adds	r5, #95	; 0x5f
200043a2:	1aaa      	subs	r2, r5, r2
200043a4:	4094      	lsls	r4, r2
200043a6:	4323      	orrs	r3, r4
200043a8:	1e5c      	subs	r4, r3, #1
200043aa:	41a3      	sbcs	r3, r4
200043ac:	2507      	movs	r5, #7
200043ae:	4303      	orrs	r3, r0
200043b0:	401d      	ands	r5, r3
200043b2:	2200      	movs	r2, #0
200043b4:	2d00      	cmp	r5, #0
200043b6:	d009      	beq.n	200043cc <__aeabi_dmul+0x4c4>
200043b8:	220f      	movs	r2, #15
200043ba:	2400      	movs	r4, #0
200043bc:	401a      	ands	r2, r3
200043be:	0018      	movs	r0, r3
200043c0:	2a04      	cmp	r2, #4
200043c2:	d1d6      	bne.n	20004372 <__aeabi_dmul+0x46a>
200043c4:	0003      	movs	r3, r0
200043c6:	0765      	lsls	r5, r4, #29
200043c8:	0264      	lsls	r4, r4, #9
200043ca:	0b22      	lsrs	r2, r4, #12
200043cc:	08db      	lsrs	r3, r3, #3
200043ce:	432b      	orrs	r3, r5
200043d0:	2501      	movs	r5, #1
200043d2:	4699      	mov	r9, r3
200043d4:	9b01      	ldr	r3, [sp, #4]
200043d6:	2400      	movs	r4, #0
200043d8:	401d      	ands	r5, r3
200043da:	e5fc      	b.n	20003fd6 <__aeabi_dmul+0xce>
200043dc:	2400      	movs	r4, #0
200043de:	e7e2      	b.n	200043a6 <__aeabi_dmul+0x49e>
200043e0:	2280      	movs	r2, #128	; 0x80
200043e2:	2501      	movs	r5, #1
200043e4:	0312      	lsls	r2, r2, #12
200043e6:	4322      	orrs	r2, r4
200043e8:	9901      	ldr	r1, [sp, #4]
200043ea:	0312      	lsls	r2, r2, #12
200043ec:	0b12      	lsrs	r2, r2, #12
200043ee:	400d      	ands	r5, r1
200043f0:	4699      	mov	r9, r3
200043f2:	4c04      	ldr	r4, [pc, #16]	; (20004404 <__aeabi_dmul+0x4fc>)
200043f4:	e5ef      	b.n	20003fd6 <__aeabi_dmul+0xce>
200043f6:	46c0      	nop			; (mov r8, r8)
200043f8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200043fc:	feffffff 	mrc2	15, 7, pc, cr15, cr15, {7}
20004400:	000007fe 	strdeq	r0, [r0], -lr
20004404:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20004408 <__aeabi_dsub>:
20004408:	b5f0      	push	{r4, r5, r6, r7, lr}
2000440a:	4646      	mov	r6, r8
2000440c:	46d6      	mov	lr, sl
2000440e:	464f      	mov	r7, r9
20004410:	030c      	lsls	r4, r1, #12
20004412:	b5c0      	push	{r6, r7, lr}
20004414:	0fcd      	lsrs	r5, r1, #31
20004416:	004e      	lsls	r6, r1, #1
20004418:	0a61      	lsrs	r1, r4, #9
2000441a:	0f44      	lsrs	r4, r0, #29
2000441c:	430c      	orrs	r4, r1
2000441e:	00c1      	lsls	r1, r0, #3
20004420:	0058      	lsls	r0, r3, #1
20004422:	0d40      	lsrs	r0, r0, #21
20004424:	4684      	mov	ip, r0
20004426:	468a      	mov	sl, r1
20004428:	000f      	movs	r7, r1
2000442a:	0319      	lsls	r1, r3, #12
2000442c:	0f50      	lsrs	r0, r2, #29
2000442e:	0a49      	lsrs	r1, r1, #9
20004430:	4301      	orrs	r1, r0
20004432:	48c6      	ldr	r0, [pc, #792]	; (2000474c <__aeabi_dsub+0x344>)
20004434:	0d76      	lsrs	r6, r6, #21
20004436:	46a8      	mov	r8, r5
20004438:	0fdb      	lsrs	r3, r3, #31
2000443a:	00d2      	lsls	r2, r2, #3
2000443c:	4584      	cmp	ip, r0
2000443e:	d100      	bne.n	20004442 <__aeabi_dsub+0x3a>
20004440:	e0d8      	b.n	200045f4 <__aeabi_dsub+0x1ec>
20004442:	2001      	movs	r0, #1
20004444:	4043      	eors	r3, r0
20004446:	42ab      	cmp	r3, r5
20004448:	d100      	bne.n	2000444c <__aeabi_dsub+0x44>
2000444a:	e0a6      	b.n	2000459a <__aeabi_dsub+0x192>
2000444c:	4660      	mov	r0, ip
2000444e:	1a35      	subs	r5, r6, r0
20004450:	2d00      	cmp	r5, #0
20004452:	dc00      	bgt.n	20004456 <__aeabi_dsub+0x4e>
20004454:	e105      	b.n	20004662 <__aeabi_dsub+0x25a>
20004456:	2800      	cmp	r0, #0
20004458:	d110      	bne.n	2000447c <__aeabi_dsub+0x74>
2000445a:	000b      	movs	r3, r1
2000445c:	4313      	orrs	r3, r2
2000445e:	d100      	bne.n	20004462 <__aeabi_dsub+0x5a>
20004460:	e0d7      	b.n	20004612 <__aeabi_dsub+0x20a>
20004462:	1e6b      	subs	r3, r5, #1
20004464:	2b00      	cmp	r3, #0
20004466:	d000      	beq.n	2000446a <__aeabi_dsub+0x62>
20004468:	e14b      	b.n	20004702 <__aeabi_dsub+0x2fa>
2000446a:	4653      	mov	r3, sl
2000446c:	1a9f      	subs	r7, r3, r2
2000446e:	45ba      	cmp	sl, r7
20004470:	4180      	sbcs	r0, r0
20004472:	1a64      	subs	r4, r4, r1
20004474:	4240      	negs	r0, r0
20004476:	1a24      	subs	r4, r4, r0
20004478:	2601      	movs	r6, #1
2000447a:	e01e      	b.n	200044ba <__aeabi_dsub+0xb2>
2000447c:	4bb3      	ldr	r3, [pc, #716]	; (2000474c <__aeabi_dsub+0x344>)
2000447e:	429e      	cmp	r6, r3
20004480:	d048      	beq.n	20004514 <__aeabi_dsub+0x10c>
20004482:	2380      	movs	r3, #128	; 0x80
20004484:	041b      	lsls	r3, r3, #16
20004486:	4319      	orrs	r1, r3
20004488:	2d38      	cmp	r5, #56	; 0x38
2000448a:	dd00      	ble.n	2000448e <__aeabi_dsub+0x86>
2000448c:	e119      	b.n	200046c2 <__aeabi_dsub+0x2ba>
2000448e:	2d1f      	cmp	r5, #31
20004490:	dd00      	ble.n	20004494 <__aeabi_dsub+0x8c>
20004492:	e14c      	b.n	2000472e <__aeabi_dsub+0x326>
20004494:	2320      	movs	r3, #32
20004496:	000f      	movs	r7, r1
20004498:	1b5b      	subs	r3, r3, r5
2000449a:	0010      	movs	r0, r2
2000449c:	409a      	lsls	r2, r3
2000449e:	409f      	lsls	r7, r3
200044a0:	40e8      	lsrs	r0, r5
200044a2:	1e53      	subs	r3, r2, #1
200044a4:	419a      	sbcs	r2, r3
200044a6:	40e9      	lsrs	r1, r5
200044a8:	4307      	orrs	r7, r0
200044aa:	4317      	orrs	r7, r2
200044ac:	4653      	mov	r3, sl
200044ae:	1bdf      	subs	r7, r3, r7
200044b0:	1a61      	subs	r1, r4, r1
200044b2:	45ba      	cmp	sl, r7
200044b4:	41a4      	sbcs	r4, r4
200044b6:	4264      	negs	r4, r4
200044b8:	1b0c      	subs	r4, r1, r4
200044ba:	0223      	lsls	r3, r4, #8
200044bc:	d400      	bmi.n	200044c0 <__aeabi_dsub+0xb8>
200044be:	e0c5      	b.n	2000464c <__aeabi_dsub+0x244>
200044c0:	0264      	lsls	r4, r4, #9
200044c2:	0a65      	lsrs	r5, r4, #9
200044c4:	2d00      	cmp	r5, #0
200044c6:	d100      	bne.n	200044ca <__aeabi_dsub+0xc2>
200044c8:	e0f6      	b.n	200046b8 <__aeabi_dsub+0x2b0>
200044ca:	0028      	movs	r0, r5
200044cc:	f7ff f88c 	bl	200035e8 <__clzsi2>
200044d0:	0003      	movs	r3, r0
200044d2:	3b08      	subs	r3, #8
200044d4:	2b1f      	cmp	r3, #31
200044d6:	dd00      	ble.n	200044da <__aeabi_dsub+0xd2>
200044d8:	e0e9      	b.n	200046ae <__aeabi_dsub+0x2a6>
200044da:	2220      	movs	r2, #32
200044dc:	003c      	movs	r4, r7
200044de:	1ad2      	subs	r2, r2, r3
200044e0:	409d      	lsls	r5, r3
200044e2:	40d4      	lsrs	r4, r2
200044e4:	409f      	lsls	r7, r3
200044e6:	4325      	orrs	r5, r4
200044e8:	429e      	cmp	r6, r3
200044ea:	dd00      	ble.n	200044ee <__aeabi_dsub+0xe6>
200044ec:	e0db      	b.n	200046a6 <__aeabi_dsub+0x29e>
200044ee:	1b9e      	subs	r6, r3, r6
200044f0:	1c73      	adds	r3, r6, #1
200044f2:	2b1f      	cmp	r3, #31
200044f4:	dd00      	ble.n	200044f8 <__aeabi_dsub+0xf0>
200044f6:	e10a      	b.n	2000470e <__aeabi_dsub+0x306>
200044f8:	2220      	movs	r2, #32
200044fa:	0038      	movs	r0, r7
200044fc:	1ad2      	subs	r2, r2, r3
200044fe:	0029      	movs	r1, r5
20004500:	4097      	lsls	r7, r2
20004502:	002c      	movs	r4, r5
20004504:	4091      	lsls	r1, r2
20004506:	40d8      	lsrs	r0, r3
20004508:	1e7a      	subs	r2, r7, #1
2000450a:	4197      	sbcs	r7, r2
2000450c:	40dc      	lsrs	r4, r3
2000450e:	2600      	movs	r6, #0
20004510:	4301      	orrs	r1, r0
20004512:	430f      	orrs	r7, r1
20004514:	077b      	lsls	r3, r7, #29
20004516:	d009      	beq.n	2000452c <__aeabi_dsub+0x124>
20004518:	230f      	movs	r3, #15
2000451a:	403b      	ands	r3, r7
2000451c:	2b04      	cmp	r3, #4
2000451e:	d005      	beq.n	2000452c <__aeabi_dsub+0x124>
20004520:	1d3b      	adds	r3, r7, #4
20004522:	42bb      	cmp	r3, r7
20004524:	41bf      	sbcs	r7, r7
20004526:	427f      	negs	r7, r7
20004528:	19e4      	adds	r4, r4, r7
2000452a:	001f      	movs	r7, r3
2000452c:	0223      	lsls	r3, r4, #8
2000452e:	d525      	bpl.n	2000457c <__aeabi_dsub+0x174>
20004530:	4b86      	ldr	r3, [pc, #536]	; (2000474c <__aeabi_dsub+0x344>)
20004532:	3601      	adds	r6, #1
20004534:	429e      	cmp	r6, r3
20004536:	d100      	bne.n	2000453a <__aeabi_dsub+0x132>
20004538:	e0af      	b.n	2000469a <__aeabi_dsub+0x292>
2000453a:	4b85      	ldr	r3, [pc, #532]	; (20004750 <__aeabi_dsub+0x348>)
2000453c:	2501      	movs	r5, #1
2000453e:	401c      	ands	r4, r3
20004540:	4643      	mov	r3, r8
20004542:	0762      	lsls	r2, r4, #29
20004544:	08ff      	lsrs	r7, r7, #3
20004546:	0264      	lsls	r4, r4, #9
20004548:	0576      	lsls	r6, r6, #21
2000454a:	4317      	orrs	r7, r2
2000454c:	0b24      	lsrs	r4, r4, #12
2000454e:	0d76      	lsrs	r6, r6, #21
20004550:	401d      	ands	r5, r3
20004552:	2100      	movs	r1, #0
20004554:	0324      	lsls	r4, r4, #12
20004556:	0b23      	lsrs	r3, r4, #12
20004558:	0d0c      	lsrs	r4, r1, #20
2000455a:	4a7e      	ldr	r2, [pc, #504]	; (20004754 <__aeabi_dsub+0x34c>)
2000455c:	0524      	lsls	r4, r4, #20
2000455e:	431c      	orrs	r4, r3
20004560:	4014      	ands	r4, r2
20004562:	0533      	lsls	r3, r6, #20
20004564:	4323      	orrs	r3, r4
20004566:	005b      	lsls	r3, r3, #1
20004568:	07ed      	lsls	r5, r5, #31
2000456a:	085b      	lsrs	r3, r3, #1
2000456c:	432b      	orrs	r3, r5
2000456e:	0038      	movs	r0, r7
20004570:	0019      	movs	r1, r3
20004572:	bc1c      	pop	{r2, r3, r4}
20004574:	4690      	mov	r8, r2
20004576:	4699      	mov	r9, r3
20004578:	46a2      	mov	sl, r4
2000457a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2000457c:	2501      	movs	r5, #1
2000457e:	4643      	mov	r3, r8
20004580:	0762      	lsls	r2, r4, #29
20004582:	08ff      	lsrs	r7, r7, #3
20004584:	4317      	orrs	r7, r2
20004586:	08e4      	lsrs	r4, r4, #3
20004588:	401d      	ands	r5, r3
2000458a:	4b70      	ldr	r3, [pc, #448]	; (2000474c <__aeabi_dsub+0x344>)
2000458c:	429e      	cmp	r6, r3
2000458e:	d036      	beq.n	200045fe <__aeabi_dsub+0x1f6>
20004590:	0324      	lsls	r4, r4, #12
20004592:	0576      	lsls	r6, r6, #21
20004594:	0b24      	lsrs	r4, r4, #12
20004596:	0d76      	lsrs	r6, r6, #21
20004598:	e7db      	b.n	20004552 <__aeabi_dsub+0x14a>
2000459a:	4663      	mov	r3, ip
2000459c:	1af3      	subs	r3, r6, r3
2000459e:	2b00      	cmp	r3, #0
200045a0:	dc00      	bgt.n	200045a4 <__aeabi_dsub+0x19c>
200045a2:	e094      	b.n	200046ce <__aeabi_dsub+0x2c6>
200045a4:	4660      	mov	r0, ip
200045a6:	2800      	cmp	r0, #0
200045a8:	d035      	beq.n	20004616 <__aeabi_dsub+0x20e>
200045aa:	4868      	ldr	r0, [pc, #416]	; (2000474c <__aeabi_dsub+0x344>)
200045ac:	4286      	cmp	r6, r0
200045ae:	d0b1      	beq.n	20004514 <__aeabi_dsub+0x10c>
200045b0:	2780      	movs	r7, #128	; 0x80
200045b2:	043f      	lsls	r7, r7, #16
200045b4:	4339      	orrs	r1, r7
200045b6:	2b38      	cmp	r3, #56	; 0x38
200045b8:	dc00      	bgt.n	200045bc <__aeabi_dsub+0x1b4>
200045ba:	e0fd      	b.n	200047b8 <__aeabi_dsub+0x3b0>
200045bc:	430a      	orrs	r2, r1
200045be:	0017      	movs	r7, r2
200045c0:	2100      	movs	r1, #0
200045c2:	1e7a      	subs	r2, r7, #1
200045c4:	4197      	sbcs	r7, r2
200045c6:	4457      	add	r7, sl
200045c8:	4557      	cmp	r7, sl
200045ca:	4180      	sbcs	r0, r0
200045cc:	1909      	adds	r1, r1, r4
200045ce:	4244      	negs	r4, r0
200045d0:	190c      	adds	r4, r1, r4
200045d2:	0223      	lsls	r3, r4, #8
200045d4:	d53a      	bpl.n	2000464c <__aeabi_dsub+0x244>
200045d6:	4b5d      	ldr	r3, [pc, #372]	; (2000474c <__aeabi_dsub+0x344>)
200045d8:	3601      	adds	r6, #1
200045da:	429e      	cmp	r6, r3
200045dc:	d100      	bne.n	200045e0 <__aeabi_dsub+0x1d8>
200045de:	e14b      	b.n	20004878 <__aeabi_dsub+0x470>
200045e0:	2201      	movs	r2, #1
200045e2:	4b5b      	ldr	r3, [pc, #364]	; (20004750 <__aeabi_dsub+0x348>)
200045e4:	401c      	ands	r4, r3
200045e6:	087b      	lsrs	r3, r7, #1
200045e8:	4017      	ands	r7, r2
200045ea:	431f      	orrs	r7, r3
200045ec:	07e2      	lsls	r2, r4, #31
200045ee:	4317      	orrs	r7, r2
200045f0:	0864      	lsrs	r4, r4, #1
200045f2:	e78f      	b.n	20004514 <__aeabi_dsub+0x10c>
200045f4:	0008      	movs	r0, r1
200045f6:	4310      	orrs	r0, r2
200045f8:	d000      	beq.n	200045fc <__aeabi_dsub+0x1f4>
200045fa:	e724      	b.n	20004446 <__aeabi_dsub+0x3e>
200045fc:	e721      	b.n	20004442 <__aeabi_dsub+0x3a>
200045fe:	0023      	movs	r3, r4
20004600:	433b      	orrs	r3, r7
20004602:	d100      	bne.n	20004606 <__aeabi_dsub+0x1fe>
20004604:	e1b9      	b.n	2000497a <__aeabi_dsub+0x572>
20004606:	2280      	movs	r2, #128	; 0x80
20004608:	0312      	lsls	r2, r2, #12
2000460a:	4314      	orrs	r4, r2
2000460c:	0324      	lsls	r4, r4, #12
2000460e:	0b24      	lsrs	r4, r4, #12
20004610:	e79f      	b.n	20004552 <__aeabi_dsub+0x14a>
20004612:	002e      	movs	r6, r5
20004614:	e77e      	b.n	20004514 <__aeabi_dsub+0x10c>
20004616:	0008      	movs	r0, r1
20004618:	4310      	orrs	r0, r2
2000461a:	d100      	bne.n	2000461e <__aeabi_dsub+0x216>
2000461c:	e0ca      	b.n	200047b4 <__aeabi_dsub+0x3ac>
2000461e:	1e58      	subs	r0, r3, #1
20004620:	4684      	mov	ip, r0
20004622:	2800      	cmp	r0, #0
20004624:	d000      	beq.n	20004628 <__aeabi_dsub+0x220>
20004626:	e0e7      	b.n	200047f8 <__aeabi_dsub+0x3f0>
20004628:	4452      	add	r2, sl
2000462a:	4552      	cmp	r2, sl
2000462c:	4180      	sbcs	r0, r0
2000462e:	1864      	adds	r4, r4, r1
20004630:	4240      	negs	r0, r0
20004632:	1824      	adds	r4, r4, r0
20004634:	0017      	movs	r7, r2
20004636:	2601      	movs	r6, #1
20004638:	0223      	lsls	r3, r4, #8
2000463a:	d507      	bpl.n	2000464c <__aeabi_dsub+0x244>
2000463c:	2602      	movs	r6, #2
2000463e:	e7cf      	b.n	200045e0 <__aeabi_dsub+0x1d8>
20004640:	4664      	mov	r4, ip
20004642:	432c      	orrs	r4, r5
20004644:	d100      	bne.n	20004648 <__aeabi_dsub+0x240>
20004646:	e1b3      	b.n	200049b0 <__aeabi_dsub+0x5a8>
20004648:	002c      	movs	r4, r5
2000464a:	4667      	mov	r7, ip
2000464c:	077b      	lsls	r3, r7, #29
2000464e:	d000      	beq.n	20004652 <__aeabi_dsub+0x24a>
20004650:	e762      	b.n	20004518 <__aeabi_dsub+0x110>
20004652:	0763      	lsls	r3, r4, #29
20004654:	08ff      	lsrs	r7, r7, #3
20004656:	431f      	orrs	r7, r3
20004658:	2501      	movs	r5, #1
2000465a:	4643      	mov	r3, r8
2000465c:	08e4      	lsrs	r4, r4, #3
2000465e:	401d      	ands	r5, r3
20004660:	e793      	b.n	2000458a <__aeabi_dsub+0x182>
20004662:	2d00      	cmp	r5, #0
20004664:	d178      	bne.n	20004758 <__aeabi_dsub+0x350>
20004666:	1c75      	adds	r5, r6, #1
20004668:	056d      	lsls	r5, r5, #21
2000466a:	0d6d      	lsrs	r5, r5, #21
2000466c:	2d01      	cmp	r5, #1
2000466e:	dc00      	bgt.n	20004672 <__aeabi_dsub+0x26a>
20004670:	e0f2      	b.n	20004858 <__aeabi_dsub+0x450>
20004672:	4650      	mov	r0, sl
20004674:	1a80      	subs	r0, r0, r2
20004676:	4582      	cmp	sl, r0
20004678:	41bf      	sbcs	r7, r7
2000467a:	1a65      	subs	r5, r4, r1
2000467c:	427f      	negs	r7, r7
2000467e:	1bed      	subs	r5, r5, r7
20004680:	4684      	mov	ip, r0
20004682:	0228      	lsls	r0, r5, #8
20004684:	d400      	bmi.n	20004688 <__aeabi_dsub+0x280>
20004686:	e08c      	b.n	200047a2 <__aeabi_dsub+0x39a>
20004688:	4650      	mov	r0, sl
2000468a:	1a17      	subs	r7, r2, r0
2000468c:	42ba      	cmp	r2, r7
2000468e:	4192      	sbcs	r2, r2
20004690:	1b0c      	subs	r4, r1, r4
20004692:	4255      	negs	r5, r2
20004694:	1b65      	subs	r5, r4, r5
20004696:	4698      	mov	r8, r3
20004698:	e714      	b.n	200044c4 <__aeabi_dsub+0xbc>
2000469a:	2501      	movs	r5, #1
2000469c:	4643      	mov	r3, r8
2000469e:	2400      	movs	r4, #0
200046a0:	401d      	ands	r5, r3
200046a2:	2700      	movs	r7, #0
200046a4:	e755      	b.n	20004552 <__aeabi_dsub+0x14a>
200046a6:	4c2a      	ldr	r4, [pc, #168]	; (20004750 <__aeabi_dsub+0x348>)
200046a8:	1af6      	subs	r6, r6, r3
200046aa:	402c      	ands	r4, r5
200046ac:	e732      	b.n	20004514 <__aeabi_dsub+0x10c>
200046ae:	003d      	movs	r5, r7
200046b0:	3828      	subs	r0, #40	; 0x28
200046b2:	4085      	lsls	r5, r0
200046b4:	2700      	movs	r7, #0
200046b6:	e717      	b.n	200044e8 <__aeabi_dsub+0xe0>
200046b8:	0038      	movs	r0, r7
200046ba:	f7fe ff95 	bl	200035e8 <__clzsi2>
200046be:	3020      	adds	r0, #32
200046c0:	e706      	b.n	200044d0 <__aeabi_dsub+0xc8>
200046c2:	430a      	orrs	r2, r1
200046c4:	0017      	movs	r7, r2
200046c6:	2100      	movs	r1, #0
200046c8:	1e7a      	subs	r2, r7, #1
200046ca:	4197      	sbcs	r7, r2
200046cc:	e6ee      	b.n	200044ac <__aeabi_dsub+0xa4>
200046ce:	2b00      	cmp	r3, #0
200046d0:	d000      	beq.n	200046d4 <__aeabi_dsub+0x2cc>
200046d2:	e0e5      	b.n	200048a0 <__aeabi_dsub+0x498>
200046d4:	1c73      	adds	r3, r6, #1
200046d6:	469c      	mov	ip, r3
200046d8:	055b      	lsls	r3, r3, #21
200046da:	0d5b      	lsrs	r3, r3, #21
200046dc:	2b01      	cmp	r3, #1
200046de:	dc00      	bgt.n	200046e2 <__aeabi_dsub+0x2da>
200046e0:	e09f      	b.n	20004822 <__aeabi_dsub+0x41a>
200046e2:	4b1a      	ldr	r3, [pc, #104]	; (2000474c <__aeabi_dsub+0x344>)
200046e4:	459c      	cmp	ip, r3
200046e6:	d100      	bne.n	200046ea <__aeabi_dsub+0x2e2>
200046e8:	e0c5      	b.n	20004876 <__aeabi_dsub+0x46e>
200046ea:	4452      	add	r2, sl
200046ec:	4552      	cmp	r2, sl
200046ee:	4180      	sbcs	r0, r0
200046f0:	1864      	adds	r4, r4, r1
200046f2:	4240      	negs	r0, r0
200046f4:	1824      	adds	r4, r4, r0
200046f6:	07e7      	lsls	r7, r4, #31
200046f8:	0852      	lsrs	r2, r2, #1
200046fa:	4317      	orrs	r7, r2
200046fc:	0864      	lsrs	r4, r4, #1
200046fe:	4666      	mov	r6, ip
20004700:	e708      	b.n	20004514 <__aeabi_dsub+0x10c>
20004702:	4812      	ldr	r0, [pc, #72]	; (2000474c <__aeabi_dsub+0x344>)
20004704:	4285      	cmp	r5, r0
20004706:	d100      	bne.n	2000470a <__aeabi_dsub+0x302>
20004708:	e085      	b.n	20004816 <__aeabi_dsub+0x40e>
2000470a:	001d      	movs	r5, r3
2000470c:	e6bc      	b.n	20004488 <__aeabi_dsub+0x80>
2000470e:	0029      	movs	r1, r5
20004710:	3e1f      	subs	r6, #31
20004712:	40f1      	lsrs	r1, r6
20004714:	2b20      	cmp	r3, #32
20004716:	d100      	bne.n	2000471a <__aeabi_dsub+0x312>
20004718:	e07f      	b.n	2000481a <__aeabi_dsub+0x412>
2000471a:	2240      	movs	r2, #64	; 0x40
2000471c:	1ad3      	subs	r3, r2, r3
2000471e:	409d      	lsls	r5, r3
20004720:	432f      	orrs	r7, r5
20004722:	1e7d      	subs	r5, r7, #1
20004724:	41af      	sbcs	r7, r5
20004726:	2400      	movs	r4, #0
20004728:	430f      	orrs	r7, r1
2000472a:	2600      	movs	r6, #0
2000472c:	e78e      	b.n	2000464c <__aeabi_dsub+0x244>
2000472e:	002b      	movs	r3, r5
20004730:	000f      	movs	r7, r1
20004732:	3b20      	subs	r3, #32
20004734:	40df      	lsrs	r7, r3
20004736:	2d20      	cmp	r5, #32
20004738:	d071      	beq.n	2000481e <__aeabi_dsub+0x416>
2000473a:	2340      	movs	r3, #64	; 0x40
2000473c:	1b5d      	subs	r5, r3, r5
2000473e:	40a9      	lsls	r1, r5
20004740:	430a      	orrs	r2, r1
20004742:	1e51      	subs	r1, r2, #1
20004744:	418a      	sbcs	r2, r1
20004746:	2100      	movs	r1, #0
20004748:	4317      	orrs	r7, r2
2000474a:	e6af      	b.n	200044ac <__aeabi_dsub+0xa4>
2000474c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20004750:	ff7fffff 			; <UNDEFINED> instruction: 0xff7fffff
20004754:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>
20004758:	2e00      	cmp	r6, #0
2000475a:	d03e      	beq.n	200047da <__aeabi_dsub+0x3d2>
2000475c:	4eb3      	ldr	r6, [pc, #716]	; (20004a2c <__aeabi_dsub+0x624>)
2000475e:	45b4      	cmp	ip, r6
20004760:	d045      	beq.n	200047ee <__aeabi_dsub+0x3e6>
20004762:	2680      	movs	r6, #128	; 0x80
20004764:	0436      	lsls	r6, r6, #16
20004766:	426d      	negs	r5, r5
20004768:	4334      	orrs	r4, r6
2000476a:	2d38      	cmp	r5, #56	; 0x38
2000476c:	dd00      	ble.n	20004770 <__aeabi_dsub+0x368>
2000476e:	e0a8      	b.n	200048c2 <__aeabi_dsub+0x4ba>
20004770:	2d1f      	cmp	r5, #31
20004772:	dd00      	ble.n	20004776 <__aeabi_dsub+0x36e>
20004774:	e11f      	b.n	200049b6 <__aeabi_dsub+0x5ae>
20004776:	2620      	movs	r6, #32
20004778:	0027      	movs	r7, r4
2000477a:	4650      	mov	r0, sl
2000477c:	1b76      	subs	r6, r6, r5
2000477e:	40b7      	lsls	r7, r6
20004780:	40e8      	lsrs	r0, r5
20004782:	4307      	orrs	r7, r0
20004784:	4650      	mov	r0, sl
20004786:	40b0      	lsls	r0, r6
20004788:	1e46      	subs	r6, r0, #1
2000478a:	41b0      	sbcs	r0, r6
2000478c:	40ec      	lsrs	r4, r5
2000478e:	4338      	orrs	r0, r7
20004790:	1a17      	subs	r7, r2, r0
20004792:	42ba      	cmp	r2, r7
20004794:	4192      	sbcs	r2, r2
20004796:	1b0c      	subs	r4, r1, r4
20004798:	4252      	negs	r2, r2
2000479a:	1aa4      	subs	r4, r4, r2
2000479c:	4666      	mov	r6, ip
2000479e:	4698      	mov	r8, r3
200047a0:	e68b      	b.n	200044ba <__aeabi_dsub+0xb2>
200047a2:	4664      	mov	r4, ip
200047a4:	4667      	mov	r7, ip
200047a6:	432c      	orrs	r4, r5
200047a8:	d000      	beq.n	200047ac <__aeabi_dsub+0x3a4>
200047aa:	e68b      	b.n	200044c4 <__aeabi_dsub+0xbc>
200047ac:	2500      	movs	r5, #0
200047ae:	2600      	movs	r6, #0
200047b0:	2700      	movs	r7, #0
200047b2:	e6ea      	b.n	2000458a <__aeabi_dsub+0x182>
200047b4:	001e      	movs	r6, r3
200047b6:	e6ad      	b.n	20004514 <__aeabi_dsub+0x10c>
200047b8:	2b1f      	cmp	r3, #31
200047ba:	dc60      	bgt.n	2000487e <__aeabi_dsub+0x476>
200047bc:	2720      	movs	r7, #32
200047be:	1af8      	subs	r0, r7, r3
200047c0:	000f      	movs	r7, r1
200047c2:	4684      	mov	ip, r0
200047c4:	4087      	lsls	r7, r0
200047c6:	0010      	movs	r0, r2
200047c8:	40d8      	lsrs	r0, r3
200047ca:	4307      	orrs	r7, r0
200047cc:	4660      	mov	r0, ip
200047ce:	4082      	lsls	r2, r0
200047d0:	1e50      	subs	r0, r2, #1
200047d2:	4182      	sbcs	r2, r0
200047d4:	40d9      	lsrs	r1, r3
200047d6:	4317      	orrs	r7, r2
200047d8:	e6f5      	b.n	200045c6 <__aeabi_dsub+0x1be>
200047da:	0026      	movs	r6, r4
200047dc:	4650      	mov	r0, sl
200047de:	4306      	orrs	r6, r0
200047e0:	d005      	beq.n	200047ee <__aeabi_dsub+0x3e6>
200047e2:	43ed      	mvns	r5, r5
200047e4:	2d00      	cmp	r5, #0
200047e6:	d0d3      	beq.n	20004790 <__aeabi_dsub+0x388>
200047e8:	4e90      	ldr	r6, [pc, #576]	; (20004a2c <__aeabi_dsub+0x624>)
200047ea:	45b4      	cmp	ip, r6
200047ec:	d1bd      	bne.n	2000476a <__aeabi_dsub+0x362>
200047ee:	000c      	movs	r4, r1
200047f0:	0017      	movs	r7, r2
200047f2:	4666      	mov	r6, ip
200047f4:	4698      	mov	r8, r3
200047f6:	e68d      	b.n	20004514 <__aeabi_dsub+0x10c>
200047f8:	488c      	ldr	r0, [pc, #560]	; (20004a2c <__aeabi_dsub+0x624>)
200047fa:	4283      	cmp	r3, r0
200047fc:	d00b      	beq.n	20004816 <__aeabi_dsub+0x40e>
200047fe:	4663      	mov	r3, ip
20004800:	e6d9      	b.n	200045b6 <__aeabi_dsub+0x1ae>
20004802:	2d00      	cmp	r5, #0
20004804:	d000      	beq.n	20004808 <__aeabi_dsub+0x400>
20004806:	e096      	b.n	20004936 <__aeabi_dsub+0x52e>
20004808:	0008      	movs	r0, r1
2000480a:	4310      	orrs	r0, r2
2000480c:	d100      	bne.n	20004810 <__aeabi_dsub+0x408>
2000480e:	e0e2      	b.n	200049d6 <__aeabi_dsub+0x5ce>
20004810:	000c      	movs	r4, r1
20004812:	0017      	movs	r7, r2
20004814:	4698      	mov	r8, r3
20004816:	4e85      	ldr	r6, [pc, #532]	; (20004a2c <__aeabi_dsub+0x624>)
20004818:	e67c      	b.n	20004514 <__aeabi_dsub+0x10c>
2000481a:	2500      	movs	r5, #0
2000481c:	e780      	b.n	20004720 <__aeabi_dsub+0x318>
2000481e:	2100      	movs	r1, #0
20004820:	e78e      	b.n	20004740 <__aeabi_dsub+0x338>
20004822:	0023      	movs	r3, r4
20004824:	4650      	mov	r0, sl
20004826:	4303      	orrs	r3, r0
20004828:	2e00      	cmp	r6, #0
2000482a:	d000      	beq.n	2000482e <__aeabi_dsub+0x426>
2000482c:	e0a8      	b.n	20004980 <__aeabi_dsub+0x578>
2000482e:	2b00      	cmp	r3, #0
20004830:	d100      	bne.n	20004834 <__aeabi_dsub+0x42c>
20004832:	e0de      	b.n	200049f2 <__aeabi_dsub+0x5ea>
20004834:	000b      	movs	r3, r1
20004836:	4313      	orrs	r3, r2
20004838:	d100      	bne.n	2000483c <__aeabi_dsub+0x434>
2000483a:	e66b      	b.n	20004514 <__aeabi_dsub+0x10c>
2000483c:	4452      	add	r2, sl
2000483e:	4552      	cmp	r2, sl
20004840:	4180      	sbcs	r0, r0
20004842:	1864      	adds	r4, r4, r1
20004844:	4240      	negs	r0, r0
20004846:	1824      	adds	r4, r4, r0
20004848:	0017      	movs	r7, r2
2000484a:	0223      	lsls	r3, r4, #8
2000484c:	d400      	bmi.n	20004850 <__aeabi_dsub+0x448>
2000484e:	e6fd      	b.n	2000464c <__aeabi_dsub+0x244>
20004850:	4b77      	ldr	r3, [pc, #476]	; (20004a30 <__aeabi_dsub+0x628>)
20004852:	4666      	mov	r6, ip
20004854:	401c      	ands	r4, r3
20004856:	e65d      	b.n	20004514 <__aeabi_dsub+0x10c>
20004858:	0025      	movs	r5, r4
2000485a:	4650      	mov	r0, sl
2000485c:	4305      	orrs	r5, r0
2000485e:	2e00      	cmp	r6, #0
20004860:	d1cf      	bne.n	20004802 <__aeabi_dsub+0x3fa>
20004862:	2d00      	cmp	r5, #0
20004864:	d14f      	bne.n	20004906 <__aeabi_dsub+0x4fe>
20004866:	000c      	movs	r4, r1
20004868:	4314      	orrs	r4, r2
2000486a:	d100      	bne.n	2000486e <__aeabi_dsub+0x466>
2000486c:	e0a0      	b.n	200049b0 <__aeabi_dsub+0x5a8>
2000486e:	000c      	movs	r4, r1
20004870:	0017      	movs	r7, r2
20004872:	4698      	mov	r8, r3
20004874:	e64e      	b.n	20004514 <__aeabi_dsub+0x10c>
20004876:	4666      	mov	r6, ip
20004878:	2400      	movs	r4, #0
2000487a:	2700      	movs	r7, #0
2000487c:	e685      	b.n	2000458a <__aeabi_dsub+0x182>
2000487e:	001f      	movs	r7, r3
20004880:	0008      	movs	r0, r1
20004882:	3f20      	subs	r7, #32
20004884:	40f8      	lsrs	r0, r7
20004886:	0007      	movs	r7, r0
20004888:	2b20      	cmp	r3, #32
2000488a:	d100      	bne.n	2000488e <__aeabi_dsub+0x486>
2000488c:	e08e      	b.n	200049ac <__aeabi_dsub+0x5a4>
2000488e:	2040      	movs	r0, #64	; 0x40
20004890:	1ac3      	subs	r3, r0, r3
20004892:	4099      	lsls	r1, r3
20004894:	430a      	orrs	r2, r1
20004896:	1e51      	subs	r1, r2, #1
20004898:	418a      	sbcs	r2, r1
2000489a:	2100      	movs	r1, #0
2000489c:	4317      	orrs	r7, r2
2000489e:	e692      	b.n	200045c6 <__aeabi_dsub+0x1be>
200048a0:	2e00      	cmp	r6, #0
200048a2:	d114      	bne.n	200048ce <__aeabi_dsub+0x4c6>
200048a4:	0026      	movs	r6, r4
200048a6:	4650      	mov	r0, sl
200048a8:	4306      	orrs	r6, r0
200048aa:	d062      	beq.n	20004972 <__aeabi_dsub+0x56a>
200048ac:	43db      	mvns	r3, r3
200048ae:	2b00      	cmp	r3, #0
200048b0:	d15c      	bne.n	2000496c <__aeabi_dsub+0x564>
200048b2:	1887      	adds	r7, r0, r2
200048b4:	4297      	cmp	r7, r2
200048b6:	4192      	sbcs	r2, r2
200048b8:	1864      	adds	r4, r4, r1
200048ba:	4252      	negs	r2, r2
200048bc:	18a4      	adds	r4, r4, r2
200048be:	4666      	mov	r6, ip
200048c0:	e687      	b.n	200045d2 <__aeabi_dsub+0x1ca>
200048c2:	4650      	mov	r0, sl
200048c4:	4320      	orrs	r0, r4
200048c6:	1e44      	subs	r4, r0, #1
200048c8:	41a0      	sbcs	r0, r4
200048ca:	2400      	movs	r4, #0
200048cc:	e760      	b.n	20004790 <__aeabi_dsub+0x388>
200048ce:	4e57      	ldr	r6, [pc, #348]	; (20004a2c <__aeabi_dsub+0x624>)
200048d0:	45b4      	cmp	ip, r6
200048d2:	d04e      	beq.n	20004972 <__aeabi_dsub+0x56a>
200048d4:	2680      	movs	r6, #128	; 0x80
200048d6:	0436      	lsls	r6, r6, #16
200048d8:	425b      	negs	r3, r3
200048da:	4334      	orrs	r4, r6
200048dc:	2b38      	cmp	r3, #56	; 0x38
200048de:	dd00      	ble.n	200048e2 <__aeabi_dsub+0x4da>
200048e0:	e07f      	b.n	200049e2 <__aeabi_dsub+0x5da>
200048e2:	2b1f      	cmp	r3, #31
200048e4:	dd00      	ble.n	200048e8 <__aeabi_dsub+0x4e0>
200048e6:	e08b      	b.n	20004a00 <__aeabi_dsub+0x5f8>
200048e8:	2620      	movs	r6, #32
200048ea:	0027      	movs	r7, r4
200048ec:	4650      	mov	r0, sl
200048ee:	1af6      	subs	r6, r6, r3
200048f0:	40b7      	lsls	r7, r6
200048f2:	40d8      	lsrs	r0, r3
200048f4:	4307      	orrs	r7, r0
200048f6:	4650      	mov	r0, sl
200048f8:	40b0      	lsls	r0, r6
200048fa:	1e46      	subs	r6, r0, #1
200048fc:	41b0      	sbcs	r0, r6
200048fe:	4307      	orrs	r7, r0
20004900:	40dc      	lsrs	r4, r3
20004902:	18bf      	adds	r7, r7, r2
20004904:	e7d6      	b.n	200048b4 <__aeabi_dsub+0x4ac>
20004906:	000d      	movs	r5, r1
20004908:	4315      	orrs	r5, r2
2000490a:	d100      	bne.n	2000490e <__aeabi_dsub+0x506>
2000490c:	e602      	b.n	20004514 <__aeabi_dsub+0x10c>
2000490e:	4650      	mov	r0, sl
20004910:	1a80      	subs	r0, r0, r2
20004912:	4582      	cmp	sl, r0
20004914:	41bf      	sbcs	r7, r7
20004916:	1a65      	subs	r5, r4, r1
20004918:	427f      	negs	r7, r7
2000491a:	1bed      	subs	r5, r5, r7
2000491c:	4684      	mov	ip, r0
2000491e:	0228      	lsls	r0, r5, #8
20004920:	d400      	bmi.n	20004924 <__aeabi_dsub+0x51c>
20004922:	e68d      	b.n	20004640 <__aeabi_dsub+0x238>
20004924:	4650      	mov	r0, sl
20004926:	1a17      	subs	r7, r2, r0
20004928:	42ba      	cmp	r2, r7
2000492a:	4192      	sbcs	r2, r2
2000492c:	1b0c      	subs	r4, r1, r4
2000492e:	4252      	negs	r2, r2
20004930:	1aa4      	subs	r4, r4, r2
20004932:	4698      	mov	r8, r3
20004934:	e5ee      	b.n	20004514 <__aeabi_dsub+0x10c>
20004936:	000d      	movs	r5, r1
20004938:	4315      	orrs	r5, r2
2000493a:	d100      	bne.n	2000493e <__aeabi_dsub+0x536>
2000493c:	e76b      	b.n	20004816 <__aeabi_dsub+0x40e>
2000493e:	4650      	mov	r0, sl
20004940:	0767      	lsls	r7, r4, #29
20004942:	08c0      	lsrs	r0, r0, #3
20004944:	4307      	orrs	r7, r0
20004946:	2080      	movs	r0, #128	; 0x80
20004948:	08e4      	lsrs	r4, r4, #3
2000494a:	0300      	lsls	r0, r0, #12
2000494c:	4204      	tst	r4, r0
2000494e:	d007      	beq.n	20004960 <__aeabi_dsub+0x558>
20004950:	08cd      	lsrs	r5, r1, #3
20004952:	4205      	tst	r5, r0
20004954:	d104      	bne.n	20004960 <__aeabi_dsub+0x558>
20004956:	002c      	movs	r4, r5
20004958:	4698      	mov	r8, r3
2000495a:	08d7      	lsrs	r7, r2, #3
2000495c:	0749      	lsls	r1, r1, #29
2000495e:	430f      	orrs	r7, r1
20004960:	0f7b      	lsrs	r3, r7, #29
20004962:	00e4      	lsls	r4, r4, #3
20004964:	431c      	orrs	r4, r3
20004966:	00ff      	lsls	r7, r7, #3
20004968:	4e30      	ldr	r6, [pc, #192]	; (20004a2c <__aeabi_dsub+0x624>)
2000496a:	e5d3      	b.n	20004514 <__aeabi_dsub+0x10c>
2000496c:	4e2f      	ldr	r6, [pc, #188]	; (20004a2c <__aeabi_dsub+0x624>)
2000496e:	45b4      	cmp	ip, r6
20004970:	d1b4      	bne.n	200048dc <__aeabi_dsub+0x4d4>
20004972:	000c      	movs	r4, r1
20004974:	0017      	movs	r7, r2
20004976:	4666      	mov	r6, ip
20004978:	e5cc      	b.n	20004514 <__aeabi_dsub+0x10c>
2000497a:	2700      	movs	r7, #0
2000497c:	2400      	movs	r4, #0
2000497e:	e5e8      	b.n	20004552 <__aeabi_dsub+0x14a>
20004980:	2b00      	cmp	r3, #0
20004982:	d039      	beq.n	200049f8 <__aeabi_dsub+0x5f0>
20004984:	000b      	movs	r3, r1
20004986:	4313      	orrs	r3, r2
20004988:	d100      	bne.n	2000498c <__aeabi_dsub+0x584>
2000498a:	e744      	b.n	20004816 <__aeabi_dsub+0x40e>
2000498c:	08c0      	lsrs	r0, r0, #3
2000498e:	0767      	lsls	r7, r4, #29
20004990:	4307      	orrs	r7, r0
20004992:	2080      	movs	r0, #128	; 0x80
20004994:	08e4      	lsrs	r4, r4, #3
20004996:	0300      	lsls	r0, r0, #12
20004998:	4204      	tst	r4, r0
2000499a:	d0e1      	beq.n	20004960 <__aeabi_dsub+0x558>
2000499c:	08cb      	lsrs	r3, r1, #3
2000499e:	4203      	tst	r3, r0
200049a0:	d1de      	bne.n	20004960 <__aeabi_dsub+0x558>
200049a2:	08d7      	lsrs	r7, r2, #3
200049a4:	0749      	lsls	r1, r1, #29
200049a6:	430f      	orrs	r7, r1
200049a8:	001c      	movs	r4, r3
200049aa:	e7d9      	b.n	20004960 <__aeabi_dsub+0x558>
200049ac:	2100      	movs	r1, #0
200049ae:	e771      	b.n	20004894 <__aeabi_dsub+0x48c>
200049b0:	2500      	movs	r5, #0
200049b2:	2700      	movs	r7, #0
200049b4:	e5e9      	b.n	2000458a <__aeabi_dsub+0x182>
200049b6:	002e      	movs	r6, r5
200049b8:	0027      	movs	r7, r4
200049ba:	3e20      	subs	r6, #32
200049bc:	40f7      	lsrs	r7, r6
200049be:	2d20      	cmp	r5, #32
200049c0:	d02f      	beq.n	20004a22 <__aeabi_dsub+0x61a>
200049c2:	2640      	movs	r6, #64	; 0x40
200049c4:	1b75      	subs	r5, r6, r5
200049c6:	40ac      	lsls	r4, r5
200049c8:	4650      	mov	r0, sl
200049ca:	4320      	orrs	r0, r4
200049cc:	1e44      	subs	r4, r0, #1
200049ce:	41a0      	sbcs	r0, r4
200049d0:	2400      	movs	r4, #0
200049d2:	4338      	orrs	r0, r7
200049d4:	e6dc      	b.n	20004790 <__aeabi_dsub+0x388>
200049d6:	2480      	movs	r4, #128	; 0x80
200049d8:	2500      	movs	r5, #0
200049da:	0324      	lsls	r4, r4, #12
200049dc:	4e13      	ldr	r6, [pc, #76]	; (20004a2c <__aeabi_dsub+0x624>)
200049de:	2700      	movs	r7, #0
200049e0:	e5d3      	b.n	2000458a <__aeabi_dsub+0x182>
200049e2:	4650      	mov	r0, sl
200049e4:	4320      	orrs	r0, r4
200049e6:	0007      	movs	r7, r0
200049e8:	1e78      	subs	r0, r7, #1
200049ea:	4187      	sbcs	r7, r0
200049ec:	2400      	movs	r4, #0
200049ee:	18bf      	adds	r7, r7, r2
200049f0:	e760      	b.n	200048b4 <__aeabi_dsub+0x4ac>
200049f2:	000c      	movs	r4, r1
200049f4:	0017      	movs	r7, r2
200049f6:	e58d      	b.n	20004514 <__aeabi_dsub+0x10c>
200049f8:	000c      	movs	r4, r1
200049fa:	0017      	movs	r7, r2
200049fc:	4e0b      	ldr	r6, [pc, #44]	; (20004a2c <__aeabi_dsub+0x624>)
200049fe:	e589      	b.n	20004514 <__aeabi_dsub+0x10c>
20004a00:	001e      	movs	r6, r3
20004a02:	0027      	movs	r7, r4
20004a04:	3e20      	subs	r6, #32
20004a06:	40f7      	lsrs	r7, r6
20004a08:	2b20      	cmp	r3, #32
20004a0a:	d00c      	beq.n	20004a26 <__aeabi_dsub+0x61e>
20004a0c:	2640      	movs	r6, #64	; 0x40
20004a0e:	1af3      	subs	r3, r6, r3
20004a10:	409c      	lsls	r4, r3
20004a12:	4650      	mov	r0, sl
20004a14:	4320      	orrs	r0, r4
20004a16:	1e44      	subs	r4, r0, #1
20004a18:	41a0      	sbcs	r0, r4
20004a1a:	4307      	orrs	r7, r0
20004a1c:	2400      	movs	r4, #0
20004a1e:	18bf      	adds	r7, r7, r2
20004a20:	e748      	b.n	200048b4 <__aeabi_dsub+0x4ac>
20004a22:	2400      	movs	r4, #0
20004a24:	e7d0      	b.n	200049c8 <__aeabi_dsub+0x5c0>
20004a26:	2400      	movs	r4, #0
20004a28:	e7f3      	b.n	20004a12 <__aeabi_dsub+0x60a>
20004a2a:	46c0      	nop			; (mov r8, r8)
20004a2c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20004a30:	ff7fffff 			; <UNDEFINED> instruction: 0xff7fffff

20004a34 <__aeabi_dcmpun>:
20004a34:	b570      	push	{r4, r5, r6, lr}
20004a36:	4e0e      	ldr	r6, [pc, #56]	; (20004a70 <__aeabi_dcmpun+0x3c>)
20004a38:	030d      	lsls	r5, r1, #12
20004a3a:	031c      	lsls	r4, r3, #12
20004a3c:	0049      	lsls	r1, r1, #1
20004a3e:	005b      	lsls	r3, r3, #1
20004a40:	0b2d      	lsrs	r5, r5, #12
20004a42:	0d49      	lsrs	r1, r1, #21
20004a44:	0b24      	lsrs	r4, r4, #12
20004a46:	0d5b      	lsrs	r3, r3, #21
20004a48:	42b1      	cmp	r1, r6
20004a4a:	d004      	beq.n	20004a56 <__aeabi_dcmpun+0x22>
20004a4c:	4908      	ldr	r1, [pc, #32]	; (20004a70 <__aeabi_dcmpun+0x3c>)
20004a4e:	2000      	movs	r0, #0
20004a50:	428b      	cmp	r3, r1
20004a52:	d008      	beq.n	20004a66 <__aeabi_dcmpun+0x32>
20004a54:	bd70      	pop	{r4, r5, r6, pc}
20004a56:	4305      	orrs	r5, r0
20004a58:	2001      	movs	r0, #1
20004a5a:	2d00      	cmp	r5, #0
20004a5c:	d1fa      	bne.n	20004a54 <__aeabi_dcmpun+0x20>
20004a5e:	4904      	ldr	r1, [pc, #16]	; (20004a70 <__aeabi_dcmpun+0x3c>)
20004a60:	2000      	movs	r0, #0
20004a62:	428b      	cmp	r3, r1
20004a64:	d1f6      	bne.n	20004a54 <__aeabi_dcmpun+0x20>
20004a66:	4314      	orrs	r4, r2
20004a68:	0020      	movs	r0, r4
20004a6a:	1e44      	subs	r4, r0, #1
20004a6c:	41a0      	sbcs	r0, r4
20004a6e:	e7f1      	b.n	20004a54 <__aeabi_dcmpun+0x20>
20004a70:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20004a74 <__udivsi3>:
20004a74:	2200      	movs	r2, #0
20004a76:	0843      	lsrs	r3, r0, #1
20004a78:	428b      	cmp	r3, r1
20004a7a:	d374      	bcc.n	20004b66 <__udivsi3+0xf2>
20004a7c:	0903      	lsrs	r3, r0, #4
20004a7e:	428b      	cmp	r3, r1
20004a80:	d35f      	bcc.n	20004b42 <__udivsi3+0xce>
20004a82:	0a03      	lsrs	r3, r0, #8
20004a84:	428b      	cmp	r3, r1
20004a86:	d344      	bcc.n	20004b12 <__udivsi3+0x9e>
20004a88:	0b03      	lsrs	r3, r0, #12
20004a8a:	428b      	cmp	r3, r1
20004a8c:	d328      	bcc.n	20004ae0 <__udivsi3+0x6c>
20004a8e:	0c03      	lsrs	r3, r0, #16
20004a90:	428b      	cmp	r3, r1
20004a92:	d30d      	bcc.n	20004ab0 <__udivsi3+0x3c>
20004a94:	22ff      	movs	r2, #255	; 0xff
20004a96:	0209      	lsls	r1, r1, #8
20004a98:	ba12      	rev	r2, r2
20004a9a:	0c03      	lsrs	r3, r0, #16
20004a9c:	428b      	cmp	r3, r1
20004a9e:	d302      	bcc.n	20004aa6 <__udivsi3+0x32>
20004aa0:	1212      	asrs	r2, r2, #8
20004aa2:	0209      	lsls	r1, r1, #8
20004aa4:	d065      	beq.n	20004b72 <__udivsi3+0xfe>
20004aa6:	0b03      	lsrs	r3, r0, #12
20004aa8:	428b      	cmp	r3, r1
20004aaa:	d319      	bcc.n	20004ae0 <__udivsi3+0x6c>
20004aac:	e000      	b.n	20004ab0 <__udivsi3+0x3c>
20004aae:	0a09      	lsrs	r1, r1, #8
20004ab0:	0bc3      	lsrs	r3, r0, #15
20004ab2:	428b      	cmp	r3, r1
20004ab4:	d301      	bcc.n	20004aba <__udivsi3+0x46>
20004ab6:	03cb      	lsls	r3, r1, #15
20004ab8:	1ac0      	subs	r0, r0, r3
20004aba:	4152      	adcs	r2, r2
20004abc:	0b83      	lsrs	r3, r0, #14
20004abe:	428b      	cmp	r3, r1
20004ac0:	d301      	bcc.n	20004ac6 <__udivsi3+0x52>
20004ac2:	038b      	lsls	r3, r1, #14
20004ac4:	1ac0      	subs	r0, r0, r3
20004ac6:	4152      	adcs	r2, r2
20004ac8:	0b43      	lsrs	r3, r0, #13
20004aca:	428b      	cmp	r3, r1
20004acc:	d301      	bcc.n	20004ad2 <__udivsi3+0x5e>
20004ace:	034b      	lsls	r3, r1, #13
20004ad0:	1ac0      	subs	r0, r0, r3
20004ad2:	4152      	adcs	r2, r2
20004ad4:	0b03      	lsrs	r3, r0, #12
20004ad6:	428b      	cmp	r3, r1
20004ad8:	d301      	bcc.n	20004ade <__udivsi3+0x6a>
20004ada:	030b      	lsls	r3, r1, #12
20004adc:	1ac0      	subs	r0, r0, r3
20004ade:	4152      	adcs	r2, r2
20004ae0:	0ac3      	lsrs	r3, r0, #11
20004ae2:	428b      	cmp	r3, r1
20004ae4:	d301      	bcc.n	20004aea <__udivsi3+0x76>
20004ae6:	02cb      	lsls	r3, r1, #11
20004ae8:	1ac0      	subs	r0, r0, r3
20004aea:	4152      	adcs	r2, r2
20004aec:	0a83      	lsrs	r3, r0, #10
20004aee:	428b      	cmp	r3, r1
20004af0:	d301      	bcc.n	20004af6 <__udivsi3+0x82>
20004af2:	028b      	lsls	r3, r1, #10
20004af4:	1ac0      	subs	r0, r0, r3
20004af6:	4152      	adcs	r2, r2
20004af8:	0a43      	lsrs	r3, r0, #9
20004afa:	428b      	cmp	r3, r1
20004afc:	d301      	bcc.n	20004b02 <__udivsi3+0x8e>
20004afe:	024b      	lsls	r3, r1, #9
20004b00:	1ac0      	subs	r0, r0, r3
20004b02:	4152      	adcs	r2, r2
20004b04:	0a03      	lsrs	r3, r0, #8
20004b06:	428b      	cmp	r3, r1
20004b08:	d301      	bcc.n	20004b0e <__udivsi3+0x9a>
20004b0a:	020b      	lsls	r3, r1, #8
20004b0c:	1ac0      	subs	r0, r0, r3
20004b0e:	4152      	adcs	r2, r2
20004b10:	d2cd      	bcs.n	20004aae <__udivsi3+0x3a>
20004b12:	09c3      	lsrs	r3, r0, #7
20004b14:	428b      	cmp	r3, r1
20004b16:	d301      	bcc.n	20004b1c <__udivsi3+0xa8>
20004b18:	01cb      	lsls	r3, r1, #7
20004b1a:	1ac0      	subs	r0, r0, r3
20004b1c:	4152      	adcs	r2, r2
20004b1e:	0983      	lsrs	r3, r0, #6
20004b20:	428b      	cmp	r3, r1
20004b22:	d301      	bcc.n	20004b28 <__udivsi3+0xb4>
20004b24:	018b      	lsls	r3, r1, #6
20004b26:	1ac0      	subs	r0, r0, r3
20004b28:	4152      	adcs	r2, r2
20004b2a:	0943      	lsrs	r3, r0, #5
20004b2c:	428b      	cmp	r3, r1
20004b2e:	d301      	bcc.n	20004b34 <__udivsi3+0xc0>
20004b30:	014b      	lsls	r3, r1, #5
20004b32:	1ac0      	subs	r0, r0, r3
20004b34:	4152      	adcs	r2, r2
20004b36:	0903      	lsrs	r3, r0, #4
20004b38:	428b      	cmp	r3, r1
20004b3a:	d301      	bcc.n	20004b40 <__udivsi3+0xcc>
20004b3c:	010b      	lsls	r3, r1, #4
20004b3e:	1ac0      	subs	r0, r0, r3
20004b40:	4152      	adcs	r2, r2
20004b42:	08c3      	lsrs	r3, r0, #3
20004b44:	428b      	cmp	r3, r1
20004b46:	d301      	bcc.n	20004b4c <__udivsi3+0xd8>
20004b48:	00cb      	lsls	r3, r1, #3
20004b4a:	1ac0      	subs	r0, r0, r3
20004b4c:	4152      	adcs	r2, r2
20004b4e:	0883      	lsrs	r3, r0, #2
20004b50:	428b      	cmp	r3, r1
20004b52:	d301      	bcc.n	20004b58 <__udivsi3+0xe4>
20004b54:	008b      	lsls	r3, r1, #2
20004b56:	1ac0      	subs	r0, r0, r3
20004b58:	4152      	adcs	r2, r2
20004b5a:	0843      	lsrs	r3, r0, #1
20004b5c:	428b      	cmp	r3, r1
20004b5e:	d301      	bcc.n	20004b64 <__udivsi3+0xf0>
20004b60:	004b      	lsls	r3, r1, #1
20004b62:	1ac0      	subs	r0, r0, r3
20004b64:	4152      	adcs	r2, r2
20004b66:	1a41      	subs	r1, r0, r1
20004b68:	d200      	bcs.n	20004b6c <__udivsi3+0xf8>
20004b6a:	4601      	mov	r1, r0
20004b6c:	4152      	adcs	r2, r2
20004b6e:	4610      	mov	r0, r2
20004b70:	4770      	bx	lr
20004b72:	e7ff      	b.n	20004b74 <__udivsi3+0x100>
20004b74:	b501      	push	{r0, lr}
20004b76:	2000      	movs	r0, #0
20004b78:	f7fe f9ae 	bl	20002ed8 <__aeabi_idiv0>
20004b7c:	bd02      	pop	{r1, pc}
20004b7e:	46c0      	nop			; (mov r8, r8)

20004b80 <__aeabi_uidivmod>:
20004b80:	2900      	cmp	r1, #0
20004b82:	d0f7      	beq.n	20004b74 <__udivsi3+0x100>
20004b84:	e776      	b.n	20004a74 <__udivsi3>
20004b86:	4770      	bx	lr

20004b88 <memcpy>:
20004b88:	2300      	movs	r3, #0
20004b8a:	b510      	push	{r4, lr}
20004b8c:	429a      	cmp	r2, r3
20004b8e:	d100      	bne.n	20004b92 <memcpy+0xa>
20004b90:	bd10      	pop	{r4, pc}
20004b92:	5ccc      	ldrb	r4, [r1, r3]
20004b94:	54c4      	strb	r4, [r0, r3]
20004b96:	3301      	adds	r3, #1
20004b98:	e7f8      	b.n	20004b8c <memcpy+0x4>
	...

20004b9c <pow>:
20004b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
20004b9e:	4657      	mov	r7, sl
20004ba0:	464e      	mov	r6, r9
20004ba2:	46de      	mov	lr, fp
20004ba4:	4645      	mov	r5, r8
20004ba6:	b5e0      	push	{r5, r6, r7, lr}
20004ba8:	b08f      	sub	sp, #60	; 0x3c
20004baa:	001d      	movs	r5, r3
20004bac:	0006      	movs	r6, r0
20004bae:	000f      	movs	r7, r1
20004bb0:	0014      	movs	r4, r2
20004bb2:	f000 f9ff 	bl	20004fb4 <__ieee754_pow>
20004bb6:	4bc7      	ldr	r3, [pc, #796]	; (20004ed4 <pow+0x338>)
20004bb8:	9000      	str	r0, [sp, #0]
20004bba:	9101      	str	r1, [sp, #4]
20004bbc:	469a      	mov	sl, r3
20004bbe:	781b      	ldrb	r3, [r3, #0]
20004bc0:	b25b      	sxtb	r3, r3
20004bc2:	4699      	mov	r9, r3
20004bc4:	3301      	adds	r3, #1
20004bc6:	d03e      	beq.n	20004c46 <pow+0xaa>
20004bc8:	0022      	movs	r2, r4
20004bca:	002b      	movs	r3, r5
20004bcc:	0020      	movs	r0, r4
20004bce:	0029      	movs	r1, r5
20004bd0:	f7ff ff30 	bl	20004a34 <__aeabi_dcmpun>
20004bd4:	4683      	mov	fp, r0
20004bd6:	2800      	cmp	r0, #0
20004bd8:	d135      	bne.n	20004c46 <pow+0xaa>
20004bda:	0032      	movs	r2, r6
20004bdc:	003b      	movs	r3, r7
20004bde:	0030      	movs	r0, r6
20004be0:	0039      	movs	r1, r7
20004be2:	f7ff ff27 	bl	20004a34 <__aeabi_dcmpun>
20004be6:	2200      	movs	r2, #0
20004be8:	9003      	str	r0, [sp, #12]
20004bea:	2800      	cmp	r0, #0
20004bec:	d000      	beq.n	20004bf0 <pow+0x54>
20004bee:	e0b6      	b.n	20004d5e <pow+0x1c2>
20004bf0:	2300      	movs	r3, #0
20004bf2:	0030      	movs	r0, r6
20004bf4:	0039      	movs	r1, r7
20004bf6:	f7fe fd25 	bl	20003644 <__aeabi_dcmpeq>
20004bfa:	2800      	cmp	r0, #0
20004bfc:	d02c      	beq.n	20004c58 <pow+0xbc>
20004bfe:	2200      	movs	r2, #0
20004c00:	2300      	movs	r3, #0
20004c02:	0020      	movs	r0, r4
20004c04:	0029      	movs	r1, r5
20004c06:	f7fe fd1d 	bl	20003644 <__aeabi_dcmpeq>
20004c0a:	4683      	mov	fp, r0
20004c0c:	2800      	cmp	r0, #0
20004c0e:	d100      	bne.n	20004c12 <pow+0x76>
20004c10:	e077      	b.n	20004d02 <pow+0x166>
20004c12:	ab04      	add	r3, sp, #16
20004c14:	4698      	mov	r8, r3
20004c16:	2301      	movs	r3, #1
20004c18:	4642      	mov	r2, r8
20004c1a:	9304      	str	r3, [sp, #16]
20004c1c:	4bae      	ldr	r3, [pc, #696]	; (20004ed8 <pow+0x33c>)
20004c1e:	6053      	str	r3, [r2, #4]
20004c20:	4643      	mov	r3, r8
20004c22:	9a03      	ldr	r2, [sp, #12]
20004c24:	611c      	str	r4, [r3, #16]
20004c26:	615d      	str	r5, [r3, #20]
20004c28:	621a      	str	r2, [r3, #32]
20004c2a:	609e      	str	r6, [r3, #8]
20004c2c:	60df      	str	r7, [r3, #12]
20004c2e:	4642      	mov	r2, r8
20004c30:	2300      	movs	r3, #0
20004c32:	2400      	movs	r4, #0
20004c34:	6193      	str	r3, [r2, #24]
20004c36:	61d4      	str	r4, [r2, #28]
20004c38:	464b      	mov	r3, r9
20004c3a:	2b00      	cmp	r3, #0
20004c3c:	d04d      	beq.n	20004cda <pow+0x13e>
20004c3e:	2300      	movs	r3, #0
20004c40:	4ca6      	ldr	r4, [pc, #664]	; (20004edc <pow+0x340>)
20004c42:	9300      	str	r3, [sp, #0]
20004c44:	9401      	str	r4, [sp, #4]
20004c46:	9800      	ldr	r0, [sp, #0]
20004c48:	9901      	ldr	r1, [sp, #4]
20004c4a:	b00f      	add	sp, #60	; 0x3c
20004c4c:	bc3c      	pop	{r2, r3, r4, r5}
20004c4e:	4690      	mov	r8, r2
20004c50:	4699      	mov	r9, r3
20004c52:	46a2      	mov	sl, r4
20004c54:	46ab      	mov	fp, r5
20004c56:	bdf0      	pop	{r4, r5, r6, r7, pc}
20004c58:	9800      	ldr	r0, [sp, #0]
20004c5a:	9901      	ldr	r1, [sp, #4]
20004c5c:	f000 ffc4 	bl	20005be8 <finite>
20004c60:	4681      	mov	r9, r0
20004c62:	2800      	cmp	r0, #0
20004c64:	d100      	bne.n	20004c68 <pow+0xcc>
20004c66:	e09b      	b.n	20004da0 <pow+0x204>
20004c68:	9800      	ldr	r0, [sp, #0]
20004c6a:	9901      	ldr	r1, [sp, #4]
20004c6c:	2200      	movs	r2, #0
20004c6e:	2300      	movs	r3, #0
20004c70:	f7fe fce8 	bl	20003644 <__aeabi_dcmpeq>
20004c74:	2800      	cmp	r0, #0
20004c76:	d0e6      	beq.n	20004c46 <pow+0xaa>
20004c78:	0030      	movs	r0, r6
20004c7a:	0039      	movs	r1, r7
20004c7c:	f000 ffb4 	bl	20005be8 <finite>
20004c80:	2800      	cmp	r0, #0
20004c82:	d0e0      	beq.n	20004c46 <pow+0xaa>
20004c84:	0020      	movs	r0, r4
20004c86:	0029      	movs	r1, r5
20004c88:	f000 ffae 	bl	20005be8 <finite>
20004c8c:	2800      	cmp	r0, #0
20004c8e:	d0da      	beq.n	20004c46 <pow+0xaa>
20004c90:	ab04      	add	r3, sp, #16
20004c92:	4698      	mov	r8, r3
20004c94:	2304      	movs	r3, #4
20004c96:	4642      	mov	r2, r8
20004c98:	9304      	str	r3, [sp, #16]
20004c9a:	4b8f      	ldr	r3, [pc, #572]	; (20004ed8 <pow+0x33c>)
20004c9c:	6114      	str	r4, [r2, #16]
20004c9e:	6155      	str	r5, [r2, #20]
20004ca0:	6053      	str	r3, [r2, #4]
20004ca2:	2300      	movs	r3, #0
20004ca4:	2400      	movs	r4, #0
20004ca6:	6213      	str	r3, [r2, #32]
20004ca8:	2300      	movs	r3, #0
20004caa:	6193      	str	r3, [r2, #24]
20004cac:	61d4      	str	r4, [r2, #28]
20004cae:	4653      	mov	r3, sl
20004cb0:	781b      	ldrb	r3, [r3, #0]
20004cb2:	6096      	str	r6, [r2, #8]
20004cb4:	60d7      	str	r7, [r2, #12]
20004cb6:	b25b      	sxtb	r3, r3
20004cb8:	2b02      	cmp	r3, #2
20004cba:	d004      	beq.n	20004cc6 <pow+0x12a>
20004cbc:	4640      	mov	r0, r8
20004cbe:	f000 ff9d 	bl	20005bfc <matherr>
20004cc2:	2800      	cmp	r0, #0
20004cc4:	d10e      	bne.n	20004ce4 <pow+0x148>
20004cc6:	f001 f8b3 	bl	20005e30 <__errno>
20004cca:	2322      	movs	r3, #34	; 0x22
20004ccc:	6003      	str	r3, [r0, #0]
20004cce:	e009      	b.n	20004ce4 <pow+0x148>
20004cd0:	4642      	mov	r2, r8
20004cd2:	2300      	movs	r3, #0
20004cd4:	2400      	movs	r4, #0
20004cd6:	6193      	str	r3, [r2, #24]
20004cd8:	61d4      	str	r4, [r2, #28]
20004cda:	4640      	mov	r0, r8
20004cdc:	f000 ff8e 	bl	20005bfc <matherr>
20004ce0:	2800      	cmp	r0, #0
20004ce2:	d037      	beq.n	20004d54 <pow+0x1b8>
20004ce4:	4643      	mov	r3, r8
20004ce6:	6a1b      	ldr	r3, [r3, #32]
20004ce8:	2b00      	cmp	r3, #0
20004cea:	d004      	beq.n	20004cf6 <pow+0x15a>
20004cec:	f001 f8a0 	bl	20005e30 <__errno>
20004cf0:	4643      	mov	r3, r8
20004cf2:	6a1b      	ldr	r3, [r3, #32]
20004cf4:	6003      	str	r3, [r0, #0]
20004cf6:	4643      	mov	r3, r8
20004cf8:	69dc      	ldr	r4, [r3, #28]
20004cfa:	699b      	ldr	r3, [r3, #24]
20004cfc:	9300      	str	r3, [sp, #0]
20004cfe:	9401      	str	r4, [sp, #4]
20004d00:	e7a1      	b.n	20004c46 <pow+0xaa>
20004d02:	0020      	movs	r0, r4
20004d04:	0029      	movs	r1, r5
20004d06:	f000 ff6f 	bl	20005be8 <finite>
20004d0a:	2800      	cmp	r0, #0
20004d0c:	d09b      	beq.n	20004c46 <pow+0xaa>
20004d0e:	2200      	movs	r2, #0
20004d10:	2300      	movs	r3, #0
20004d12:	0020      	movs	r0, r4
20004d14:	0029      	movs	r1, r5
20004d16:	f7fe fc9b 	bl	20003650 <__aeabi_dcmplt>
20004d1a:	2800      	cmp	r0, #0
20004d1c:	d100      	bne.n	20004d20 <pow+0x184>
20004d1e:	e792      	b.n	20004c46 <pow+0xaa>
20004d20:	ab04      	add	r3, sp, #16
20004d22:	4698      	mov	r8, r3
20004d24:	2301      	movs	r3, #1
20004d26:	4642      	mov	r2, r8
20004d28:	9304      	str	r3, [sp, #16]
20004d2a:	4b6b      	ldr	r3, [pc, #428]	; (20004ed8 <pow+0x33c>)
20004d2c:	6053      	str	r3, [r2, #4]
20004d2e:	4643      	mov	r3, r8
20004d30:	465a      	mov	r2, fp
20004d32:	609e      	str	r6, [r3, #8]
20004d34:	60df      	str	r7, [r3, #12]
20004d36:	621a      	str	r2, [r3, #32]
20004d38:	611c      	str	r4, [r3, #16]
20004d3a:	615d      	str	r5, [r3, #20]
20004d3c:	4653      	mov	r3, sl
20004d3e:	781b      	ldrb	r3, [r3, #0]
20004d40:	b25b      	sxtb	r3, r3
20004d42:	2b00      	cmp	r3, #0
20004d44:	d0c4      	beq.n	20004cd0 <pow+0x134>
20004d46:	2000      	movs	r0, #0
20004d48:	4642      	mov	r2, r8
20004d4a:	4965      	ldr	r1, [pc, #404]	; (20004ee0 <pow+0x344>)
20004d4c:	6190      	str	r0, [r2, #24]
20004d4e:	61d1      	str	r1, [r2, #28]
20004d50:	2b02      	cmp	r3, #2
20004d52:	d1c2      	bne.n	20004cda <pow+0x13e>
20004d54:	f001 f86c 	bl	20005e30 <__errno>
20004d58:	2321      	movs	r3, #33	; 0x21
20004d5a:	6003      	str	r3, [r0, #0]
20004d5c:	e7c2      	b.n	20004ce4 <pow+0x148>
20004d5e:	2300      	movs	r3, #0
20004d60:	0020      	movs	r0, r4
20004d62:	0029      	movs	r1, r5
20004d64:	f7fe fc6e 	bl	20003644 <__aeabi_dcmpeq>
20004d68:	2800      	cmp	r0, #0
20004d6a:	d100      	bne.n	20004d6e <pow+0x1d2>
20004d6c:	e76b      	b.n	20004c46 <pow+0xaa>
20004d6e:	ab04      	add	r3, sp, #16
20004d70:	4698      	mov	r8, r3
20004d72:	2301      	movs	r3, #1
20004d74:	4642      	mov	r2, r8
20004d76:	9304      	str	r3, [sp, #16]
20004d78:	4b57      	ldr	r3, [pc, #348]	; (20004ed8 <pow+0x33c>)
20004d7a:	4641      	mov	r1, r8
20004d7c:	6053      	str	r3, [r2, #4]
20004d7e:	4643      	mov	r3, r8
20004d80:	465a      	mov	r2, fp
20004d82:	621a      	str	r2, [r3, #32]
20004d84:	2200      	movs	r2, #0
20004d86:	609e      	str	r6, [r3, #8]
20004d88:	60df      	str	r7, [r3, #12]
20004d8a:	611c      	str	r4, [r3, #16]
20004d8c:	615d      	str	r5, [r3, #20]
20004d8e:	4b53      	ldr	r3, [pc, #332]	; (20004edc <pow+0x340>)
20004d90:	618a      	str	r2, [r1, #24]
20004d92:	61cb      	str	r3, [r1, #28]
20004d94:	9200      	str	r2, [sp, #0]
20004d96:	9301      	str	r3, [sp, #4]
20004d98:	464b      	mov	r3, r9
20004d9a:	2b02      	cmp	r3, #2
20004d9c:	d19d      	bne.n	20004cda <pow+0x13e>
20004d9e:	e752      	b.n	20004c46 <pow+0xaa>
20004da0:	0030      	movs	r0, r6
20004da2:	0039      	movs	r1, r7
20004da4:	f000 ff20 	bl	20005be8 <finite>
20004da8:	2800      	cmp	r0, #0
20004daa:	d100      	bne.n	20004dae <pow+0x212>
20004dac:	e75c      	b.n	20004c68 <pow+0xcc>
20004dae:	0020      	movs	r0, r4
20004db0:	0029      	movs	r1, r5
20004db2:	f000 ff19 	bl	20005be8 <finite>
20004db6:	2800      	cmp	r0, #0
20004db8:	d100      	bne.n	20004dbc <pow+0x220>
20004dba:	e755      	b.n	20004c68 <pow+0xcc>
20004dbc:	9800      	ldr	r0, [sp, #0]
20004dbe:	9901      	ldr	r1, [sp, #4]
20004dc0:	000b      	movs	r3, r1
20004dc2:	0002      	movs	r2, r0
20004dc4:	f7ff fe36 	bl	20004a34 <__aeabi_dcmpun>
20004dc8:	ab04      	add	r3, sp, #16
20004dca:	4698      	mov	r8, r3
20004dcc:	2800      	cmp	r0, #0
20004dce:	d161      	bne.n	20004e94 <pow+0x2f8>
20004dd0:	2303      	movs	r3, #3
20004dd2:	4642      	mov	r2, r8
20004dd4:	9304      	str	r3, [sp, #16]
20004dd6:	4b40      	ldr	r3, [pc, #256]	; (20004ed8 <pow+0x33c>)
20004dd8:	6210      	str	r0, [r2, #32]
20004dda:	6053      	str	r3, [r2, #4]
20004ddc:	4653      	mov	r3, sl
20004dde:	781b      	ldrb	r3, [r3, #0]
20004de0:	6096      	str	r6, [r2, #8]
20004de2:	60d7      	str	r7, [r2, #12]
20004de4:	b25b      	sxtb	r3, r3
20004de6:	6114      	str	r4, [r2, #16]
20004de8:	6155      	str	r5, [r2, #20]
20004dea:	4699      	mov	r9, r3
20004dec:	2b00      	cmp	r3, #0
20004dee:	d12f      	bne.n	20004e50 <pow+0x2b4>
20004df0:	22e0      	movs	r2, #224	; 0xe0
20004df2:	4641      	mov	r1, r8
20004df4:	4b3b      	ldr	r3, [pc, #236]	; (20004ee4 <pow+0x348>)
20004df6:	0612      	lsls	r2, r2, #24
20004df8:	618a      	str	r2, [r1, #24]
20004dfa:	61cb      	str	r3, [r1, #28]
20004dfc:	0030      	movs	r0, r6
20004dfe:	2200      	movs	r2, #0
20004e00:	2300      	movs	r3, #0
20004e02:	0039      	movs	r1, r7
20004e04:	f7fe fc24 	bl	20003650 <__aeabi_dcmplt>
20004e08:	2800      	cmp	r0, #0
20004e0a:	d100      	bne.n	20004e0e <pow+0x272>
20004e0c:	e756      	b.n	20004cbc <pow+0x120>
20004e0e:	2200      	movs	r2, #0
20004e10:	4b35      	ldr	r3, [pc, #212]	; (20004ee8 <pow+0x34c>)
20004e12:	0020      	movs	r0, r4
20004e14:	0029      	movs	r1, r5
20004e16:	f7ff f877 	bl	20003f08 <__aeabi_dmul>
20004e1a:	0004      	movs	r4, r0
20004e1c:	000d      	movs	r5, r1
20004e1e:	f000 fef5 	bl	20005c0c <rint>
20004e22:	0002      	movs	r2, r0
20004e24:	000b      	movs	r3, r1
20004e26:	0020      	movs	r0, r4
20004e28:	0029      	movs	r1, r5
20004e2a:	f7fe fc0b 	bl	20003644 <__aeabi_dcmpeq>
20004e2e:	2800      	cmp	r0, #0
20004e30:	d105      	bne.n	20004e3e <pow+0x2a2>
20004e32:	22e0      	movs	r2, #224	; 0xe0
20004e34:	4b2d      	ldr	r3, [pc, #180]	; (20004eec <pow+0x350>)
20004e36:	0612      	lsls	r2, r2, #24
20004e38:	4641      	mov	r1, r8
20004e3a:	618a      	str	r2, [r1, #24]
20004e3c:	61cb      	str	r3, [r1, #28]
20004e3e:	4653      	mov	r3, sl
20004e40:	781b      	ldrb	r3, [r3, #0]
20004e42:	b25b      	sxtb	r3, r3
20004e44:	4699      	mov	r9, r3
20004e46:	464b      	mov	r3, r9
20004e48:	2b02      	cmp	r3, #2
20004e4a:	d000      	beq.n	20004e4e <pow+0x2b2>
20004e4c:	e736      	b.n	20004cbc <pow+0x120>
20004e4e:	e73a      	b.n	20004cc6 <pow+0x12a>
20004e50:	2200      	movs	r2, #0
20004e52:	4641      	mov	r1, r8
20004e54:	4b26      	ldr	r3, [pc, #152]	; (20004ef0 <pow+0x354>)
20004e56:	0030      	movs	r0, r6
20004e58:	618a      	str	r2, [r1, #24]
20004e5a:	61cb      	str	r3, [r1, #28]
20004e5c:	2200      	movs	r2, #0
20004e5e:	2300      	movs	r3, #0
20004e60:	0039      	movs	r1, r7
20004e62:	f7fe fbf5 	bl	20003650 <__aeabi_dcmplt>
20004e66:	2800      	cmp	r0, #0
20004e68:	d0ed      	beq.n	20004e46 <pow+0x2aa>
20004e6a:	2200      	movs	r2, #0
20004e6c:	4b1e      	ldr	r3, [pc, #120]	; (20004ee8 <pow+0x34c>)
20004e6e:	0020      	movs	r0, r4
20004e70:	0029      	movs	r1, r5
20004e72:	f7ff f849 	bl	20003f08 <__aeabi_dmul>
20004e76:	0004      	movs	r4, r0
20004e78:	000d      	movs	r5, r1
20004e7a:	f000 fec7 	bl	20005c0c <rint>
20004e7e:	0002      	movs	r2, r0
20004e80:	000b      	movs	r3, r1
20004e82:	0020      	movs	r0, r4
20004e84:	0029      	movs	r1, r5
20004e86:	f7fe fbdd 	bl	20003644 <__aeabi_dcmpeq>
20004e8a:	2800      	cmp	r0, #0
20004e8c:	d1d7      	bne.n	20004e3e <pow+0x2a2>
20004e8e:	2200      	movs	r2, #0
20004e90:	4b13      	ldr	r3, [pc, #76]	; (20004ee0 <pow+0x344>)
20004e92:	e7d1      	b.n	20004e38 <pow+0x29c>
20004e94:	2301      	movs	r3, #1
20004e96:	4642      	mov	r2, r8
20004e98:	9304      	str	r3, [sp, #16]
20004e9a:	4b0f      	ldr	r3, [pc, #60]	; (20004ed8 <pow+0x33c>)
20004e9c:	6053      	str	r3, [r2, #4]
20004e9e:	4643      	mov	r3, r8
20004ea0:	464a      	mov	r2, r9
20004ea2:	611c      	str	r4, [r3, #16]
20004ea4:	615d      	str	r5, [r3, #20]
20004ea6:	621a      	str	r2, [r3, #32]
20004ea8:	609e      	str	r6, [r3, #8]
20004eaa:	60df      	str	r7, [r3, #12]
20004eac:	2400      	movs	r4, #0
20004eae:	4653      	mov	r3, sl
20004eb0:	571c      	ldrsb	r4, [r3, r4]
20004eb2:	2c00      	cmp	r4, #0
20004eb4:	d100      	bne.n	20004eb8 <pow+0x31c>
20004eb6:	e70b      	b.n	20004cd0 <pow+0x134>
20004eb8:	2300      	movs	r3, #0
20004eba:	2200      	movs	r2, #0
20004ebc:	0019      	movs	r1, r3
20004ebe:	0010      	movs	r0, r2
20004ec0:	f7fe fbee 	bl	200036a0 <__aeabi_ddiv>
20004ec4:	4643      	mov	r3, r8
20004ec6:	6198      	str	r0, [r3, #24]
20004ec8:	61d9      	str	r1, [r3, #28]
20004eca:	2c02      	cmp	r4, #2
20004ecc:	d100      	bne.n	20004ed0 <pow+0x334>
20004ece:	e741      	b.n	20004d54 <pow+0x1b8>
20004ed0:	e703      	b.n	20004cda <pow+0x13e>
20004ed2:	46c0      	nop			; (mov r8, r8)
20004ed4:	20006ed0 	ldrdcs	r6, [r0], -r0
20004ed8:	20007470 	andcs	r7, r0, r0, ror r4
20004edc:	3ff00000 	svccc	0x00f00000	; IMB
20004ee0:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20004ee4:	47efffff 			; <UNDEFINED> instruction: 0x47efffff
20004ee8:	3fe00000 	svccc	0x00e00000
20004eec:	c7efffff 			; <UNDEFINED> instruction: 0xc7efffff
20004ef0:	7ff00000 	svcvc	0x00f00000	; IMB

20004ef4 <sqrt>:
20004ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
20004ef6:	4647      	mov	r7, r8
20004ef8:	46ce      	mov	lr, r9
20004efa:	b580      	push	{r7, lr}
20004efc:	b08d      	sub	sp, #52	; 0x34
20004efe:	0004      	movs	r4, r0
20004f00:	000d      	movs	r5, r1
20004f02:	f000 fd8d 	bl	20005a20 <__ieee754_sqrt>
20004f06:	4b29      	ldr	r3, [pc, #164]	; (20004fac <sqrt+0xb8>)
20004f08:	0006      	movs	r6, r0
20004f0a:	781b      	ldrb	r3, [r3, #0]
20004f0c:	000f      	movs	r7, r1
20004f0e:	b25b      	sxtb	r3, r3
20004f10:	4698      	mov	r8, r3
20004f12:	3301      	adds	r3, #1
20004f14:	d010      	beq.n	20004f38 <sqrt+0x44>
20004f16:	0022      	movs	r2, r4
20004f18:	002b      	movs	r3, r5
20004f1a:	0020      	movs	r0, r4
20004f1c:	0029      	movs	r1, r5
20004f1e:	f7ff fd89 	bl	20004a34 <__aeabi_dcmpun>
20004f22:	4681      	mov	r9, r0
20004f24:	2800      	cmp	r0, #0
20004f26:	d107      	bne.n	20004f38 <sqrt+0x44>
20004f28:	2200      	movs	r2, #0
20004f2a:	2300      	movs	r3, #0
20004f2c:	0020      	movs	r0, r4
20004f2e:	0029      	movs	r1, r5
20004f30:	f7fe fb8e 	bl	20003650 <__aeabi_dcmplt>
20004f34:	2800      	cmp	r0, #0
20004f36:	d106      	bne.n	20004f46 <sqrt+0x52>
20004f38:	0030      	movs	r0, r6
20004f3a:	0039      	movs	r1, r7
20004f3c:	b00d      	add	sp, #52	; 0x34
20004f3e:	bc0c      	pop	{r2, r3}
20004f40:	4690      	mov	r8, r2
20004f42:	4699      	mov	r9, r3
20004f44:	bdf0      	pop	{r4, r5, r6, r7, pc}
20004f46:	2301      	movs	r3, #1
20004f48:	9302      	str	r3, [sp, #8]
20004f4a:	4b19      	ldr	r3, [pc, #100]	; (20004fb0 <sqrt+0xbc>)
20004f4c:	9406      	str	r4, [sp, #24]
20004f4e:	9507      	str	r5, [sp, #28]
20004f50:	9303      	str	r3, [sp, #12]
20004f52:	464b      	mov	r3, r9
20004f54:	930a      	str	r3, [sp, #40]	; 0x28
20004f56:	4643      	mov	r3, r8
20004f58:	9404      	str	r4, [sp, #16]
20004f5a:	9505      	str	r5, [sp, #20]
20004f5c:	2b00      	cmp	r3, #0
20004f5e:	d015      	beq.n	20004f8c <sqrt+0x98>
20004f60:	2300      	movs	r3, #0
20004f62:	2200      	movs	r2, #0
20004f64:	0019      	movs	r1, r3
20004f66:	0010      	movs	r0, r2
20004f68:	f7fe fb9a 	bl	200036a0 <__aeabi_ddiv>
20004f6c:	4643      	mov	r3, r8
20004f6e:	9008      	str	r0, [sp, #32]
20004f70:	9109      	str	r1, [sp, #36]	; 0x24
20004f72:	2b02      	cmp	r3, #2
20004f74:	d10e      	bne.n	20004f94 <sqrt+0xa0>
20004f76:	f000 ff5b 	bl	20005e30 <__errno>
20004f7a:	2321      	movs	r3, #33	; 0x21
20004f7c:	6003      	str	r3, [r0, #0]
20004f7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20004f80:	9301      	str	r3, [sp, #4]
20004f82:	2b00      	cmp	r3, #0
20004f84:	d10c      	bne.n	20004fa0 <sqrt+0xac>
20004f86:	9e08      	ldr	r6, [sp, #32]
20004f88:	9f09      	ldr	r7, [sp, #36]	; 0x24
20004f8a:	e7d5      	b.n	20004f38 <sqrt+0x44>
20004f8c:	2300      	movs	r3, #0
20004f8e:	2400      	movs	r4, #0
20004f90:	9308      	str	r3, [sp, #32]
20004f92:	9409      	str	r4, [sp, #36]	; 0x24
20004f94:	a802      	add	r0, sp, #8
20004f96:	f000 fe31 	bl	20005bfc <matherr>
20004f9a:	2800      	cmp	r0, #0
20004f9c:	d1ef      	bne.n	20004f7e <sqrt+0x8a>
20004f9e:	e7ea      	b.n	20004f76 <sqrt+0x82>
20004fa0:	f000 ff46 	bl	20005e30 <__errno>
20004fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
20004fa6:	9301      	str	r3, [sp, #4]
20004fa8:	6003      	str	r3, [r0, #0]
20004faa:	e7ec      	b.n	20004f86 <sqrt+0x92>
20004fac:	20006ed0 	ldrdcs	r6, [r0], -r0
20004fb0:	20007474 	andcs	r7, r0, r4, ror r4

20004fb4 <__ieee754_pow>:
20004fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
20004fb6:	4657      	mov	r7, sl
20004fb8:	464e      	mov	r6, r9
20004fba:	4645      	mov	r5, r8
20004fbc:	46de      	mov	lr, fp
20004fbe:	001c      	movs	r4, r3
20004fc0:	0013      	movs	r3, r2
20004fc2:	b5e0      	push	{r5, r6, r7, lr}
20004fc4:	0065      	lsls	r5, r4, #1
20004fc6:	b091      	sub	sp, #68	; 0x44
20004fc8:	086d      	lsrs	r5, r5, #1
20004fca:	9300      	str	r3, [sp, #0]
20004fcc:	9401      	str	r4, [sp, #4]
20004fce:	0007      	movs	r7, r0
20004fd0:	000e      	movs	r6, r1
20004fd2:	4680      	mov	r8, r0
20004fd4:	4689      	mov	r9, r1
20004fd6:	46a2      	mov	sl, r4
20004fd8:	432b      	orrs	r3, r5
20004fda:	d031      	beq.n	20005040 <__ieee754_pow+0x8c>
20004fdc:	4b67      	ldr	r3, [pc, #412]	; (2000517c <__ieee754_pow+0x1c8>)
20004fde:	0074      	lsls	r4, r6, #1
20004fe0:	0864      	lsrs	r4, r4, #1
20004fe2:	429c      	cmp	r4, r3
20004fe4:	dc27      	bgt.n	20005036 <__ieee754_pow+0x82>
20004fe6:	d024      	beq.n	20005032 <__ieee754_pow+0x7e>
20004fe8:	429d      	cmp	r5, r3
20004fea:	dc24      	bgt.n	20005036 <__ieee754_pow+0x82>
20004fec:	4b63      	ldr	r3, [pc, #396]	; (2000517c <__ieee754_pow+0x1c8>)
20004fee:	429d      	cmp	r5, r3
20004ff0:	d100      	bne.n	20004ff4 <__ieee754_pow+0x40>
20004ff2:	e081      	b.n	200050f8 <__ieee754_pow+0x144>
20004ff4:	2300      	movs	r3, #0
20004ff6:	469b      	mov	fp, r3
20004ff8:	464b      	mov	r3, r9
20004ffa:	2b00      	cmp	r3, #0
20004ffc:	da00      	bge.n	20005000 <__ieee754_pow+0x4c>
20004ffe:	e07f      	b.n	20005100 <__ieee754_pow+0x14c>
20005000:	2a00      	cmp	r2, #0
20005002:	d12c      	bne.n	2000505e <__ieee754_pow+0xaa>
20005004:	4b5d      	ldr	r3, [pc, #372]	; (2000517c <__ieee754_pow+0x1c8>)
20005006:	429d      	cmp	r5, r3
20005008:	d100      	bne.n	2000500c <__ieee754_pow+0x58>
2000500a:	e097      	b.n	2000513c <__ieee754_pow+0x188>
2000500c:	4b5c      	ldr	r3, [pc, #368]	; (20005180 <__ieee754_pow+0x1cc>)
2000500e:	429d      	cmp	r5, r3
20005010:	d066      	beq.n	200050e0 <__ieee754_pow+0x12c>
20005012:	2380      	movs	r3, #128	; 0x80
20005014:	05db      	lsls	r3, r3, #23
20005016:	459a      	cmp	sl, r3
20005018:	d100      	bne.n	2000501c <__ieee754_pow+0x68>
2000501a:	e3b9      	b.n	20005790 <__ieee754_pow+0x7dc>
2000501c:	4b59      	ldr	r3, [pc, #356]	; (20005184 <__ieee754_pow+0x1d0>)
2000501e:	459a      	cmp	sl, r3
20005020:	d11d      	bne.n	2000505e <__ieee754_pow+0xaa>
20005022:	464b      	mov	r3, r9
20005024:	2b00      	cmp	r3, #0
20005026:	db1a      	blt.n	2000505e <__ieee754_pow+0xaa>
20005028:	0038      	movs	r0, r7
2000502a:	0031      	movs	r1, r6
2000502c:	f000 fcf8 	bl	20005a20 <__ieee754_sqrt>
20005030:	e008      	b.n	20005044 <__ieee754_pow+0x90>
20005032:	2800      	cmp	r0, #0
20005034:	d00d      	beq.n	20005052 <__ieee754_pow+0x9e>
20005036:	4b54      	ldr	r3, [pc, #336]	; (20005188 <__ieee754_pow+0x1d4>)
20005038:	469c      	mov	ip, r3
2000503a:	4464      	add	r4, ip
2000503c:	4327      	orrs	r7, r4
2000503e:	d10a      	bne.n	20005056 <__ieee754_pow+0xa2>
20005040:	2000      	movs	r0, #0
20005042:	494f      	ldr	r1, [pc, #316]	; (20005180 <__ieee754_pow+0x1cc>)
20005044:	b011      	add	sp, #68	; 0x44
20005046:	bc3c      	pop	{r2, r3, r4, r5}
20005048:	4690      	mov	r8, r2
2000504a:	4699      	mov	r9, r3
2000504c:	46a2      	mov	sl, r4
2000504e:	46ab      	mov	fp, r5
20005050:	bdf0      	pop	{r4, r5, r6, r7, pc}
20005052:	42a5      	cmp	r5, r4
20005054:	ddca      	ble.n	20004fec <__ieee754_pow+0x38>
20005056:	484d      	ldr	r0, [pc, #308]	; (2000518c <__ieee754_pow+0x1d8>)
20005058:	f000 fdd2 	bl	20005c00 <nan>
2000505c:	e7f2      	b.n	20005044 <__ieee754_pow+0x90>
2000505e:	0038      	movs	r0, r7
20005060:	0031      	movs	r1, r6
20005062:	f000 fdbd 	bl	20005be0 <fabs>
20005066:	4643      	mov	r3, r8
20005068:	2b00      	cmp	r3, #0
2000506a:	d11d      	bne.n	200050a8 <__ieee754_pow+0xf4>
2000506c:	2c00      	cmp	r4, #0
2000506e:	d004      	beq.n	2000507a <__ieee754_pow+0xc6>
20005070:	4a43      	ldr	r2, [pc, #268]	; (20005180 <__ieee754_pow+0x1cc>)
20005072:	00b3      	lsls	r3, r6, #2
20005074:	089b      	lsrs	r3, r3, #2
20005076:	4293      	cmp	r3, r2
20005078:	d116      	bne.n	200050a8 <__ieee754_pow+0xf4>
2000507a:	4653      	mov	r3, sl
2000507c:	2b00      	cmp	r3, #0
2000507e:	da00      	bge.n	20005082 <__ieee754_pow+0xce>
20005080:	e3c5      	b.n	2000580e <__ieee754_pow+0x85a>
20005082:	464b      	mov	r3, r9
20005084:	2b00      	cmp	r3, #0
20005086:	dadd      	bge.n	20005044 <__ieee754_pow+0x90>
20005088:	4b3f      	ldr	r3, [pc, #252]	; (20005188 <__ieee754_pow+0x1d4>)
2000508a:	469c      	mov	ip, r3
2000508c:	465b      	mov	r3, fp
2000508e:	4464      	add	r4, ip
20005090:	431c      	orrs	r4, r3
20005092:	d101      	bne.n	20005098 <__ieee754_pow+0xe4>
20005094:	f000 fc53 	bl	2000593e <__ieee754_pow+0x98a>
20005098:	465b      	mov	r3, fp
2000509a:	2b01      	cmp	r3, #1
2000509c:	d1d2      	bne.n	20005044 <__ieee754_pow+0x90>
2000509e:	2480      	movs	r4, #128	; 0x80
200050a0:	0624      	lsls	r4, r4, #24
200050a2:	190b      	adds	r3, r1, r4
200050a4:	0019      	movs	r1, r3
200050a6:	e7cd      	b.n	20005044 <__ieee754_pow+0x90>
200050a8:	0ff3      	lsrs	r3, r6, #31
200050aa:	3b01      	subs	r3, #1
200050ac:	4698      	mov	r8, r3
200050ae:	465b      	mov	r3, fp
200050b0:	4642      	mov	r2, r8
200050b2:	4313      	orrs	r3, r2
200050b4:	d057      	beq.n	20005166 <__ieee754_pow+0x1b2>
200050b6:	4b36      	ldr	r3, [pc, #216]	; (20005190 <__ieee754_pow+0x1dc>)
200050b8:	429d      	cmp	r5, r3
200050ba:	dd77      	ble.n	200051ac <__ieee754_pow+0x1f8>
200050bc:	4b35      	ldr	r3, [pc, #212]	; (20005194 <__ieee754_pow+0x1e0>)
200050be:	429d      	cmp	r5, r3
200050c0:	dc00      	bgt.n	200050c4 <__ieee754_pow+0x110>
200050c2:	e3b1      	b.n	20005828 <__ieee754_pow+0x874>
200050c4:	4b34      	ldr	r3, [pc, #208]	; (20005198 <__ieee754_pow+0x1e4>)
200050c6:	429c      	cmp	r4, r3
200050c8:	dc00      	bgt.n	200050cc <__ieee754_pow+0x118>
200050ca:	e3a8      	b.n	2000581e <__ieee754_pow+0x86a>
200050cc:	4653      	mov	r3, sl
200050ce:	2b00      	cmp	r3, #0
200050d0:	dd43      	ble.n	2000515a <__ieee754_pow+0x1a6>
200050d2:	4a32      	ldr	r2, [pc, #200]	; (2000519c <__ieee754_pow+0x1e8>)
200050d4:	4b32      	ldr	r3, [pc, #200]	; (200051a0 <__ieee754_pow+0x1ec>)
200050d6:	0010      	movs	r0, r2
200050d8:	0019      	movs	r1, r3
200050da:	f7fe ff15 	bl	20003f08 <__aeabi_dmul>
200050de:	e7b1      	b.n	20005044 <__ieee754_pow+0x90>
200050e0:	4653      	mov	r3, sl
200050e2:	0038      	movs	r0, r7
200050e4:	0031      	movs	r1, r6
200050e6:	2b00      	cmp	r3, #0
200050e8:	daac      	bge.n	20005044 <__ieee754_pow+0x90>
200050ea:	003a      	movs	r2, r7
200050ec:	0033      	movs	r3, r6
200050ee:	2000      	movs	r0, #0
200050f0:	4923      	ldr	r1, [pc, #140]	; (20005180 <__ieee754_pow+0x1cc>)
200050f2:	f7fe fad5 	bl	200036a0 <__aeabi_ddiv>
200050f6:	e7a5      	b.n	20005044 <__ieee754_pow+0x90>
200050f8:	2a00      	cmp	r2, #0
200050fa:	d100      	bne.n	200050fe <__ieee754_pow+0x14a>
200050fc:	e77a      	b.n	20004ff4 <__ieee754_pow+0x40>
200050fe:	e79a      	b.n	20005036 <__ieee754_pow+0x82>
20005100:	4b28      	ldr	r3, [pc, #160]	; (200051a4 <__ieee754_pow+0x1f0>)
20005102:	429d      	cmp	r5, r3
20005104:	dc2c      	bgt.n	20005160 <__ieee754_pow+0x1ac>
20005106:	4b24      	ldr	r3, [pc, #144]	; (20005198 <__ieee754_pow+0x1e4>)
20005108:	429d      	cmp	r5, r3
2000510a:	dc00      	bgt.n	2000510e <__ieee754_pow+0x15a>
2000510c:	e778      	b.n	20005000 <__ieee754_pow+0x4c>
2000510e:	4926      	ldr	r1, [pc, #152]	; (200051a8 <__ieee754_pow+0x1f4>)
20005110:	152b      	asrs	r3, r5, #20
20005112:	468c      	mov	ip, r1
20005114:	4463      	add	r3, ip
20005116:	2b14      	cmp	r3, #20
20005118:	dc01      	bgt.n	2000511e <__ieee754_pow+0x16a>
2000511a:	f000 fbf3 	bl	20005904 <__ieee754_pow+0x950>
2000511e:	2134      	movs	r1, #52	; 0x34
20005120:	1acb      	subs	r3, r1, r3
20005122:	9900      	ldr	r1, [sp, #0]
20005124:	40d9      	lsrs	r1, r3
20005126:	0008      	movs	r0, r1
20005128:	4098      	lsls	r0, r3
2000512a:	4282      	cmp	r2, r0
2000512c:	d000      	beq.n	20005130 <__ieee754_pow+0x17c>
2000512e:	e767      	b.n	20005000 <__ieee754_pow+0x4c>
20005130:	2301      	movs	r3, #1
20005132:	4019      	ands	r1, r3
20005134:	3301      	adds	r3, #1
20005136:	1a5b      	subs	r3, r3, r1
20005138:	469b      	mov	fp, r3
2000513a:	e761      	b.n	20005000 <__ieee754_pow+0x4c>
2000513c:	4b12      	ldr	r3, [pc, #72]	; (20005188 <__ieee754_pow+0x1d4>)
2000513e:	18e3      	adds	r3, r4, r3
20005140:	431f      	orrs	r7, r3
20005142:	d100      	bne.n	20005146 <__ieee754_pow+0x192>
20005144:	e77c      	b.n	20005040 <__ieee754_pow+0x8c>
20005146:	4b14      	ldr	r3, [pc, #80]	; (20005198 <__ieee754_pow+0x1e4>)
20005148:	429c      	cmp	r4, r3
2000514a:	dc00      	bgt.n	2000514e <__ieee754_pow+0x19a>
2000514c:	e327      	b.n	2000579e <__ieee754_pow+0x7ea>
2000514e:	9800      	ldr	r0, [sp, #0]
20005150:	9901      	ldr	r1, [sp, #4]
20005152:	4653      	mov	r3, sl
20005154:	2b00      	cmp	r3, #0
20005156:	db00      	blt.n	2000515a <__ieee754_pow+0x1a6>
20005158:	e774      	b.n	20005044 <__ieee754_pow+0x90>
2000515a:	2000      	movs	r0, #0
2000515c:	2100      	movs	r1, #0
2000515e:	e771      	b.n	20005044 <__ieee754_pow+0x90>
20005160:	2302      	movs	r3, #2
20005162:	469b      	mov	fp, r3
20005164:	e74c      	b.n	20005000 <__ieee754_pow+0x4c>
20005166:	003a      	movs	r2, r7
20005168:	0033      	movs	r3, r6
2000516a:	0038      	movs	r0, r7
2000516c:	0031      	movs	r1, r6
2000516e:	f7ff f94b 	bl	20004408 <__aeabi_dsub>
20005172:	0002      	movs	r2, r0
20005174:	000b      	movs	r3, r1
20005176:	f7fe fa93 	bl	200036a0 <__aeabi_ddiv>
2000517a:	e763      	b.n	20005044 <__ieee754_pow+0x90>
2000517c:	7ff00000 	svcvc	0x00f00000	; IMB
20005180:	3ff00000 	svccc	0x00f00000	; IMB
20005184:	3fe00000 	svccc	0x00e00000
20005188:	c0100000 	andsgt	r0, r0, r0
2000518c:	20007478 	andcs	r7, r0, r8, ror r4
20005190:	41e00000 	mvnmi	r0, r0
20005194:	43f00000 	mvnsmi	r0, #0
20005198:	3fefffff 	svccc	0x00efffff
2000519c:	8800759c 	stmdahi	r0, {r2, r3, r4, r7, r8, sl, ip, sp, lr}
200051a0:	7e37e43c 	mrcvc	4, 1, lr, cr7, cr12, {1}
200051a4:	433fffff 	teqmi	pc, #1020	; 0x3fc	; <UNPREDICTABLE>
200051a8:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
200051ac:	4be9      	ldr	r3, [pc, #932]	; (20005554 <__ieee754_pow+0x5a0>)
200051ae:	2200      	movs	r2, #0
200051b0:	429c      	cmp	r4, r3
200051b2:	dc06      	bgt.n	200051c2 <__ieee754_pow+0x20e>
200051b4:	2200      	movs	r2, #0
200051b6:	4be8      	ldr	r3, [pc, #928]	; (20005558 <__ieee754_pow+0x5a4>)
200051b8:	f7fe fea6 	bl	20003f08 <__aeabi_dmul>
200051bc:	2235      	movs	r2, #53	; 0x35
200051be:	000c      	movs	r4, r1
200051c0:	4252      	negs	r2, r2
200051c2:	4de6      	ldr	r5, [pc, #920]	; (2000555c <__ieee754_pow+0x5a8>)
200051c4:	1523      	asrs	r3, r4, #20
200051c6:	46ac      	mov	ip, r5
200051c8:	4463      	add	r3, ip
200051ca:	4699      	mov	r9, r3
200051cc:	0324      	lsls	r4, r4, #12
200051ce:	4de4      	ldr	r5, [pc, #912]	; (20005560 <__ieee754_pow+0x5ac>)
200051d0:	4be4      	ldr	r3, [pc, #912]	; (20005564 <__ieee754_pow+0x5b0>)
200051d2:	0b24      	lsrs	r4, r4, #12
200051d4:	4491      	add	r9, r2
200051d6:	4325      	orrs	r5, r4
200051d8:	429c      	cmp	r4, r3
200051da:	dd09      	ble.n	200051f0 <__ieee754_pow+0x23c>
200051dc:	4be2      	ldr	r3, [pc, #904]	; (20005568 <__ieee754_pow+0x5b4>)
200051de:	429c      	cmp	r4, r3
200051e0:	dc00      	bgt.n	200051e4 <__ieee754_pow+0x230>
200051e2:	e3b6      	b.n	20005952 <__ieee754_pow+0x99e>
200051e4:	2301      	movs	r3, #1
200051e6:	469c      	mov	ip, r3
200051e8:	4be0      	ldr	r3, [pc, #896]	; (2000556c <__ieee754_pow+0x5b8>)
200051ea:	44e1      	add	r9, ip
200051ec:	469c      	mov	ip, r3
200051ee:	4465      	add	r5, ip
200051f0:	2300      	movs	r3, #0
200051f2:	2400      	movs	r4, #0
200051f4:	2200      	movs	r2, #0
200051f6:	9308      	str	r3, [sp, #32]
200051f8:	9409      	str	r4, [sp, #36]	; 0x24
200051fa:	930c      	str	r3, [sp, #48]	; 0x30
200051fc:	940d      	str	r4, [sp, #52]	; 0x34
200051fe:	2400      	movs	r4, #0
20005200:	4bd7      	ldr	r3, [pc, #860]	; (20005560 <__ieee754_pow+0x5ac>)
20005202:	9206      	str	r2, [sp, #24]
20005204:	9307      	str	r3, [sp, #28]
20005206:	9a06      	ldr	r2, [sp, #24]
20005208:	9b07      	ldr	r3, [sp, #28]
2000520a:	0029      	movs	r1, r5
2000520c:	900a      	str	r0, [sp, #40]	; 0x28
2000520e:	910b      	str	r1, [sp, #44]	; 0x2c
20005210:	f7ff f8fa 	bl	20004408 <__aeabi_dsub>
20005214:	9a06      	ldr	r2, [sp, #24]
20005216:	9b07      	ldr	r3, [sp, #28]
20005218:	0006      	movs	r6, r0
2000521a:	000f      	movs	r7, r1
2000521c:	980a      	ldr	r0, [sp, #40]	; 0x28
2000521e:	990b      	ldr	r1, [sp, #44]	; 0x2c
20005220:	f7fd fe5c 	bl	20002edc <__aeabi_dadd>
20005224:	0002      	movs	r2, r0
20005226:	000b      	movs	r3, r1
20005228:	2000      	movs	r0, #0
2000522a:	49cd      	ldr	r1, [pc, #820]	; (20005560 <__ieee754_pow+0x5ac>)
2000522c:	f7fe fa38 	bl	200036a0 <__aeabi_ddiv>
20005230:	000a      	movs	r2, r1
20005232:	0001      	movs	r1, r0
20005234:	0013      	movs	r3, r2
20005236:	910e      	str	r1, [sp, #56]	; 0x38
20005238:	920f      	str	r2, [sp, #60]	; 0x3c
2000523a:	0002      	movs	r2, r0
2000523c:	0039      	movs	r1, r7
2000523e:	0030      	movs	r0, r6
20005240:	f7fe fe62 	bl	20003f08 <__aeabi_dmul>
20005244:	000a      	movs	r2, r1
20005246:	0001      	movs	r1, r0
20005248:	2080      	movs	r0, #128	; 0x80
2000524a:	9104      	str	r1, [sp, #16]
2000524c:	9205      	str	r2, [sp, #20]
2000524e:	0013      	movs	r3, r2
20005250:	2200      	movs	r2, #0
20005252:	1069      	asrs	r1, r5, #1
20005254:	2580      	movs	r5, #128	; 0x80
20005256:	0300      	lsls	r0, r0, #12
20005258:	4684      	mov	ip, r0
2000525a:	9202      	str	r2, [sp, #8]
2000525c:	9303      	str	r3, [sp, #12]
2000525e:	2200      	movs	r2, #0
20005260:	05ad      	lsls	r5, r5, #22
20005262:	430d      	orrs	r5, r1
20005264:	4465      	add	r5, ip
20005266:	192b      	adds	r3, r5, r4
20005268:	9802      	ldr	r0, [sp, #8]
2000526a:	9903      	ldr	r1, [sp, #12]
2000526c:	0014      	movs	r4, r2
2000526e:	001d      	movs	r5, r3
20005270:	f7fe fe4a 	bl	20003f08 <__aeabi_dmul>
20005274:	0002      	movs	r2, r0
20005276:	000b      	movs	r3, r1
20005278:	0030      	movs	r0, r6
2000527a:	0039      	movs	r1, r7
2000527c:	f7ff f8c4 	bl	20004408 <__aeabi_dsub>
20005280:	9a06      	ldr	r2, [sp, #24]
20005282:	9b07      	ldr	r3, [sp, #28]
20005284:	0006      	movs	r6, r0
20005286:	000f      	movs	r7, r1
20005288:	0020      	movs	r0, r4
2000528a:	0029      	movs	r1, r5
2000528c:	f7ff f8bc 	bl	20004408 <__aeabi_dsub>
20005290:	0002      	movs	r2, r0
20005292:	000b      	movs	r3, r1
20005294:	980a      	ldr	r0, [sp, #40]	; 0x28
20005296:	990b      	ldr	r1, [sp, #44]	; 0x2c
20005298:	f7ff f8b6 	bl	20004408 <__aeabi_dsub>
2000529c:	9a02      	ldr	r2, [sp, #8]
2000529e:	9b03      	ldr	r3, [sp, #12]
200052a0:	f7fe fe32 	bl	20003f08 <__aeabi_dmul>
200052a4:	0002      	movs	r2, r0
200052a6:	000b      	movs	r3, r1
200052a8:	0030      	movs	r0, r6
200052aa:	0039      	movs	r1, r7
200052ac:	f7ff f8ac 	bl	20004408 <__aeabi_dsub>
200052b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
200052b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
200052b4:	f7fe fe28 	bl	20003f08 <__aeabi_dmul>
200052b8:	9d04      	ldr	r5, [sp, #16]
200052ba:	9e05      	ldr	r6, [sp, #20]
200052bc:	9006      	str	r0, [sp, #24]
200052be:	9107      	str	r1, [sp, #28]
200052c0:	002a      	movs	r2, r5
200052c2:	0033      	movs	r3, r6
200052c4:	0028      	movs	r0, r5
200052c6:	0031      	movs	r1, r6
200052c8:	f7fe fe1e 	bl	20003f08 <__aeabi_dmul>
200052cc:	0006      	movs	r6, r0
200052ce:	000f      	movs	r7, r1
200052d0:	4aa7      	ldr	r2, [pc, #668]	; (20005570 <__ieee754_pow+0x5bc>)
200052d2:	4ba8      	ldr	r3, [pc, #672]	; (20005574 <__ieee754_pow+0x5c0>)
200052d4:	f7fe fe18 	bl	20003f08 <__aeabi_dmul>
200052d8:	4aa7      	ldr	r2, [pc, #668]	; (20005578 <__ieee754_pow+0x5c4>)
200052da:	4ba8      	ldr	r3, [pc, #672]	; (2000557c <__ieee754_pow+0x5c8>)
200052dc:	f7fd fdfe 	bl	20002edc <__aeabi_dadd>
200052e0:	0032      	movs	r2, r6
200052e2:	003b      	movs	r3, r7
200052e4:	f7fe fe10 	bl	20003f08 <__aeabi_dmul>
200052e8:	4aa5      	ldr	r2, [pc, #660]	; (20005580 <__ieee754_pow+0x5cc>)
200052ea:	4ba6      	ldr	r3, [pc, #664]	; (20005584 <__ieee754_pow+0x5d0>)
200052ec:	f7fd fdf6 	bl	20002edc <__aeabi_dadd>
200052f0:	0032      	movs	r2, r6
200052f2:	003b      	movs	r3, r7
200052f4:	f7fe fe08 	bl	20003f08 <__aeabi_dmul>
200052f8:	4aa3      	ldr	r2, [pc, #652]	; (20005588 <__ieee754_pow+0x5d4>)
200052fa:	4ba4      	ldr	r3, [pc, #656]	; (2000558c <__ieee754_pow+0x5d8>)
200052fc:	f7fd fdee 	bl	20002edc <__aeabi_dadd>
20005300:	0032      	movs	r2, r6
20005302:	003b      	movs	r3, r7
20005304:	f7fe fe00 	bl	20003f08 <__aeabi_dmul>
20005308:	4aa1      	ldr	r2, [pc, #644]	; (20005590 <__ieee754_pow+0x5dc>)
2000530a:	4ba2      	ldr	r3, [pc, #648]	; (20005594 <__ieee754_pow+0x5e0>)
2000530c:	f7fd fde6 	bl	20002edc <__aeabi_dadd>
20005310:	0032      	movs	r2, r6
20005312:	003b      	movs	r3, r7
20005314:	f7fe fdf8 	bl	20003f08 <__aeabi_dmul>
20005318:	4a9f      	ldr	r2, [pc, #636]	; (20005598 <__ieee754_pow+0x5e4>)
2000531a:	4ba0      	ldr	r3, [pc, #640]	; (2000559c <__ieee754_pow+0x5e8>)
2000531c:	f7fd fdde 	bl	20002edc <__aeabi_dadd>
20005320:	0032      	movs	r2, r6
20005322:	0004      	movs	r4, r0
20005324:	000d      	movs	r5, r1
20005326:	003b      	movs	r3, r7
20005328:	0030      	movs	r0, r6
2000532a:	0039      	movs	r1, r7
2000532c:	f7fe fdec 	bl	20003f08 <__aeabi_dmul>
20005330:	0002      	movs	r2, r0
20005332:	000b      	movs	r3, r1
20005334:	0020      	movs	r0, r4
20005336:	0029      	movs	r1, r5
20005338:	f7fe fde6 	bl	20003f08 <__aeabi_dmul>
2000533c:	9e02      	ldr	r6, [sp, #8]
2000533e:	9f03      	ldr	r7, [sp, #12]
20005340:	0004      	movs	r4, r0
20005342:	000d      	movs	r5, r1
20005344:	9804      	ldr	r0, [sp, #16]
20005346:	9905      	ldr	r1, [sp, #20]
20005348:	0032      	movs	r2, r6
2000534a:	003b      	movs	r3, r7
2000534c:	f7fd fdc6 	bl	20002edc <__aeabi_dadd>
20005350:	9a06      	ldr	r2, [sp, #24]
20005352:	9b07      	ldr	r3, [sp, #28]
20005354:	f7fe fdd8 	bl	20003f08 <__aeabi_dmul>
20005358:	0022      	movs	r2, r4
2000535a:	002b      	movs	r3, r5
2000535c:	f7fd fdbe 	bl	20002edc <__aeabi_dadd>
20005360:	0032      	movs	r2, r6
20005362:	900a      	str	r0, [sp, #40]	; 0x28
20005364:	910b      	str	r1, [sp, #44]	; 0x2c
20005366:	003b      	movs	r3, r7
20005368:	0030      	movs	r0, r6
2000536a:	0039      	movs	r1, r7
2000536c:	9602      	str	r6, [sp, #8]
2000536e:	9703      	str	r7, [sp, #12]
20005370:	f7fe fdca 	bl	20003f08 <__aeabi_dmul>
20005374:	2200      	movs	r2, #0
20005376:	4b8a      	ldr	r3, [pc, #552]	; (200055a0 <__ieee754_pow+0x5ec>)
20005378:	0004      	movs	r4, r0
2000537a:	000d      	movs	r5, r1
2000537c:	f7fd fdae 	bl	20002edc <__aeabi_dadd>
20005380:	9a0a      	ldr	r2, [sp, #40]	; 0x28
20005382:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
20005384:	f7fd fdaa 	bl	20002edc <__aeabi_dadd>
20005388:	2600      	movs	r6, #0
2000538a:	000f      	movs	r7, r1
2000538c:	0032      	movs	r2, r6
2000538e:	000b      	movs	r3, r1
20005390:	9802      	ldr	r0, [sp, #8]
20005392:	9903      	ldr	r1, [sp, #12]
20005394:	f7fe fdb8 	bl	20003f08 <__aeabi_dmul>
20005398:	2200      	movs	r2, #0
2000539a:	9002      	str	r0, [sp, #8]
2000539c:	9103      	str	r1, [sp, #12]
2000539e:	4b80      	ldr	r3, [pc, #512]	; (200055a0 <__ieee754_pow+0x5ec>)
200053a0:	0030      	movs	r0, r6
200053a2:	0039      	movs	r1, r7
200053a4:	f7ff f830 	bl	20004408 <__aeabi_dsub>
200053a8:	0022      	movs	r2, r4
200053aa:	002b      	movs	r3, r5
200053ac:	f7ff f82c 	bl	20004408 <__aeabi_dsub>
200053b0:	0002      	movs	r2, r0
200053b2:	000b      	movs	r3, r1
200053b4:	980a      	ldr	r0, [sp, #40]	; 0x28
200053b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
200053b8:	f7ff f826 	bl	20004408 <__aeabi_dsub>
200053bc:	9a04      	ldr	r2, [sp, #16]
200053be:	9b05      	ldr	r3, [sp, #20]
200053c0:	f7fe fda2 	bl	20003f08 <__aeabi_dmul>
200053c4:	0032      	movs	r2, r6
200053c6:	0004      	movs	r4, r0
200053c8:	000d      	movs	r5, r1
200053ca:	9806      	ldr	r0, [sp, #24]
200053cc:	9907      	ldr	r1, [sp, #28]
200053ce:	003b      	movs	r3, r7
200053d0:	f7fe fd9a 	bl	20003f08 <__aeabi_dmul>
200053d4:	0002      	movs	r2, r0
200053d6:	000b      	movs	r3, r1
200053d8:	0020      	movs	r0, r4
200053da:	0029      	movs	r1, r5
200053dc:	f7fd fd7e 	bl	20002edc <__aeabi_dadd>
200053e0:	0004      	movs	r4, r0
200053e2:	000d      	movs	r5, r1
200053e4:	0002      	movs	r2, r0
200053e6:	000b      	movs	r3, r1
200053e8:	9802      	ldr	r0, [sp, #8]
200053ea:	9903      	ldr	r1, [sp, #12]
200053ec:	f7fd fd76 	bl	20002edc <__aeabi_dadd>
200053f0:	2600      	movs	r6, #0
200053f2:	22e0      	movs	r2, #224	; 0xe0
200053f4:	4b6b      	ldr	r3, [pc, #428]	; (200055a4 <__ieee754_pow+0x5f0>)
200053f6:	0612      	lsls	r2, r2, #24
200053f8:	0030      	movs	r0, r6
200053fa:	000f      	movs	r7, r1
200053fc:	f7fe fd84 	bl	20003f08 <__aeabi_dmul>
20005400:	9a02      	ldr	r2, [sp, #8]
20005402:	9b03      	ldr	r3, [sp, #12]
20005404:	9004      	str	r0, [sp, #16]
20005406:	9105      	str	r1, [sp, #20]
20005408:	0030      	movs	r0, r6
2000540a:	0039      	movs	r1, r7
2000540c:	f7fe fffc 	bl	20004408 <__aeabi_dsub>
20005410:	0002      	movs	r2, r0
20005412:	000b      	movs	r3, r1
20005414:	0020      	movs	r0, r4
20005416:	0029      	movs	r1, r5
20005418:	f7fe fff6 	bl	20004408 <__aeabi_dsub>
2000541c:	4a62      	ldr	r2, [pc, #392]	; (200055a8 <__ieee754_pow+0x5f4>)
2000541e:	4b61      	ldr	r3, [pc, #388]	; (200055a4 <__ieee754_pow+0x5f0>)
20005420:	f7fe fd72 	bl	20003f08 <__aeabi_dmul>
20005424:	4a61      	ldr	r2, [pc, #388]	; (200055ac <__ieee754_pow+0x5f8>)
20005426:	0004      	movs	r4, r0
20005428:	000d      	movs	r5, r1
2000542a:	4b61      	ldr	r3, [pc, #388]	; (200055b0 <__ieee754_pow+0x5fc>)
2000542c:	0030      	movs	r0, r6
2000542e:	0039      	movs	r1, r7
20005430:	f7fe fd6a 	bl	20003f08 <__aeabi_dmul>
20005434:	0002      	movs	r2, r0
20005436:	000b      	movs	r3, r1
20005438:	0020      	movs	r0, r4
2000543a:	0029      	movs	r1, r5
2000543c:	f7fd fd4e 	bl	20002edc <__aeabi_dadd>
20005440:	9a0c      	ldr	r2, [sp, #48]	; 0x30
20005442:	9b0d      	ldr	r3, [sp, #52]	; 0x34
20005444:	f7fd fd4a 	bl	20002edc <__aeabi_dadd>
20005448:	0006      	movs	r6, r0
2000544a:	4648      	mov	r0, r9
2000544c:	000f      	movs	r7, r1
2000544e:	f7fe f889 	bl	20003564 <__aeabi_i2d>
20005452:	0004      	movs	r4, r0
20005454:	000d      	movs	r5, r1
20005456:	9804      	ldr	r0, [sp, #16]
20005458:	9905      	ldr	r1, [sp, #20]
2000545a:	0032      	movs	r2, r6
2000545c:	003b      	movs	r3, r7
2000545e:	f7fd fd3d 	bl	20002edc <__aeabi_dadd>
20005462:	9a08      	ldr	r2, [sp, #32]
20005464:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005466:	f7fd fd39 	bl	20002edc <__aeabi_dadd>
2000546a:	0022      	movs	r2, r4
2000546c:	002b      	movs	r3, r5
2000546e:	f7fd fd35 	bl	20002edc <__aeabi_dadd>
20005472:	2000      	movs	r0, #0
20005474:	0022      	movs	r2, r4
20005476:	002b      	movs	r3, r5
20005478:	9002      	str	r0, [sp, #8]
2000547a:	9103      	str	r1, [sp, #12]
2000547c:	f7fe ffc4 	bl	20004408 <__aeabi_dsub>
20005480:	9a08      	ldr	r2, [sp, #32]
20005482:	9b09      	ldr	r3, [sp, #36]	; 0x24
20005484:	f7fe ffc0 	bl	20004408 <__aeabi_dsub>
20005488:	9a04      	ldr	r2, [sp, #16]
2000548a:	9b05      	ldr	r3, [sp, #20]
2000548c:	f7fe ffbc 	bl	20004408 <__aeabi_dsub>
20005490:	0002      	movs	r2, r0
20005492:	000b      	movs	r3, r1
20005494:	0030      	movs	r0, r6
20005496:	0039      	movs	r1, r7
20005498:	f7fe ffb6 	bl	20004408 <__aeabi_dsub>
2000549c:	9004      	str	r0, [sp, #16]
2000549e:	9105      	str	r1, [sp, #20]
200054a0:	465b      	mov	r3, fp
200054a2:	4642      	mov	r2, r8
200054a4:	3b01      	subs	r3, #1
200054a6:	4313      	orrs	r3, r2
200054a8:	d100      	bne.n	200054ac <__ieee754_pow+0x4f8>
200054aa:	e1ab      	b.n	20005804 <__ieee754_pow+0x850>
200054ac:	2300      	movs	r3, #0
200054ae:	4c2c      	ldr	r4, [pc, #176]	; (20005560 <__ieee754_pow+0x5ac>)
200054b0:	9306      	str	r3, [sp, #24]
200054b2:	9407      	str	r4, [sp, #28]
200054b4:	9800      	ldr	r0, [sp, #0]
200054b6:	9901      	ldr	r1, [sp, #4]
200054b8:	2600      	movs	r6, #0
200054ba:	000b      	movs	r3, r1
200054bc:	0032      	movs	r2, r6
200054be:	000f      	movs	r7, r1
200054c0:	f7fe ffa2 	bl	20004408 <__aeabi_dsub>
200054c4:	9a02      	ldr	r2, [sp, #8]
200054c6:	9b03      	ldr	r3, [sp, #12]
200054c8:	f7fe fd1e 	bl	20003f08 <__aeabi_dmul>
200054cc:	9a00      	ldr	r2, [sp, #0]
200054ce:	9b01      	ldr	r3, [sp, #4]
200054d0:	0004      	movs	r4, r0
200054d2:	000d      	movs	r5, r1
200054d4:	9804      	ldr	r0, [sp, #16]
200054d6:	9905      	ldr	r1, [sp, #20]
200054d8:	f7fe fd16 	bl	20003f08 <__aeabi_dmul>
200054dc:	0002      	movs	r2, r0
200054de:	000b      	movs	r3, r1
200054e0:	0020      	movs	r0, r4
200054e2:	0029      	movs	r1, r5
200054e4:	f7fd fcfa 	bl	20002edc <__aeabi_dadd>
200054e8:	0004      	movs	r4, r0
200054ea:	000d      	movs	r5, r1
200054ec:	9802      	ldr	r0, [sp, #8]
200054ee:	9903      	ldr	r1, [sp, #12]
200054f0:	0032      	movs	r2, r6
200054f2:	003b      	movs	r3, r7
200054f4:	9400      	str	r4, [sp, #0]
200054f6:	9501      	str	r5, [sp, #4]
200054f8:	f7fe fd06 	bl	20003f08 <__aeabi_dmul>
200054fc:	0002      	movs	r2, r0
200054fe:	000b      	movs	r3, r1
20005500:	0006      	movs	r6, r0
20005502:	000f      	movs	r7, r1
20005504:	0020      	movs	r0, r4
20005506:	0029      	movs	r1, r5
20005508:	f7fd fce8 	bl	20002edc <__aeabi_dadd>
2000550c:	4b29      	ldr	r3, [pc, #164]	; (200055b4 <__ieee754_pow+0x600>)
2000550e:	0004      	movs	r4, r0
20005510:	000d      	movs	r5, r1
20005512:	0002      	movs	r2, r0
20005514:	468b      	mov	fp, r1
20005516:	4299      	cmp	r1, r3
20005518:	dc00      	bgt.n	2000551c <__ieee754_pow+0x568>
2000551a:	e14f      	b.n	200057bc <__ieee754_pow+0x808>
2000551c:	4b26      	ldr	r3, [pc, #152]	; (200055b8 <__ieee754_pow+0x604>)
2000551e:	18cb      	adds	r3, r1, r3
20005520:	4303      	orrs	r3, r0
20005522:	d000      	beq.n	20005526 <__ieee754_pow+0x572>
20005524:	e1e2      	b.n	200058ec <__ieee754_pow+0x938>
20005526:	9800      	ldr	r0, [sp, #0]
20005528:	9901      	ldr	r1, [sp, #4]
2000552a:	4a24      	ldr	r2, [pc, #144]	; (200055bc <__ieee754_pow+0x608>)
2000552c:	4b24      	ldr	r3, [pc, #144]	; (200055c0 <__ieee754_pow+0x60c>)
2000552e:	f7fd fcd5 	bl	20002edc <__aeabi_dadd>
20005532:	0032      	movs	r2, r6
20005534:	9002      	str	r0, [sp, #8]
20005536:	9103      	str	r1, [sp, #12]
20005538:	003b      	movs	r3, r7
2000553a:	0020      	movs	r0, r4
2000553c:	0029      	movs	r1, r5
2000553e:	f7fe ff63 	bl	20004408 <__aeabi_dsub>
20005542:	0002      	movs	r2, r0
20005544:	000b      	movs	r3, r1
20005546:	9802      	ldr	r0, [sp, #8]
20005548:	9903      	ldr	r1, [sp, #12]
2000554a:	f7fe f895 	bl	20003678 <__aeabi_dcmpgt>
2000554e:	46aa      	mov	sl, r5
20005550:	e038      	b.n	200055c4 <__ieee754_pow+0x610>
20005552:	46c0      	nop			; (mov r8, r8)
20005554:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20005558:	43400000 	movtmi	r0, #0
2000555c:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
20005560:	3ff00000 	svccc	0x00f00000	; IMB
20005564:	0003988e 	andeq	r9, r3, lr, lsl #17
20005568:	000bb679 	andeq	fp, fp, r9, ror r6
2000556c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20005570:	4a454eef 	bmi	21159134 <_global_impure_ptr+0x1151ca4>
20005574:	3fca7e28 	svccc	0x00ca7e28
20005578:	93c9db65 	bicls	sp, r9, #103424	; 0x19400
2000557c:	3fcd864a 	svccc	0x00cd864a
20005580:	a91d4101 	ldmdbge	sp, {r0, r8, lr}
20005584:	3fd17460 	svccc	0x00d17460
20005588:	518f264d 	orrpl	r2, pc, sp, asr #12
2000558c:	3fd55555 	svccc	0x00d55555
20005590:	db6fabff 	blle	21bf0594 <_global_impure_ptr+0x1be9104>
20005594:	3fdb6db6 	svccc	0x00db6db6
20005598:	33333303 	teqcc	r3, #201326592	; 0xc000000
2000559c:	3fe33333 	svccc	0x00e33333
200055a0:	40080000 	andmi	r0, r8, r0
200055a4:	3feec709 	svccc	0x00eec709
200055a8:	dc3a03fd 	ldcle	3, cr0, [sl], #-1012	; 0xfffffc0c
200055ac:	145b01f5 	ldrbne	r0, [fp], #-501	; 0xfffffe0b
200055b0:	be3e2fe0 	cdplt	15, 3, cr2, cr14, cr0, {7}
200055b4:	408fffff 	strdmi	pc, [pc], pc	; <UNPREDICTABLE>
200055b8:	bf700000 	svclt	0x00700000
200055bc:	652b82fe 	strvs	r8, [fp, #-766]!	; 0xfffffd02
200055c0:	3c971547 	cfldr32cc	mvfx1, [r7], {71}	; 0x47
200055c4:	2800      	cmp	r0, #0
200055c6:	d000      	beq.n	200055ca <__ieee754_pow+0x616>
200055c8:	e190      	b.n	200058ec <__ieee754_pow+0x938>
200055ca:	4aec      	ldr	r2, [pc, #944]	; (2000597c <__ieee754_pow+0x9c8>)
200055cc:	4653      	mov	r3, sl
200055ce:	4694      	mov	ip, r2
200055d0:	2280      	movs	r2, #128	; 0x80
200055d2:	0352      	lsls	r2, r2, #13
200055d4:	0011      	movs	r1, r2
200055d6:	151b      	asrs	r3, r3, #20
200055d8:	4463      	add	r3, ip
200055da:	4119      	asrs	r1, r3
200055dc:	000b      	movs	r3, r1
200055de:	4690      	mov	r8, r2
200055e0:	4ae7      	ldr	r2, [pc, #924]	; (20005980 <__ieee754_pow+0x9cc>)
200055e2:	445b      	add	r3, fp
200055e4:	4694      	mov	ip, r2
200055e6:	005c      	lsls	r4, r3, #1
200055e8:	0d64      	lsrs	r4, r4, #21
200055ea:	4de6      	ldr	r5, [pc, #920]	; (20005984 <__ieee754_pow+0x9d0>)
200055ec:	4464      	add	r4, ip
200055ee:	4125      	asrs	r5, r4
200055f0:	001a      	movs	r2, r3
200055f2:	43aa      	bics	r2, r5
200055f4:	0011      	movs	r1, r2
200055f6:	4642      	mov	r2, r8
200055f8:	031b      	lsls	r3, r3, #12
200055fa:	0b1b      	lsrs	r3, r3, #12
200055fc:	4313      	orrs	r3, r2
200055fe:	2214      	movs	r2, #20
20005600:	1b14      	subs	r4, r2, r4
20005602:	4123      	asrs	r3, r4
20005604:	4699      	mov	r9, r3
20005606:	465b      	mov	r3, fp
20005608:	2000      	movs	r0, #0
2000560a:	2b00      	cmp	r3, #0
2000560c:	da00      	bge.n	20005610 <__ieee754_pow+0x65c>
2000560e:	e1b0      	b.n	20005972 <__ieee754_pow+0x9be>
20005610:	0002      	movs	r2, r0
20005612:	000b      	movs	r3, r1
20005614:	0030      	movs	r0, r6
20005616:	0039      	movs	r1, r7
20005618:	f7fe fef6 	bl	20004408 <__aeabi_dsub>
2000561c:	000b      	movs	r3, r1
2000561e:	0002      	movs	r2, r0
20005620:	0006      	movs	r6, r0
20005622:	000f      	movs	r7, r1
20005624:	9800      	ldr	r0, [sp, #0]
20005626:	9901      	ldr	r1, [sp, #4]
20005628:	f7fd fc58 	bl	20002edc <__aeabi_dadd>
2000562c:	464b      	mov	r3, r9
2000562e:	051b      	lsls	r3, r3, #20
20005630:	000d      	movs	r5, r1
20005632:	4698      	mov	r8, r3
20005634:	2400      	movs	r4, #0
20005636:	2200      	movs	r2, #0
20005638:	4bd3      	ldr	r3, [pc, #844]	; (20005988 <__ieee754_pow+0x9d4>)
2000563a:	0020      	movs	r0, r4
2000563c:	0029      	movs	r1, r5
2000563e:	f7fe fc63 	bl	20003f08 <__aeabi_dmul>
20005642:	0032      	movs	r2, r6
20005644:	9002      	str	r0, [sp, #8]
20005646:	9103      	str	r1, [sp, #12]
20005648:	003b      	movs	r3, r7
2000564a:	0020      	movs	r0, r4
2000564c:	0029      	movs	r1, r5
2000564e:	f7fe fedb 	bl	20004408 <__aeabi_dsub>
20005652:	0002      	movs	r2, r0
20005654:	000b      	movs	r3, r1
20005656:	9800      	ldr	r0, [sp, #0]
20005658:	9901      	ldr	r1, [sp, #4]
2000565a:	f7fe fed5 	bl	20004408 <__aeabi_dsub>
2000565e:	4acb      	ldr	r2, [pc, #812]	; (2000598c <__ieee754_pow+0x9d8>)
20005660:	4bcb      	ldr	r3, [pc, #812]	; (20005990 <__ieee754_pow+0x9dc>)
20005662:	f7fe fc51 	bl	20003f08 <__aeabi_dmul>
20005666:	4acb      	ldr	r2, [pc, #812]	; (20005994 <__ieee754_pow+0x9e0>)
20005668:	0006      	movs	r6, r0
2000566a:	000f      	movs	r7, r1
2000566c:	4bca      	ldr	r3, [pc, #808]	; (20005998 <__ieee754_pow+0x9e4>)
2000566e:	0020      	movs	r0, r4
20005670:	0029      	movs	r1, r5
20005672:	f7fe fc49 	bl	20003f08 <__aeabi_dmul>
20005676:	0002      	movs	r2, r0
20005678:	000b      	movs	r3, r1
2000567a:	0030      	movs	r0, r6
2000567c:	0039      	movs	r1, r7
2000567e:	f7fd fc2d 	bl	20002edc <__aeabi_dadd>
20005682:	0004      	movs	r4, r0
20005684:	000d      	movs	r5, r1
20005686:	0002      	movs	r2, r0
20005688:	000b      	movs	r3, r1
2000568a:	9802      	ldr	r0, [sp, #8]
2000568c:	9903      	ldr	r1, [sp, #12]
2000568e:	f7fd fc25 	bl	20002edc <__aeabi_dadd>
20005692:	9a02      	ldr	r2, [sp, #8]
20005694:	9b03      	ldr	r3, [sp, #12]
20005696:	0006      	movs	r6, r0
20005698:	000f      	movs	r7, r1
2000569a:	f7fe feb5 	bl	20004408 <__aeabi_dsub>
2000569e:	0002      	movs	r2, r0
200056a0:	000b      	movs	r3, r1
200056a2:	0020      	movs	r0, r4
200056a4:	0029      	movs	r1, r5
200056a6:	f7fe feaf 	bl	20004408 <__aeabi_dsub>
200056aa:	0032      	movs	r2, r6
200056ac:	9000      	str	r0, [sp, #0]
200056ae:	9101      	str	r1, [sp, #4]
200056b0:	003b      	movs	r3, r7
200056b2:	0030      	movs	r0, r6
200056b4:	0039      	movs	r1, r7
200056b6:	f7fe fc27 	bl	20003f08 <__aeabi_dmul>
200056ba:	0004      	movs	r4, r0
200056bc:	000d      	movs	r5, r1
200056be:	4ab7      	ldr	r2, [pc, #732]	; (2000599c <__ieee754_pow+0x9e8>)
200056c0:	4bb7      	ldr	r3, [pc, #732]	; (200059a0 <__ieee754_pow+0x9ec>)
200056c2:	f7fe fc21 	bl	20003f08 <__aeabi_dmul>
200056c6:	4ab7      	ldr	r2, [pc, #732]	; (200059a4 <__ieee754_pow+0x9f0>)
200056c8:	4bb7      	ldr	r3, [pc, #732]	; (200059a8 <__ieee754_pow+0x9f4>)
200056ca:	f7fe fe9d 	bl	20004408 <__aeabi_dsub>
200056ce:	0022      	movs	r2, r4
200056d0:	002b      	movs	r3, r5
200056d2:	f7fe fc19 	bl	20003f08 <__aeabi_dmul>
200056d6:	4ab5      	ldr	r2, [pc, #724]	; (200059ac <__ieee754_pow+0x9f8>)
200056d8:	4bb5      	ldr	r3, [pc, #724]	; (200059b0 <__ieee754_pow+0x9fc>)
200056da:	f7fd fbff 	bl	20002edc <__aeabi_dadd>
200056de:	0022      	movs	r2, r4
200056e0:	002b      	movs	r3, r5
200056e2:	f7fe fc11 	bl	20003f08 <__aeabi_dmul>
200056e6:	4ab3      	ldr	r2, [pc, #716]	; (200059b4 <__ieee754_pow+0xa00>)
200056e8:	4bb3      	ldr	r3, [pc, #716]	; (200059b8 <__ieee754_pow+0xa04>)
200056ea:	f7fe fe8d 	bl	20004408 <__aeabi_dsub>
200056ee:	0022      	movs	r2, r4
200056f0:	002b      	movs	r3, r5
200056f2:	f7fe fc09 	bl	20003f08 <__aeabi_dmul>
200056f6:	4ab1      	ldr	r2, [pc, #708]	; (200059bc <__ieee754_pow+0xa08>)
200056f8:	4bb1      	ldr	r3, [pc, #708]	; (200059c0 <__ieee754_pow+0xa0c>)
200056fa:	f7fd fbef 	bl	20002edc <__aeabi_dadd>
200056fe:	0022      	movs	r2, r4
20005700:	002b      	movs	r3, r5
20005702:	f7fe fc01 	bl	20003f08 <__aeabi_dmul>
20005706:	0002      	movs	r2, r0
20005708:	000b      	movs	r3, r1
2000570a:	0030      	movs	r0, r6
2000570c:	0039      	movs	r1, r7
2000570e:	f7fe fe7b 	bl	20004408 <__aeabi_dsub>
20005712:	0004      	movs	r4, r0
20005714:	000d      	movs	r5, r1
20005716:	0002      	movs	r2, r0
20005718:	000b      	movs	r3, r1
2000571a:	0030      	movs	r0, r6
2000571c:	0039      	movs	r1, r7
2000571e:	f7fe fbf3 	bl	20003f08 <__aeabi_dmul>
20005722:	2380      	movs	r3, #128	; 0x80
20005724:	9002      	str	r0, [sp, #8]
20005726:	9103      	str	r1, [sp, #12]
20005728:	2200      	movs	r2, #0
2000572a:	05db      	lsls	r3, r3, #23
2000572c:	0020      	movs	r0, r4
2000572e:	0029      	movs	r1, r5
20005730:	f7fe fe6a 	bl	20004408 <__aeabi_dsub>
20005734:	0002      	movs	r2, r0
20005736:	000b      	movs	r3, r1
20005738:	9802      	ldr	r0, [sp, #8]
2000573a:	9903      	ldr	r1, [sp, #12]
2000573c:	f7fd ffb0 	bl	200036a0 <__aeabi_ddiv>
20005740:	9a00      	ldr	r2, [sp, #0]
20005742:	9b01      	ldr	r3, [sp, #4]
20005744:	0004      	movs	r4, r0
20005746:	000d      	movs	r5, r1
20005748:	0030      	movs	r0, r6
2000574a:	0039      	movs	r1, r7
2000574c:	f7fe fbdc 	bl	20003f08 <__aeabi_dmul>
20005750:	9a00      	ldr	r2, [sp, #0]
20005752:	9b01      	ldr	r3, [sp, #4]
20005754:	f7fd fbc2 	bl	20002edc <__aeabi_dadd>
20005758:	0002      	movs	r2, r0
2000575a:	000b      	movs	r3, r1
2000575c:	0020      	movs	r0, r4
2000575e:	0029      	movs	r1, r5
20005760:	f7fe fe52 	bl	20004408 <__aeabi_dsub>
20005764:	0032      	movs	r2, r6
20005766:	003b      	movs	r3, r7
20005768:	f7fe fe4e 	bl	20004408 <__aeabi_dsub>
2000576c:	0002      	movs	r2, r0
2000576e:	000b      	movs	r3, r1
20005770:	2000      	movs	r0, #0
20005772:	4994      	ldr	r1, [pc, #592]	; (200059c4 <__ieee754_pow+0xa10>)
20005774:	f7fe fe48 	bl	20004408 <__aeabi_dsub>
20005778:	4643      	mov	r3, r8
2000577a:	185b      	adds	r3, r3, r1
2000577c:	151a      	asrs	r2, r3, #20
2000577e:	2a00      	cmp	r2, #0
20005780:	dc00      	bgt.n	20005784 <__ieee754_pow+0x7d0>
20005782:	e149      	b.n	20005a18 <__ieee754_pow+0xa64>
20005784:	0019      	movs	r1, r3
20005786:	9a06      	ldr	r2, [sp, #24]
20005788:	9b07      	ldr	r3, [sp, #28]
2000578a:	f7fe fbbd 	bl	20003f08 <__aeabi_dmul>
2000578e:	e459      	b.n	20005044 <__ieee754_pow+0x90>
20005790:	003a      	movs	r2, r7
20005792:	0033      	movs	r3, r6
20005794:	0038      	movs	r0, r7
20005796:	0031      	movs	r1, r6
20005798:	f7fe fbb6 	bl	20003f08 <__aeabi_dmul>
2000579c:	e452      	b.n	20005044 <__ieee754_pow+0x90>
2000579e:	4653      	mov	r3, sl
200057a0:	2b00      	cmp	r3, #0
200057a2:	db00      	blt.n	200057a6 <__ieee754_pow+0x7f2>
200057a4:	e4d9      	b.n	2000515a <__ieee754_pow+0x1a6>
200057a6:	9c00      	ldr	r4, [sp, #0]
200057a8:	9d01      	ldr	r5, [sp, #4]
200057aa:	2280      	movs	r2, #128	; 0x80
200057ac:	0612      	lsls	r2, r2, #24
200057ae:	002b      	movs	r3, r5
200057b0:	4694      	mov	ip, r2
200057b2:	4463      	add	r3, ip
200057b4:	0020      	movs	r0, r4
200057b6:	0019      	movs	r1, r3
200057b8:	f7ff fc44 	bl	20005044 <__ieee754_pow+0x90>
200057bc:	004b      	lsls	r3, r1, #1
200057be:	085b      	lsrs	r3, r3, #1
200057c0:	469a      	mov	sl, r3
200057c2:	4b81      	ldr	r3, [pc, #516]	; (200059c8 <__ieee754_pow+0xa14>)
200057c4:	459a      	cmp	sl, r3
200057c6:	dc00      	bgt.n	200057ca <__ieee754_pow+0x816>
200057c8:	e0b1      	b.n	2000592e <__ieee754_pow+0x97a>
200057ca:	4b80      	ldr	r3, [pc, #512]	; (200059cc <__ieee754_pow+0xa18>)
200057cc:	445b      	add	r3, fp
200057ce:	431a      	orrs	r2, r3
200057d0:	d10c      	bne.n	200057ec <__ieee754_pow+0x838>
200057d2:	0032      	movs	r2, r6
200057d4:	003b      	movs	r3, r7
200057d6:	f7fe fe17 	bl	20004408 <__aeabi_dsub>
200057da:	0002      	movs	r2, r0
200057dc:	000b      	movs	r3, r1
200057de:	9800      	ldr	r0, [sp, #0]
200057e0:	9901      	ldr	r1, [sp, #4]
200057e2:	f7fd ff3f 	bl	20003664 <__aeabi_dcmple>
200057e6:	2800      	cmp	r0, #0
200057e8:	d100      	bne.n	200057ec <__ieee754_pow+0x838>
200057ea:	e6ee      	b.n	200055ca <__ieee754_pow+0x616>
200057ec:	9806      	ldr	r0, [sp, #24]
200057ee:	9907      	ldr	r1, [sp, #28]
200057f0:	4a77      	ldr	r2, [pc, #476]	; (200059d0 <__ieee754_pow+0xa1c>)
200057f2:	4b78      	ldr	r3, [pc, #480]	; (200059d4 <__ieee754_pow+0xa20>)
200057f4:	f7fe fb88 	bl	20003f08 <__aeabi_dmul>
200057f8:	4a75      	ldr	r2, [pc, #468]	; (200059d0 <__ieee754_pow+0xa1c>)
200057fa:	4b76      	ldr	r3, [pc, #472]	; (200059d4 <__ieee754_pow+0xa20>)
200057fc:	f7fe fb84 	bl	20003f08 <__aeabi_dmul>
20005800:	f7ff fc20 	bl	20005044 <__ieee754_pow+0x90>
20005804:	2300      	movs	r3, #0
20005806:	4c74      	ldr	r4, [pc, #464]	; (200059d8 <__ieee754_pow+0xa24>)
20005808:	9306      	str	r3, [sp, #24]
2000580a:	9407      	str	r4, [sp, #28]
2000580c:	e652      	b.n	200054b4 <__ieee754_pow+0x500>
2000580e:	0002      	movs	r2, r0
20005810:	000b      	movs	r3, r1
20005812:	2000      	movs	r0, #0
20005814:	496b      	ldr	r1, [pc, #428]	; (200059c4 <__ieee754_pow+0xa10>)
20005816:	f7fd ff43 	bl	200036a0 <__aeabi_ddiv>
2000581a:	f7ff fc32 	bl	20005082 <__ieee754_pow+0xce>
2000581e:	4653      	mov	r3, sl
20005820:	2b00      	cmp	r3, #0
20005822:	db00      	blt.n	20005826 <__ieee754_pow+0x872>
20005824:	e499      	b.n	2000515a <__ieee754_pow+0x1a6>
20005826:	e454      	b.n	200050d2 <__ieee754_pow+0x11e>
20005828:	4b6c      	ldr	r3, [pc, #432]	; (200059dc <__ieee754_pow+0xa28>)
2000582a:	429c      	cmp	r4, r3
2000582c:	ddf7      	ble.n	2000581e <__ieee754_pow+0x86a>
2000582e:	4b65      	ldr	r3, [pc, #404]	; (200059c4 <__ieee754_pow+0xa10>)
20005830:	429c      	cmp	r4, r3
20005832:	dd00      	ble.n	20005836 <__ieee754_pow+0x882>
20005834:	e44a      	b.n	200050cc <__ieee754_pow+0x118>
20005836:	2200      	movs	r2, #0
20005838:	4b62      	ldr	r3, [pc, #392]	; (200059c4 <__ieee754_pow+0xa10>)
2000583a:	f7fe fde5 	bl	20004408 <__aeabi_dsub>
2000583e:	22c0      	movs	r2, #192	; 0xc0
20005840:	4b67      	ldr	r3, [pc, #412]	; (200059e0 <__ieee754_pow+0xa2c>)
20005842:	05d2      	lsls	r2, r2, #23
20005844:	0004      	movs	r4, r0
20005846:	000d      	movs	r5, r1
20005848:	f7fe fb5e 	bl	20003f08 <__aeabi_dmul>
2000584c:	4a65      	ldr	r2, [pc, #404]	; (200059e4 <__ieee754_pow+0xa30>)
2000584e:	0006      	movs	r6, r0
20005850:	000f      	movs	r7, r1
20005852:	4b65      	ldr	r3, [pc, #404]	; (200059e8 <__ieee754_pow+0xa34>)
20005854:	0020      	movs	r0, r4
20005856:	0029      	movs	r1, r5
20005858:	f7fe fb56 	bl	20003f08 <__aeabi_dmul>
2000585c:	2200      	movs	r2, #0
2000585e:	9002      	str	r0, [sp, #8]
20005860:	9103      	str	r1, [sp, #12]
20005862:	4b62      	ldr	r3, [pc, #392]	; (200059ec <__ieee754_pow+0xa38>)
20005864:	0020      	movs	r0, r4
20005866:	0029      	movs	r1, r5
20005868:	f7fe fb4e 	bl	20003f08 <__aeabi_dmul>
2000586c:	0002      	movs	r2, r0
2000586e:	000b      	movs	r3, r1
20005870:	485f      	ldr	r0, [pc, #380]	; (200059f0 <__ieee754_pow+0xa3c>)
20005872:	4960      	ldr	r1, [pc, #384]	; (200059f4 <__ieee754_pow+0xa40>)
20005874:	f7fe fdc8 	bl	20004408 <__aeabi_dsub>
20005878:	0022      	movs	r2, r4
2000587a:	002b      	movs	r3, r5
2000587c:	f7fe fb44 	bl	20003f08 <__aeabi_dmul>
20005880:	0002      	movs	r2, r0
20005882:	000b      	movs	r3, r1
20005884:	2000      	movs	r0, #0
20005886:	495c      	ldr	r1, [pc, #368]	; (200059f8 <__ieee754_pow+0xa44>)
20005888:	f7fe fdbe 	bl	20004408 <__aeabi_dsub>
2000588c:	0022      	movs	r2, r4
2000588e:	9004      	str	r0, [sp, #16]
20005890:	9105      	str	r1, [sp, #20]
20005892:	002b      	movs	r3, r5
20005894:	0020      	movs	r0, r4
20005896:	0029      	movs	r1, r5
20005898:	f7fe fb36 	bl	20003f08 <__aeabi_dmul>
2000589c:	0002      	movs	r2, r0
2000589e:	000b      	movs	r3, r1
200058a0:	9804      	ldr	r0, [sp, #16]
200058a2:	9905      	ldr	r1, [sp, #20]
200058a4:	f7fe fb30 	bl	20003f08 <__aeabi_dmul>
200058a8:	4a54      	ldr	r2, [pc, #336]	; (200059fc <__ieee754_pow+0xa48>)
200058aa:	4b4d      	ldr	r3, [pc, #308]	; (200059e0 <__ieee754_pow+0xa2c>)
200058ac:	f7fe fb2c 	bl	20003f08 <__aeabi_dmul>
200058b0:	0002      	movs	r2, r0
200058b2:	000b      	movs	r3, r1
200058b4:	9802      	ldr	r0, [sp, #8]
200058b6:	9903      	ldr	r1, [sp, #12]
200058b8:	f7fe fda6 	bl	20004408 <__aeabi_dsub>
200058bc:	0002      	movs	r2, r0
200058be:	000b      	movs	r3, r1
200058c0:	0004      	movs	r4, r0
200058c2:	000d      	movs	r5, r1
200058c4:	0030      	movs	r0, r6
200058c6:	0039      	movs	r1, r7
200058c8:	f7fd fb08 	bl	20002edc <__aeabi_dadd>
200058cc:	2000      	movs	r0, #0
200058ce:	0032      	movs	r2, r6
200058d0:	003b      	movs	r3, r7
200058d2:	9002      	str	r0, [sp, #8]
200058d4:	9103      	str	r1, [sp, #12]
200058d6:	f7fe fd97 	bl	20004408 <__aeabi_dsub>
200058da:	0002      	movs	r2, r0
200058dc:	000b      	movs	r3, r1
200058de:	0020      	movs	r0, r4
200058e0:	0029      	movs	r1, r5
200058e2:	f7fe fd91 	bl	20004408 <__aeabi_dsub>
200058e6:	9004      	str	r0, [sp, #16]
200058e8:	9105      	str	r1, [sp, #20]
200058ea:	e5d9      	b.n	200054a0 <__ieee754_pow+0x4ec>
200058ec:	4a44      	ldr	r2, [pc, #272]	; (20005a00 <__ieee754_pow+0xa4c>)
200058ee:	4b45      	ldr	r3, [pc, #276]	; (20005a04 <__ieee754_pow+0xa50>)
200058f0:	9806      	ldr	r0, [sp, #24]
200058f2:	9907      	ldr	r1, [sp, #28]
200058f4:	f7fe fb08 	bl	20003f08 <__aeabi_dmul>
200058f8:	4a41      	ldr	r2, [pc, #260]	; (20005a00 <__ieee754_pow+0xa4c>)
200058fa:	4b42      	ldr	r3, [pc, #264]	; (20005a04 <__ieee754_pow+0xa50>)
200058fc:	f7fe fb04 	bl	20003f08 <__aeabi_dmul>
20005900:	f7ff fba0 	bl	20005044 <__ieee754_pow+0x90>
20005904:	2a00      	cmp	r2, #0
20005906:	d001      	beq.n	2000590c <__ieee754_pow+0x958>
20005908:	f7ff fba9 	bl	2000505e <__ieee754_pow+0xaa>
2000590c:	3214      	adds	r2, #20
2000590e:	1ad3      	subs	r3, r2, r3
20005910:	002a      	movs	r2, r5
20005912:	411a      	asrs	r2, r3
20005914:	0011      	movs	r1, r2
20005916:	4099      	lsls	r1, r3
20005918:	428d      	cmp	r5, r1
2000591a:	d001      	beq.n	20005920 <__ieee754_pow+0x96c>
2000591c:	f7ff fb76 	bl	2000500c <__ieee754_pow+0x58>
20005920:	2301      	movs	r3, #1
20005922:	401a      	ands	r2, r3
20005924:	18db      	adds	r3, r3, r3
20005926:	1a9b      	subs	r3, r3, r2
20005928:	469b      	mov	fp, r3
2000592a:	f7ff fb6f 	bl	2000500c <__ieee754_pow+0x58>
2000592e:	2200      	movs	r2, #0
20005930:	4b31      	ldr	r3, [pc, #196]	; (200059f8 <__ieee754_pow+0xa44>)
20005932:	4690      	mov	r8, r2
20005934:	4691      	mov	r9, r2
20005936:	459a      	cmp	sl, r3
20005938:	dc00      	bgt.n	2000593c <__ieee754_pow+0x988>
2000593a:	e67b      	b.n	20005634 <__ieee754_pow+0x680>
2000593c:	e645      	b.n	200055ca <__ieee754_pow+0x616>
2000593e:	0002      	movs	r2, r0
20005940:	000b      	movs	r3, r1
20005942:	f7fe fd61 	bl	20004408 <__aeabi_dsub>
20005946:	0002      	movs	r2, r0
20005948:	000b      	movs	r3, r1
2000594a:	f7fd fea9 	bl	200036a0 <__aeabi_ddiv>
2000594e:	f7ff fb79 	bl	20005044 <__ieee754_pow+0x90>
20005952:	2380      	movs	r3, #128	; 0x80
20005954:	4c2c      	ldr	r4, [pc, #176]	; (20005a08 <__ieee754_pow+0xa54>)
20005956:	05db      	lsls	r3, r3, #23
20005958:	9308      	str	r3, [sp, #32]
2000595a:	9409      	str	r4, [sp, #36]	; 0x24
2000595c:	4b2b      	ldr	r3, [pc, #172]	; (20005a0c <__ieee754_pow+0xa58>)
2000595e:	4c2c      	ldr	r4, [pc, #176]	; (20005a10 <__ieee754_pow+0xa5c>)
20005960:	2200      	movs	r2, #0
20005962:	930c      	str	r3, [sp, #48]	; 0x30
20005964:	940d      	str	r4, [sp, #52]	; 0x34
20005966:	2480      	movs	r4, #128	; 0x80
20005968:	4b2a      	ldr	r3, [pc, #168]	; (20005a14 <__ieee754_pow+0xa60>)
2000596a:	02e4      	lsls	r4, r4, #11
2000596c:	9206      	str	r2, [sp, #24]
2000596e:	9307      	str	r3, [sp, #28]
20005970:	e449      	b.n	20005206 <__ieee754_pow+0x252>
20005972:	464b      	mov	r3, r9
20005974:	425b      	negs	r3, r3
20005976:	4699      	mov	r9, r3
20005978:	e64a      	b.n	20005610 <__ieee754_pow+0x65c>
2000597a:	46c0      	nop			; (mov r8, r8)
2000597c:	fffffc02 			; <UNDEFINED> instruction: 0xfffffc02
20005980:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
20005984:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20005988:	3fe62e43 	svccc	0x00e62e43
2000598c:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
20005990:	3fe62e42 	svccc	0x00e62e42
20005994:	0ca86c39 	stceq	12, cr6, [r8], #228	; 0xe4
20005998:	be205c61 	cdplt	12, 2, cr5, cr0, cr1, {3}
2000599c:	72bea4d0 	adcsvc	sl, lr, #208, 8	; 0xd0000000
200059a0:	3e663769 	cdpcc	7, 6, cr3, cr6, cr9, {3}
200059a4:	c5d26bf1 	ldrbgt	r6, [r2, #3057]	; 0xbf1
200059a8:	3ebbbd41 	cdpcc	13, 11, cr11, cr11, cr1, {2}
200059ac:	af25de2c 	svcge	0x0025de2c
200059b0:	3f11566a 	svccc	0x0011566a
200059b4:	16bebd93 	ssatne	fp, #31, r3, lsl #27
200059b8:	3f66c16c 	svccc	0x0066c16c
200059bc:	5555553e 	ldrbpl	r5, [r5, #-1342]	; 0xfffffac2
200059c0:	3fc55555 	svccc	0x00c55555
200059c4:	3ff00000 	svccc	0x00f00000	; IMB
200059c8:	4090cbff 			; <UNDEFINED> instruction: 0x4090cbff
200059cc:	3f6f3400 	svccc	0x006f3400
200059d0:	c2f8f359 	rscsgt	pc, r8, #1677721601	; 0x64000001
200059d4:	01a56e1f 			; <UNDEFINED> instruction: 0x01a56e1f
200059d8:	bff00000 	svclt	0x00f00000	; IMB
200059dc:	3feffffe 	svccc	0x00effffe
200059e0:	3ff71547 	svccc	0x00f71547
200059e4:	f85ddf44 			; <UNDEFINED> instruction: 0xf85ddf44
200059e8:	3e54ae0b 	cdpcc	14, 5, cr10, cr4, cr11, {0}
200059ec:	3fd00000 	svccc	0x00d00000
200059f0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
200059f4:	3fd55555 	svccc	0x00d55555
200059f8:	3fe00000 	svccc	0x00e00000
200059fc:	652b82fe 	strvs	r8, [fp, #-766]!	; 0xfffffd02
20005a00:	8800759c 	stmdahi	r0, {r2, r3, r4, r7, r8, sl, ip, sp, lr}
20005a04:	7e37e43c 	mrcvc	4, 1, lr, cr7, cr12, {1}
20005a08:	3fe2b803 	svccc	0x00e2b803
20005a0c:	43cfd006 	bicmi	sp, pc, #6
20005a10:	3e4cfdeb 	cdpcc	13, 4, cr15, cr12, cr11, {7}
20005a14:	3ff80000 	svccc	0x00f80000
20005a18:	464a      	mov	r2, r9
20005a1a:	f000 f999 	bl	20005d50 <scalbn>
20005a1e:	e6b2      	b.n	20005786 <__ieee754_pow+0x7d2>

20005a20 <__ieee754_sqrt>:
20005a20:	4b6c      	ldr	r3, [pc, #432]	; (20005bd4 <__ieee754_sqrt+0x1b4>)
20005a22:	b5f0      	push	{r4, r5, r6, r7, lr}
20005a24:	000a      	movs	r2, r1
20005a26:	4646      	mov	r6, r8
20005a28:	000d      	movs	r5, r1
20005a2a:	46d6      	mov	lr, sl
20005a2c:	464f      	mov	r7, r9
20005a2e:	0019      	movs	r1, r3
20005a30:	b5c0      	push	{r6, r7, lr}
20005a32:	0004      	movs	r4, r0
20005a34:	0006      	movs	r6, r0
20005a36:	4029      	ands	r1, r5
20005a38:	4299      	cmp	r1, r3
20005a3a:	d100      	bne.n	20005a3e <__ieee754_sqrt+0x1e>
20005a3c:	e0a7      	b.n	20005b8e <__ieee754_sqrt+0x16e>
20005a3e:	2d00      	cmp	r5, #0
20005a40:	dc00      	bgt.n	20005a44 <__ieee754_sqrt+0x24>
20005a42:	e081      	b.n	20005b48 <__ieee754_sqrt+0x128>
20005a44:	152f      	asrs	r7, r5, #20
20005a46:	d100      	bne.n	20005a4a <__ieee754_sqrt+0x2a>
20005a48:	e08e      	b.n	20005b68 <__ieee754_sqrt+0x148>
20005a4a:	4b63      	ldr	r3, [pc, #396]	; (20005bd8 <__ieee754_sqrt+0x1b8>)
20005a4c:	0312      	lsls	r2, r2, #12
20005a4e:	469c      	mov	ip, r3
20005a50:	2380      	movs	r3, #128	; 0x80
20005a52:	0b12      	lsrs	r2, r2, #12
20005a54:	035b      	lsls	r3, r3, #13
20005a56:	4467      	add	r7, ip
20005a58:	431a      	orrs	r2, r3
20005a5a:	07fb      	lsls	r3, r7, #31
20005a5c:	d468      	bmi.n	20005b30 <__ieee754_sqrt+0x110>
20005a5e:	107b      	asrs	r3, r7, #1
20005a60:	469c      	mov	ip, r3
20005a62:	0fe3      	lsrs	r3, r4, #31
20005a64:	189b      	adds	r3, r3, r2
20005a66:	189b      	adds	r3, r3, r2
20005a68:	2280      	movs	r2, #128	; 0x80
20005a6a:	2116      	movs	r1, #22
20005a6c:	2600      	movs	r6, #0
20005a6e:	2500      	movs	r5, #0
20005a70:	0064      	lsls	r4, r4, #1
20005a72:	0392      	lsls	r2, r2, #14
20005a74:	18a8      	adds	r0, r5, r2
20005a76:	4298      	cmp	r0, r3
20005a78:	dc02      	bgt.n	20005a80 <__ieee754_sqrt+0x60>
20005a7a:	1885      	adds	r5, r0, r2
20005a7c:	1a1b      	subs	r3, r3, r0
20005a7e:	18b6      	adds	r6, r6, r2
20005a80:	0fe0      	lsrs	r0, r4, #31
20005a82:	005b      	lsls	r3, r3, #1
20005a84:	3901      	subs	r1, #1
20005a86:	181b      	adds	r3, r3, r0
20005a88:	0064      	lsls	r4, r4, #1
20005a8a:	0852      	lsrs	r2, r2, #1
20005a8c:	2900      	cmp	r1, #0
20005a8e:	d1f1      	bne.n	20005a74 <__ieee754_sqrt+0x54>
20005a90:	2200      	movs	r2, #0
20005a92:	4692      	mov	sl, r2
20005a94:	4690      	mov	r8, r2
20005a96:	2280      	movs	r2, #128	; 0x80
20005a98:	2020      	movs	r0, #32
20005a9a:	0612      	lsls	r2, r2, #24
20005a9c:	e009      	b.n	20005ab2 <__ieee754_sqrt+0x92>
20005a9e:	42ab      	cmp	r3, r5
20005aa0:	d038      	beq.n	20005b14 <__ieee754_sqrt+0xf4>
20005aa2:	0fe1      	lsrs	r1, r4, #31
20005aa4:	18c9      	adds	r1, r1, r3
20005aa6:	3801      	subs	r0, #1
20005aa8:	18cb      	adds	r3, r1, r3
20005aaa:	0064      	lsls	r4, r4, #1
20005aac:	0852      	lsrs	r2, r2, #1
20005aae:	2800      	cmp	r0, #0
20005ab0:	d018      	beq.n	20005ae4 <__ieee754_sqrt+0xc4>
20005ab2:	4641      	mov	r1, r8
20005ab4:	1851      	adds	r1, r2, r1
20005ab6:	42ab      	cmp	r3, r5
20005ab8:	ddf1      	ble.n	20005a9e <__ieee754_sqrt+0x7e>
20005aba:	188f      	adds	r7, r1, r2
20005abc:	46b8      	mov	r8, r7
20005abe:	46a9      	mov	r9, r5
20005ac0:	2900      	cmp	r1, #0
20005ac2:	db30      	blt.n	20005b26 <__ieee754_sqrt+0x106>
20005ac4:	1b5b      	subs	r3, r3, r5
20005ac6:	428c      	cmp	r4, r1
20005ac8:	41ad      	sbcs	r5, r5
20005aca:	426d      	negs	r5, r5
20005acc:	1b5b      	subs	r3, r3, r5
20005ace:	1a64      	subs	r4, r4, r1
20005ad0:	0fe1      	lsrs	r1, r4, #31
20005ad2:	18c9      	adds	r1, r1, r3
20005ad4:	3801      	subs	r0, #1
20005ad6:	4492      	add	sl, r2
20005ad8:	464d      	mov	r5, r9
20005ada:	18cb      	adds	r3, r1, r3
20005adc:	0064      	lsls	r4, r4, #1
20005ade:	0852      	lsrs	r2, r2, #1
20005ae0:	2800      	cmp	r0, #0
20005ae2:	d1e6      	bne.n	20005ab2 <__ieee754_sqrt+0x92>
20005ae4:	4323      	orrs	r3, r4
20005ae6:	d128      	bne.n	20005b3a <__ieee754_sqrt+0x11a>
20005ae8:	4653      	mov	r3, sl
20005aea:	085b      	lsrs	r3, r3, #1
20005aec:	493b      	ldr	r1, [pc, #236]	; (20005bdc <__ieee754_sqrt+0x1bc>)
20005aee:	1072      	asrs	r2, r6, #1
20005af0:	4688      	mov	r8, r1
20005af2:	4442      	add	r2, r8
20005af4:	07f1      	lsls	r1, r6, #31
20005af6:	d502      	bpl.n	20005afe <__ieee754_sqrt+0xde>
20005af8:	2180      	movs	r1, #128	; 0x80
20005afa:	0609      	lsls	r1, r1, #24
20005afc:	430b      	orrs	r3, r1
20005afe:	4661      	mov	r1, ip
20005b00:	001e      	movs	r6, r3
20005b02:	050f      	lsls	r7, r1, #20
20005b04:	18bd      	adds	r5, r7, r2
20005b06:	0030      	movs	r0, r6
20005b08:	0029      	movs	r1, r5
20005b0a:	bc1c      	pop	{r2, r3, r4}
20005b0c:	4690      	mov	r8, r2
20005b0e:	4699      	mov	r9, r3
20005b10:	46a2      	mov	sl, r4
20005b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
20005b14:	42a1      	cmp	r1, r4
20005b16:	d8c4      	bhi.n	20005aa2 <__ieee754_sqrt+0x82>
20005b18:	188f      	adds	r7, r1, r2
20005b1a:	46b8      	mov	r8, r7
20005b1c:	2900      	cmp	r1, #0
20005b1e:	db42      	blt.n	20005ba6 <__ieee754_sqrt+0x186>
20005b20:	4699      	mov	r9, r3
20005b22:	2300      	movs	r3, #0
20005b24:	e7d3      	b.n	20005ace <__ieee754_sqrt+0xae>
20005b26:	2f00      	cmp	r7, #0
20005b28:	db2f      	blt.n	20005b8a <__ieee754_sqrt+0x16a>
20005b2a:	1c6f      	adds	r7, r5, #1
20005b2c:	46b9      	mov	r9, r7
20005b2e:	e7c9      	b.n	20005ac4 <__ieee754_sqrt+0xa4>
20005b30:	0fe1      	lsrs	r1, r4, #31
20005b32:	0052      	lsls	r2, r2, #1
20005b34:	188a      	adds	r2, r1, r2
20005b36:	0064      	lsls	r4, r4, #1
20005b38:	e791      	b.n	20005a5e <__ieee754_sqrt+0x3e>
20005b3a:	4653      	mov	r3, sl
20005b3c:	3301      	adds	r3, #1
20005b3e:	d035      	beq.n	20005bac <__ieee754_sqrt+0x18c>
20005b40:	4653      	mov	r3, sl
20005b42:	3301      	adds	r3, #1
20005b44:	085b      	lsrs	r3, r3, #1
20005b46:	e7d1      	b.n	20005aec <__ieee754_sqrt+0xcc>
20005b48:	006b      	lsls	r3, r5, #1
20005b4a:	085b      	lsrs	r3, r3, #1
20005b4c:	4303      	orrs	r3, r0
20005b4e:	d0da      	beq.n	20005b06 <__ieee754_sqrt+0xe6>
20005b50:	2700      	movs	r7, #0
20005b52:	2d00      	cmp	r5, #0
20005b54:	d132      	bne.n	20005bbc <__ieee754_sqrt+0x19c>
20005b56:	0ae2      	lsrs	r2, r4, #11
20005b58:	3f15      	subs	r7, #21
20005b5a:	0564      	lsls	r4, r4, #21
20005b5c:	2a00      	cmp	r2, #0
20005b5e:	d0fa      	beq.n	20005b56 <__ieee754_sqrt+0x136>
20005b60:	2380      	movs	r3, #128	; 0x80
20005b62:	035b      	lsls	r3, r3, #13
20005b64:	421a      	tst	r2, r3
20005b66:	d124      	bne.n	20005bb2 <__ieee754_sqrt+0x192>
20005b68:	2080      	movs	r0, #128	; 0x80
20005b6a:	2300      	movs	r3, #0
20005b6c:	0340      	lsls	r0, r0, #13
20005b6e:	e000      	b.n	20005b72 <__ieee754_sqrt+0x152>
20005b70:	000b      	movs	r3, r1
20005b72:	0052      	lsls	r2, r2, #1
20005b74:	1c59      	adds	r1, r3, #1
20005b76:	4202      	tst	r2, r0
20005b78:	d0fa      	beq.n	20005b70 <__ieee754_sqrt+0x150>
20005b7a:	2020      	movs	r0, #32
20005b7c:	1a40      	subs	r0, r0, r1
20005b7e:	1aff      	subs	r7, r7, r3
20005b80:	0023      	movs	r3, r4
20005b82:	40c3      	lsrs	r3, r0
20005b84:	408c      	lsls	r4, r1
20005b86:	431a      	orrs	r2, r3
20005b88:	e75f      	b.n	20005a4a <__ieee754_sqrt+0x2a>
20005b8a:	46a9      	mov	r9, r5
20005b8c:	e79a      	b.n	20005ac4 <__ieee754_sqrt+0xa4>
20005b8e:	002b      	movs	r3, r5
20005b90:	0002      	movs	r2, r0
20005b92:	0029      	movs	r1, r5
20005b94:	f7fe f9b8 	bl	20003f08 <__aeabi_dmul>
20005b98:	0032      	movs	r2, r6
20005b9a:	002b      	movs	r3, r5
20005b9c:	f7fd f99e 	bl	20002edc <__aeabi_dadd>
20005ba0:	0006      	movs	r6, r0
20005ba2:	000d      	movs	r5, r1
20005ba4:	e7af      	b.n	20005b06 <__ieee754_sqrt+0xe6>
20005ba6:	2f00      	cmp	r7, #0
20005ba8:	dabf      	bge.n	20005b2a <__ieee754_sqrt+0x10a>
20005baa:	e7b9      	b.n	20005b20 <__ieee754_sqrt+0x100>
20005bac:	3601      	adds	r6, #1
20005bae:	2300      	movs	r3, #0
20005bb0:	e79c      	b.n	20005aec <__ieee754_sqrt+0xcc>
20005bb2:	2301      	movs	r3, #1
20005bb4:	2100      	movs	r1, #0
20005bb6:	2020      	movs	r0, #32
20005bb8:	425b      	negs	r3, r3
20005bba:	e7e0      	b.n	20005b7e <__ieee754_sqrt+0x15e>
20005bbc:	002b      	movs	r3, r5
20005bbe:	0002      	movs	r2, r0
20005bc0:	0029      	movs	r1, r5
20005bc2:	f7fe fc21 	bl	20004408 <__aeabi_dsub>
20005bc6:	0002      	movs	r2, r0
20005bc8:	000b      	movs	r3, r1
20005bca:	f7fd fd69 	bl	200036a0 <__aeabi_ddiv>
20005bce:	0006      	movs	r6, r0
20005bd0:	000d      	movs	r5, r1
20005bd2:	e798      	b.n	20005b06 <__ieee754_sqrt+0xe6>
20005bd4:	7ff00000 	svcvc	0x00f00000	; IMB
20005bd8:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
20005bdc:	3fe00000 	svccc	0x00e00000

20005be0 <fabs>:
20005be0:	0049      	lsls	r1, r1, #1
20005be2:	084b      	lsrs	r3, r1, #1
20005be4:	0019      	movs	r1, r3
20005be6:	4770      	bx	lr

20005be8 <finite>:
20005be8:	4b03      	ldr	r3, [pc, #12]	; (20005bf8 <finite+0x10>)
20005bea:	0048      	lsls	r0, r1, #1
20005bec:	469c      	mov	ip, r3
20005bee:	0840      	lsrs	r0, r0, #1
20005bf0:	4460      	add	r0, ip
20005bf2:	0fc0      	lsrs	r0, r0, #31
20005bf4:	4770      	bx	lr
20005bf6:	46c0      	nop			; (mov r8, r8)
20005bf8:	80100000 	andshi	r0, r0, r0

20005bfc <matherr>:
20005bfc:	2000      	movs	r0, #0
20005bfe:	4770      	bx	lr

20005c00 <nan>:
20005c00:	2000      	movs	r0, #0
20005c02:	4901      	ldr	r1, [pc, #4]	; (20005c08 <nan+0x8>)
20005c04:	4770      	bx	lr
20005c06:	46c0      	nop			; (mov r8, r8)
20005c08:	7ff80000 	svcvc	0x00f80000

20005c0c <rint>:
20005c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
20005c0e:	46c6      	mov	lr, r8
20005c10:	b500      	push	{lr}
20005c12:	0fcb      	lsrs	r3, r1, #31
20005c14:	4698      	mov	r8, r3
20005c16:	4c4a      	ldr	r4, [pc, #296]	; (20005d40 <rint+0x134>)
20005c18:	004b      	lsls	r3, r1, #1
20005c1a:	0d5b      	lsrs	r3, r3, #21
20005c1c:	191e      	adds	r6, r3, r4
20005c1e:	b082      	sub	sp, #8
20005c20:	0007      	movs	r7, r0
20005c22:	000a      	movs	r2, r1
20005c24:	2e13      	cmp	r6, #19
20005c26:	dc35      	bgt.n	20005c94 <rint+0x88>
20005c28:	2e00      	cmp	r6, #0
20005c2a:	db57      	blt.n	20005cdc <rint+0xd0>
20005c2c:	4b45      	ldr	r3, [pc, #276]	; (20005d44 <rint+0x138>)
20005c2e:	0004      	movs	r4, r0
20005c30:	4133      	asrs	r3, r6
20005c32:	001f      	movs	r7, r3
20005c34:	400f      	ands	r7, r1
20005c36:	4307      	orrs	r7, r0
20005c38:	000d      	movs	r5, r1
20005c3a:	2f00      	cmp	r7, #0
20005c3c:	d024      	beq.n	20005c88 <rint+0x7c>
20005c3e:	085b      	lsrs	r3, r3, #1
20005c40:	001c      	movs	r4, r3
20005c42:	400c      	ands	r4, r1
20005c44:	4320      	orrs	r0, r4
20005c46:	2700      	movs	r7, #0
20005c48:	2800      	cmp	r0, #0
20005c4a:	d007      	beq.n	20005c5c <rint+0x50>
20005c4c:	2e13      	cmp	r6, #19
20005c4e:	d100      	bne.n	20005c52 <rint+0x46>
20005c50:	e073      	b.n	20005d3a <rint+0x12e>
20005c52:	2280      	movs	r2, #128	; 0x80
20005c54:	02d2      	lsls	r2, r2, #11
20005c56:	4132      	asrs	r2, r6
20005c58:	4399      	bics	r1, r3
20005c5a:	430a      	orrs	r2, r1
20005c5c:	4643      	mov	r3, r8
20005c5e:	00de      	lsls	r6, r3, #3
20005c60:	4b39      	ldr	r3, [pc, #228]	; (20005d48 <rint+0x13c>)
20005c62:	0011      	movs	r1, r2
20005c64:	199e      	adds	r6, r3, r6
20005c66:	6834      	ldr	r4, [r6, #0]
20005c68:	6875      	ldr	r5, [r6, #4]
20005c6a:	0038      	movs	r0, r7
20005c6c:	0022      	movs	r2, r4
20005c6e:	002b      	movs	r3, r5
20005c70:	f7fd f934 	bl	20002edc <__aeabi_dadd>
20005c74:	9000      	str	r0, [sp, #0]
20005c76:	9101      	str	r1, [sp, #4]
20005c78:	9800      	ldr	r0, [sp, #0]
20005c7a:	9901      	ldr	r1, [sp, #4]
20005c7c:	0022      	movs	r2, r4
20005c7e:	002b      	movs	r3, r5
20005c80:	f7fe fbc2 	bl	20004408 <__aeabi_dsub>
20005c84:	0004      	movs	r4, r0
20005c86:	000d      	movs	r5, r1
20005c88:	0020      	movs	r0, r4
20005c8a:	0029      	movs	r1, r5
20005c8c:	b002      	add	sp, #8
20005c8e:	bc04      	pop	{r2}
20005c90:	4690      	mov	r8, r2
20005c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
20005c94:	2e33      	cmp	r6, #51	; 0x33
20005c96:	dd0c      	ble.n	20005cb2 <rint+0xa6>
20005c98:	2380      	movs	r3, #128	; 0x80
20005c9a:	0004      	movs	r4, r0
20005c9c:	00db      	lsls	r3, r3, #3
20005c9e:	000d      	movs	r5, r1
20005ca0:	429e      	cmp	r6, r3
20005ca2:	d1f1      	bne.n	20005c88 <rint+0x7c>
20005ca4:	0002      	movs	r2, r0
20005ca6:	000b      	movs	r3, r1
20005ca8:	f7fd f918 	bl	20002edc <__aeabi_dadd>
20005cac:	0004      	movs	r4, r0
20005cae:	000d      	movs	r5, r1
20005cb0:	e7ea      	b.n	20005c88 <rint+0x7c>
20005cb2:	4c26      	ldr	r4, [pc, #152]	; (20005d4c <rint+0x140>)
20005cb4:	000d      	movs	r5, r1
20005cb6:	46a4      	mov	ip, r4
20005cb8:	2401      	movs	r4, #1
20005cba:	4463      	add	r3, ip
20005cbc:	4264      	negs	r4, r4
20005cbe:	40dc      	lsrs	r4, r3
20005cc0:	46a4      	mov	ip, r4
20005cc2:	4661      	mov	r1, ip
20005cc4:	0004      	movs	r4, r0
20005cc6:	4201      	tst	r1, r0
20005cc8:	d0de      	beq.n	20005c88 <rint+0x7c>
20005cca:	0849      	lsrs	r1, r1, #1
20005ccc:	4201      	tst	r1, r0
20005cce:	d0c5      	beq.n	20005c5c <rint+0x50>
20005cd0:	2780      	movs	r7, #128	; 0x80
20005cd2:	05ff      	lsls	r7, r7, #23
20005cd4:	411f      	asrs	r7, r3
20005cd6:	4388      	bics	r0, r1
20005cd8:	4307      	orrs	r7, r0
20005cda:	e7bf      	b.n	20005c5c <rint+0x50>
20005cdc:	004b      	lsls	r3, r1, #1
20005cde:	085b      	lsrs	r3, r3, #1
20005ce0:	4303      	orrs	r3, r0
20005ce2:	0004      	movs	r4, r0
20005ce4:	000d      	movs	r5, r1
20005ce6:	2b00      	cmp	r3, #0
20005ce8:	d0ce      	beq.n	20005c88 <rint+0x7c>
20005cea:	030b      	lsls	r3, r1, #12
20005cec:	0b1b      	lsrs	r3, r3, #12
20005cee:	4303      	orrs	r3, r0
20005cf0:	001a      	movs	r2, r3
20005cf2:	425b      	negs	r3, r3
20005cf4:	4313      	orrs	r3, r2
20005cf6:	2280      	movs	r2, #128	; 0x80
20005cf8:	0b1b      	lsrs	r3, r3, #12
20005cfa:	0312      	lsls	r2, r2, #12
20005cfc:	4013      	ands	r3, r2
20005cfe:	0c4a      	lsrs	r2, r1, #17
20005d00:	0452      	lsls	r2, r2, #17
20005d02:	4313      	orrs	r3, r2
20005d04:	0019      	movs	r1, r3
20005d06:	4643      	mov	r3, r8
20005d08:	00da      	lsls	r2, r3, #3
20005d0a:	4b0f      	ldr	r3, [pc, #60]	; (20005d48 <rint+0x13c>)
20005d0c:	189b      	adds	r3, r3, r2
20005d0e:	681c      	ldr	r4, [r3, #0]
20005d10:	685d      	ldr	r5, [r3, #4]
20005d12:	0022      	movs	r2, r4
20005d14:	002b      	movs	r3, r5
20005d16:	f7fd f8e1 	bl	20002edc <__aeabi_dadd>
20005d1a:	9000      	str	r0, [sp, #0]
20005d1c:	9101      	str	r1, [sp, #4]
20005d1e:	9800      	ldr	r0, [sp, #0]
20005d20:	9901      	ldr	r1, [sp, #4]
20005d22:	0022      	movs	r2, r4
20005d24:	002b      	movs	r3, r5
20005d26:	f7fe fb6f 	bl	20004408 <__aeabi_dsub>
20005d2a:	4642      	mov	r2, r8
20005d2c:	004b      	lsls	r3, r1, #1
20005d2e:	085b      	lsrs	r3, r3, #1
20005d30:	07d6      	lsls	r6, r2, #31
20005d32:	4333      	orrs	r3, r6
20005d34:	0004      	movs	r4, r0
20005d36:	001d      	movs	r5, r3
20005d38:	e7a6      	b.n	20005c88 <rint+0x7c>
20005d3a:	2780      	movs	r7, #128	; 0x80
20005d3c:	063f      	lsls	r7, r7, #24
20005d3e:	e788      	b.n	20005c52 <rint+0x46>
20005d40:	fffffc01 			; <UNDEFINED> instruction: 0xfffffc01
20005d44:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20005d48:	20007480 	andcs	r7, r0, r0, lsl #9
20005d4c:	fffffbed 			; <UNDEFINED> instruction: 0xfffffbed

20005d50 <scalbn>:
20005d50:	004b      	lsls	r3, r1, #1
20005d52:	b570      	push	{r4, r5, r6, lr}
20005d54:	0d5b      	lsrs	r3, r3, #21
20005d56:	0014      	movs	r4, r2
20005d58:	000a      	movs	r2, r1
20005d5a:	2b00      	cmp	r3, #0
20005d5c:	d11a      	bne.n	20005d94 <scalbn+0x44>
20005d5e:	004b      	lsls	r3, r1, #1
20005d60:	085b      	lsrs	r3, r3, #1
20005d62:	4303      	orrs	r3, r0
20005d64:	d015      	beq.n	20005d92 <scalbn+0x42>
20005d66:	2200      	movs	r2, #0
20005d68:	4b22      	ldr	r3, [pc, #136]	; (20005df4 <scalbn+0xa4>)
20005d6a:	f7fe f8cd 	bl	20003f08 <__aeabi_dmul>
20005d6e:	4b22      	ldr	r3, [pc, #136]	; (20005df8 <scalbn+0xa8>)
20005d70:	000a      	movs	r2, r1
20005d72:	429c      	cmp	r4, r3
20005d74:	db22      	blt.n	20005dbc <scalbn+0x6c>
20005d76:	004b      	lsls	r3, r1, #1
20005d78:	0d5b      	lsrs	r3, r3, #21
20005d7a:	3b36      	subs	r3, #54	; 0x36
20005d7c:	4d1f      	ldr	r5, [pc, #124]	; (20005dfc <scalbn+0xac>)
20005d7e:	18e3      	adds	r3, r4, r3
20005d80:	42ab      	cmp	r3, r5
20005d82:	dc20      	bgt.n	20005dc6 <scalbn+0x76>
20005d84:	2b00      	cmp	r3, #0
20005d86:	dd0d      	ble.n	20005da4 <scalbn+0x54>
20005d88:	4c1d      	ldr	r4, [pc, #116]	; (20005e00 <scalbn+0xb0>)
20005d8a:	051b      	lsls	r3, r3, #20
20005d8c:	4022      	ands	r2, r4
20005d8e:	431a      	orrs	r2, r3
20005d90:	0011      	movs	r1, r2
20005d92:	bd70      	pop	{r4, r5, r6, pc}
20005d94:	4d1b      	ldr	r5, [pc, #108]	; (20005e04 <scalbn+0xb4>)
20005d96:	42ab      	cmp	r3, r5
20005d98:	d1f0      	bne.n	20005d7c <scalbn+0x2c>
20005d9a:	0002      	movs	r2, r0
20005d9c:	000b      	movs	r3, r1
20005d9e:	f7fd f89d 	bl	20002edc <__aeabi_dadd>
20005da2:	e7f6      	b.n	20005d92 <scalbn+0x42>
20005da4:	001d      	movs	r5, r3
20005da6:	3535      	adds	r5, #53	; 0x35
20005da8:	da18      	bge.n	20005ddc <scalbn+0x8c>
20005daa:	4b17      	ldr	r3, [pc, #92]	; (20005e08 <scalbn+0xb8>)
20005dac:	0002      	movs	r2, r0
20005dae:	429c      	cmp	r4, r3
20005db0:	dc0a      	bgt.n	20005dc8 <scalbn+0x78>
20005db2:	000b      	movs	r3, r1
20005db4:	4815      	ldr	r0, [pc, #84]	; (20005e0c <scalbn+0xbc>)
20005db6:	4916      	ldr	r1, [pc, #88]	; (20005e10 <scalbn+0xc0>)
20005db8:	f000 f832 	bl	20005e20 <copysign>
20005dbc:	4a13      	ldr	r2, [pc, #76]	; (20005e0c <scalbn+0xbc>)
20005dbe:	4b14      	ldr	r3, [pc, #80]	; (20005e10 <scalbn+0xc0>)
20005dc0:	f7fe f8a2 	bl	20003f08 <__aeabi_dmul>
20005dc4:	e7e5      	b.n	20005d92 <scalbn+0x42>
20005dc6:	0002      	movs	r2, r0
20005dc8:	000b      	movs	r3, r1
20005dca:	4812      	ldr	r0, [pc, #72]	; (20005e14 <scalbn+0xc4>)
20005dcc:	4912      	ldr	r1, [pc, #72]	; (20005e18 <scalbn+0xc8>)
20005dce:	f000 f827 	bl	20005e20 <copysign>
20005dd2:	4a10      	ldr	r2, [pc, #64]	; (20005e14 <scalbn+0xc4>)
20005dd4:	4b10      	ldr	r3, [pc, #64]	; (20005e18 <scalbn+0xc8>)
20005dd6:	f7fe f897 	bl	20003f08 <__aeabi_dmul>
20005dda:	e7da      	b.n	20005d92 <scalbn+0x42>
20005ddc:	4c08      	ldr	r4, [pc, #32]	; (20005e00 <scalbn+0xb0>)
20005dde:	3336      	adds	r3, #54	; 0x36
20005de0:	4022      	ands	r2, r4
20005de2:	051b      	lsls	r3, r3, #20
20005de4:	4313      	orrs	r3, r2
20005de6:	0019      	movs	r1, r3
20005de8:	2200      	movs	r2, #0
20005dea:	4b0c      	ldr	r3, [pc, #48]	; (20005e1c <scalbn+0xcc>)
20005dec:	f7fe f88c 	bl	20003f08 <__aeabi_dmul>
20005df0:	e7cf      	b.n	20005d92 <scalbn+0x42>
20005df2:	46c0      	nop			; (mov r8, r8)
20005df4:	43500000 	cmpmi	r0, #0
20005df8:	ffff3cb0 			; <UNDEFINED> instruction: 0xffff3cb0
20005dfc:	000007fe 	strdeq	r0, [r0], -lr
20005e00:	800fffff 	strdhi	pc, [pc], -pc	; <UNPREDICTABLE>
20005e04:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005e08:	0000c350 	andeq	ip, r0, r0, asr r3
20005e0c:	c2f8f359 	rscsgt	pc, r8, #1677721601	; 0x64000001
20005e10:	01a56e1f 			; <UNDEFINED> instruction: 0x01a56e1f
20005e14:	8800759c 	stmdahi	r0, {r2, r3, r4, r7, r8, sl, ip, sp, lr}
20005e18:	7e37e43c 	mrcvc	4, 1, lr, cr7, cr12, {1}
20005e1c:	3c900000 	ldccc	0, cr0, [r0], {0}

20005e20 <copysign>:
20005e20:	b530      	push	{r4, r5, lr}
20005e22:	004a      	lsls	r2, r1, #1
20005e24:	0fdb      	lsrs	r3, r3, #31
20005e26:	07db      	lsls	r3, r3, #31
20005e28:	0852      	lsrs	r2, r2, #1
20005e2a:	431a      	orrs	r2, r3
20005e2c:	0011      	movs	r1, r2
20005e2e:	bd30      	pop	{r4, r5, pc}

20005e30 <__errno>:
20005e30:	4b01      	ldr	r3, [pc, #4]	; (20005e38 <__errno+0x8>)
20005e32:	6818      	ldr	r0, [r3, #0]
20005e34:	4770      	bx	lr
20005e36:	46c0      	nop			; (mov r8, r8)
20005e38:	20006ed4 	ldrdcs	r6, [r0], -r4

20005e3c <player1Eaten>:
20005e3c:	00000000 	andeq	r0, r0, r0

20005e40 <player2Eaten>:
20005e40:	00000000 	andeq	r0, r0, r0

20005e44 <r>:
20005e44:	00000000 	andeq	r0, r0, r0

20005e48 <p1NextDirx.4166>:
20005e48:	00000000 	andeq	r0, r0, r0

20005e4c <p1NextDiry.4167>:
20005e4c:	00000000 	andeq	r0, r0, r0

20005e50 <p2NextDirx.4176>:
20005e50:	00000000 	andeq	r0, r0, r0

20005e54 <p2NextDiry.4177>:
20005e54:	00000000 	andeq	r0, r0, r0

20005e58 <frameBuffer1>:
	...

20006258 <frameBuffer0>:
	...

20006658 <currentDot>:
20006658:	00000000 	andeq	r0, r0, r0

2000665c <currentLevel>:
2000665c:	00000000 	andeq	r0, r0, r0

20006660 <backBuffer>:
20006660:	20006258 	andcs	r6, r0, r8, asr r2

20006664 <frontBuffer>:
20006664:	20005e58 	andcs	r5, r0, r8, asr lr

20006668 <level1>:
20006668:	00000020 	andeq	r0, r0, r0, lsr #32
2000666c:	00000010 	andeq	r0, r0, r0, lsl r0
20006670:	01020101 	tsteq	r2, r1, lsl #2
20006674:	010f010e 	tsteq	pc, lr, lsl #2
20006678:	02010119 	andeq	r0, r1, #1073741830	; 0x40000006
2000667c:	02120209 	andseq	r0, r2, #-1879048192	; 0x90000000
20006680:	030c0304 	movweq	r0, #49924	; 0xc304
20006684:	04150406 	ldreq	r0, [r5], #-1030	; 0xfffffbfa
20006688:	05160503 	ldreq	r0, [r6, #-1283]	; 0xfffffafd
2000668c:	060d060a 	streq	r0, [sp], -sl, lsl #12
20006690:	0710070d 	ldreq	r0, [r0, -sp, lsl #14]
20006694:	08170804 	ldmdaeq	r7, {r2, fp}
20006698:	09140905 	ldmdbeq	r4, {r0, r2, r8, fp}
2000669c:	0a160a0e 	beq	20588edc <_global_impure_ptr+0x581a4c>
200066a0:	0b110b08 	bleq	204492c8 <_global_impure_ptr+0x441e38>
200066a4:	0c010b19 			; <UNDEFINED> instruction: 0x0c010b19
200066a8:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
200066ac:	0c190c18 	ldceq	12, cr0, [r9], {24}
	...
20006738:	02130202 	andseq	r0, r3, #536870912	; 0x20000000
2000673c:	03170307 	tsteq	r7, #469762048	; 0x1c000000
20006740:	0515050b 	ldreq	r0, [r5, #-1291]	; 0xfffffaf5
20006744:	060c0609 	streq	r0, [ip], -r9, lsl #12
20006748:	0711070e 	ldreq	r0, [r1, -lr, lsl #14]
2000674c:	080f0805 	stmdaeq	pc, {r0, r2, fp}	; <UNPREDICTABLE>
20006750:	0a130a03 	beq	204c8f64 <_global_impure_ptr+0x4c1ad4>
20006754:	0b180b07 	bleq	20609378 <_global_impure_ptr+0x601ee8>
	...

20006800 <level2>:
20006800:	0000002e 	andeq	r0, r0, lr, lsr #32
20006804:	00000014 	andeq	r0, r0, r4, lsl r0
20006808:	010a0101 	tsteq	sl, r1, lsl #2
2000680c:	0113010e 	tsteq	r3, lr, lsl #2
20006810:	01150114 	tsteq	r5, r4, lsl r1
20006814:	02050119 	andeq	r0, r5, #1073741830	; 0x40000006
20006818:	0215020a 	andseq	r0, r5, #-1610612736	; 0xa0000000
2000681c:	03080307 	movweq	r0, #33543	; 0x8307
20006820:	04140310 	ldreq	r0, [r4], #-784	; 0xfffffcf0
20006824:	050f0501 	streq	r0, [pc, #-1281]	; 2000632b <frameBuffer0+0xd3>
20006828:	05190516 	ldreq	r0, [r9, #-1302]	; 0xfffffaea
2000682c:	060b0604 	streq	r0, [fp], -r4, lsl #12
20006830:	070b060f 	streq	r0, [fp, -pc, lsl #12]
20006834:	0714070f 	ldreq	r0, [r4, -pc, lsl #14]
20006838:	08070801 	stmdaeq	r7, {r0, fp}
2000683c:	0817080d 	ldmdaeq	r7, {r0, r2, r3, fp}
20006840:	09060819 	stmdbeq	r6, {r0, r3, r4, fp}
20006844:	09130907 	ldmdbeq	r3, {r0, r1, r2, r8, fp}
20006848:	0a160a15 	beq	205890a4 <_global_impure_ptr+0x581c14>
2000684c:	0b030b02 	bleq	200c945c <_global_impure_ptr+0xc1fcc>
20006850:	0b0a0b09 	bleq	2028947c <_global_impure_ptr+0x281fec>
20006854:	0c050b11 			; <UNDEFINED> instruction: 0x0c050b11
20006858:	0c0e0c0c 	stceq	12, cr0, [lr], {12}
2000685c:	0c170c16 	ldceq	12, cr0, [r7], {22}
20006860:	0c190c18 	ldceq	12, cr0, [r9], {24}
	...
200068d0:	020d0107 	andeq	r0, sp, #-1073741823	; 0xc0000001
200068d4:	02180214 	andseq	r0, r8, #20, 4	; 0x40000001
200068d8:	03040302 	movweq	r0, #17154	; 0x4302
200068dc:	05080315 	streq	r0, [r8, #-789]	; 0xfffffceb
200068e0:	060c0601 	streq	r0, [ip], -r1, lsl #12
200068e4:	070d0612 	smladeq	sp, r2, r6, r0
200068e8:	08060717 	stmdaeq	r6, {r0, r1, r2, r4, r8, r9, sl}
200068ec:	0a18080e 	beq	2060892c <_global_impure_ptr+0x60149c>
200068f0:	0c010b0c 			; <UNDEFINED> instruction: 0x0c010b0c
200068f4:	0c150c07 	ldceq	12, cr0, [r5], {7}
	...

20006998 <level3>:
20006998:	00000000 	andeq	r0, r0, r0
2000699c:	00000002 	andeq	r0, r0, r2
	...
20006a68:	070b060f 	streq	r0, [fp, -pc, lsl #12]
	...

20006b30 <level4>:
20006b30:	00000000 	andeq	r0, r0, r0
20006b34:	00000004 	andeq	r0, r0, r4
	...
20006c00:	01190101 	tsteq	r9, r1, lsl #2
20006c04:	0c190c01 	ldceq	12, cr0, [r9], {1}
	...

20006cc8 <ball_geometry0>:
20006cc8:	00000019 	andeq	r0, r0, r9, lsl r0
20006ccc:	00000005 	andeq	r0, r0, r5
20006cd0:	00000005 	andeq	r0, r0, r5
20006cd4:	00010000 	andeq	r0, r1, r0
20006cd8:	00030002 	andeq	r0, r3, r2
20006cdc:	01000004 	tsteq	r0, r4
20006ce0:	01020101 	tsteq	r2, r1, lsl #2
20006ce4:	01040103 	tsteq	r4, r3, lsl #2
20006ce8:	02010200 	andeq	r0, r1, #0, 4
20006cec:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
20006cf0:	03000204 	movweq	r0, #516	; 0x204
20006cf4:	03020301 	movweq	r0, #8961	; 0x2301
20006cf8:	03040303 	movweq	r0, #17155	; 0x4303
20006cfc:	04010400 	streq	r0, [r1], #-1024	; 0xfffffc00
20006d00:	04030402 	streq	r0, [r3], #-1026	; 0xfffffbfe
20006d04:	00000404 	andeq	r0, r0, r4, lsl #8

20006d08 <ball_geometry1>:
20006d08:	00000015 	andeq	r0, r0, r5, lsl r0
20006d0c:	00000005 	andeq	r0, r0, r5
20006d10:	00000005 	andeq	r0, r0, r5
20006d14:	00020001 	andeq	r0, r2, r1
20006d18:	01000003 	tsteq	r0, r3
20006d1c:	01020101 	tsteq	r2, r1, lsl #2
20006d20:	01040103 	tsteq	r4, r3, lsl #2
20006d24:	02010200 	andeq	r0, r1, #0, 4
20006d28:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
20006d2c:	03000204 	movweq	r0, #516	; 0x204
20006d30:	03020301 	movweq	r0, #8961	; 0x2301
20006d34:	03040303 	movweq	r0, #17155	; 0x4303
20006d38:	04020401 	streq	r0, [r2], #-1025	; 0xfffffbff
20006d3c:	00000403 	andeq	r0, r0, r3, lsl #8
	...

20006d48 <ball_geometry2>:
20006d48:	00000010 	andeq	r0, r0, r0, lsl r0
20006d4c:	00000005 	andeq	r0, r0, r5
20006d50:	00000005 	andeq	r0, r0, r5
20006d54:	00020001 	andeq	r0, r2, r1
20006d58:	01000003 	tsteq	r0, r3
20006d5c:	01030101 	tsteq	r3, r1, lsl #2
20006d60:	02000104 	andeq	r0, r0, #4, 2
20006d64:	03000204 	movweq	r0, #516	; 0x204
20006d68:	03030301 	movweq	r0, #13057	; 0x3301
20006d6c:	04010304 	streq	r0, [r1], #-772	; 0xfffffcfc
20006d70:	04030402 	streq	r0, [r3], #-1026	; 0xfffffbfe
	...

20006d88 <ball_geometry3>:
20006d88:	0000000c 	andeq	r0, r0, ip
20006d8c:	00000005 	andeq	r0, r0, r5
20006d90:	00000005 	andeq	r0, r0, r5
20006d94:	00010000 	andeq	r0, r1, r0
20006d98:	00040003 	andeq	r0, r4, r3
20006d9c:	01040100 	mrseq	r0, (UNDEF: 20)
20006da0:	03040300 	movweq	r0, #17152	; 0x4300
20006da4:	04010400 	streq	r0, [r1], #-1024	; 0xfffffc00
20006da8:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
	...

20006dc8 <ball_geometry4>:
20006dc8:	00000019 	andeq	r0, r0, r9, lsl r0
20006dcc:	00000005 	andeq	r0, r0, r5
20006dd0:	00000005 	andeq	r0, r0, r5
20006dd4:	00030002 	andeq	r0, r3, r2
20006dd8:	01010100 	mrseq	r0, (UNDEF: 17)
20006ddc:	01030102 	tsteq	r3, r2, lsl #2
20006de0:	02010200 	andeq	r0, r1, #0, 4
20006de4:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
20006de8:	03010204 	movweq	r0, #4612	; 0x1204
20006dec:	03030302 	movweq	r0, #13058	; 0x3302
20006df0:	04010304 	streq	r0, [r1], #-772	; 0xfffffcfc
20006df4:	00000402 	andeq	r0, r0, r2, lsl #8
	...

20006e08 <ball_geometryAI>:
20006e08:	00000013 	andeq	r0, r0, r3, lsl r0
20006e0c:	00000005 	andeq	r0, r0, r5
20006e10:	00000005 	andeq	r0, r0, r5
20006e14:	00020001 	andeq	r0, r2, r1
20006e18:	01000003 	tsteq	r0, r3
20006e1c:	01040102 	tsteq	r4, r2, lsl #2
20006e20:	02010200 	andeq	r0, r1, #0, 4
20006e24:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
20006e28:	03000204 	movweq	r0, #516	; 0x204
20006e2c:	03020301 	movweq	r0, #8961	; 0x2301
20006e30:	03040303 	movweq	r0, #17155	; 0x4303
20006e34:	04020400 	streq	r0, [r2], #-1024	; 0xfffffc00
20006e38:	00000404 	andeq	r0, r0, r4, lsl #8
	...

20006e48 <player1Object>:
20006e48:	20006d08 	andcs	r6, r0, r8, lsl #26
	...
20006e54:	00000002 	andeq	r0, r0, r2
20006e58:	00000021 	andeq	r0, r0, r1, lsr #32
20006e5c:	00000004 	andeq	r0, r0, r4
20006e60:	00000000 	andeq	r0, r0, r0
20006e64:	2000214d 	andcs	r2, r0, sp, asr #2
20006e68:	2000262d 	andcs	r2, r0, sp, lsr #12
20006e6c:	20002495 	mulcs	r0, r5, r4
20006e70:	200025b1 			; <UNDEFINED> instruction: 0x200025b1

20006e74 <player2Object>:
20006e74:	20006dc8 	andcs	r6, r0, r8, asr #27
	...
20006e80:	0000007a 	andeq	r0, r0, sl, ror r0
20006e84:	00000021 	andeq	r0, r0, r1, lsr #32
20006e88:	00000004 	andeq	r0, r0, r4
20006e8c:	00000000 	andeq	r0, r0, r0
20006e90:	2000214d 	andcs	r2, r0, sp, asr #2
20006e94:	2000262d 	andcs	r2, r0, sp, lsr #12
20006e98:	20002495 	mulcs	r0, r5, r4
20006e9c:	200025b1 			; <UNDEFINED> instruction: 0x200025b1

20006ea0 <AI1Object>:
20006ea0:	20006e08 	andcs	r6, r0, r8, lsl #28
	...
20006eac:	0000003e 	andeq	r0, r0, lr, lsr r0
20006eb0:	0000003a 	andeq	r0, r0, sl, lsr r0
20006eb4:	00000001 	andeq	r0, r0, r1
20006eb8:	00000000 	andeq	r0, r0, r0
20006ebc:	2000214d 	andcs	r2, r0, sp, asr #2
20006ec0:	2000262d 	andcs	r2, r0, sp, lsr #12
20006ec4:	20000615 	andcs	r0, r0, r5, lsl r6
20006ec8:	200025b1 			; <UNDEFINED> instruction: 0x200025b1

20006ecc <next>:
20006ecc:	00000001 	andeq	r0, r0, r1

20006ed0 <__fdlib_version>:
20006ed0:	00000001 	andeq	r0, r0, r1

20006ed4 <_impure_ptr>:
20006ed4:	20006ed8 	ldrdcs	r6, [r0], -r8

20006ed8 <impure_data>:
20006ed8:	00000000 	andeq	r0, r0, r0
20006edc:	200071c4 	andcs	r7, r0, r4, asr #3
20006ee0:	2000722c 	andcs	r7, r0, ip, lsr #4
20006ee4:	20007294 	mulcs	r0, r4, r2
	...
20006f80:	00000001 	andeq	r0, r0, r1
20006f84:	00000000 	andeq	r0, r0, r0
20006f88:	abcd330e 	blge	1f353bc8 <startup-0xcac438>
20006f8c:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
20006f90:	0005deec 	andeq	sp, r5, ip, ror #29
20006f94:	0000000b 	andeq	r0, r0, fp
	...
20007300:	4556454c 	ldrbmi	r4, [r6, #-1356]	; 0xfffffab4
20007304:	2020204c 	eorcs	r2, r0, ip, asr #32
20007308:	33202020 			; <UNDEFINED> instruction: 0x33202020
2000730c:	0034202c 	eorseq	r2, r4, ip, lsr #32
20007310:	454c4553 	strbmi	r4, [ip, #-1363]	; 0xfffffaad
20007314:	20205443 	eorcs	r5, r0, r3, asr #8
20007318:	31202020 			; <UNDEFINED> instruction: 0x31202020
2000731c:	2c32202c 	ldccs	0, cr2, [r2], #-176	; 0xffffff50
	...
20007328:	20202020 	eorcs	r2, r0, r0, lsr #32
2000732c:	4d414720 	stclmi	7, cr4, [r1, #-128]	; 0xffffff80
20007330:	564f2045 	strbpl	r2, [pc], -r5, asr #32
20007334:	20205245 	eorcs	r5, r0, r5, asr #4
20007338:	00202020 	eoreq	r2, r0, r0, lsr #32
2000733c:	20202020 	eorcs	r2, r0, r0, lsr #32
20007340:	20202020 	eorcs	r2, r0, r0, lsr #32
20007344:	57415244 	strbpl	r5, [r1, -r4, asr #4]
20007348:	20202020 	eorcs	r2, r0, r0, lsr #32
2000734c:	20202020 	eorcs	r2, r0, r0, lsr #32
20007350:	00000000 	andeq	r0, r0, r0
20007354:	202d2d3c 	eorcs	r2, sp, ip, lsr sp
20007358:	59414c50 	stmdbpl	r1, {r4, r6, sl, fp, lr}^
2000735c:	31205245 			; <UNDEFINED> instruction: 0x31205245
20007360:	4e495720 	cdpmi	7, 4, cr5, cr9, cr0, {1}
20007364:	20202053 	eorcs	r2, r0, r3, asr r0
20007368:	00000020 	andeq	r0, r0, r0, lsr #32
2000736c:	50202020 	eorpl	r2, r0, r0, lsr #32
20007370:	4559414c 	ldrbmi	r4, [r9, #-332]	; 0xfffffeb4
20007374:	20322052 	eorscs	r2, r2, r2, asr r0
20007378:	534e4957 	movtpl	r4, #59735	; 0xe957
2000737c:	3e2d2d20 	cdpcc	13, 2, cr2, cr13, cr0, {1}
20007380:	00000020 	andeq	r0, r0, r0, lsr #32
20007384:	20202020 	eorcs	r2, r0, r0, lsr #32
20007388:	452d2020 	strmi	r2, [sp, #-32]!	; 0xffffffe0
2000738c:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
20007390:	2020202d 	eorcs	r2, r0, sp, lsr #32
20007394:	00202020 	eoreq	r2, r0, r0, lsr #32
20007398:	31502020 	cmpcc	r0, r0, lsr #32
2000739c:	20202020 	eorcs	r2, r0, r0, lsr #32
200073a0:	20202d20 	eorcs	r2, r0, r0, lsr #26
200073a4:	50202020 	eorpl	r2, r0, r0, lsr #32
200073a8:	00000032 	andeq	r0, r0, r2, lsr r0
200073ac:	53202020 			; <UNDEFINED> instruction: 0x53202020
200073b0:	54524154 	ldrbpl	r4, [r2], #-340	; 0xfffffeac
200073b4:	20474e49 	subcs	r4, r7, r9, asr #28
200073b8:	2e2e4e49 	cdpcs	14, 2, cr4, cr14, cr9, {2}
200073bc:	0000002e 	andeq	r0, r0, lr, lsr #32
200073c0:	20202020 	eorcs	r2, r0, r0, lsr #32
200073c4:	20202020 	eorcs	r2, r0, r0, lsr #32
200073c8:	00332020 	eorseq	r2, r3, r0, lsr #32
200073cc:	20202020 	eorcs	r2, r0, r0, lsr #32
200073d0:	20202020 	eorcs	r2, r0, r0, lsr #32
200073d4:	00322020 	eorseq	r2, r2, r0, lsr #32
200073d8:	20202020 	eorcs	r2, r0, r0, lsr #32
200073dc:	20202020 	eorcs	r2, r0, r0, lsr #32
200073e0:	00312020 	eorseq	r2, r1, r0, lsr #32
200073e4:	20202020 	eorcs	r2, r0, r0, lsr #32
200073e8:	20202020 	eorcs	r2, r0, r0, lsr #32
200073ec:	004f4720 	subeq	r4, pc, r0, lsr #14
200073f0:	20003898 	mulcs	r0, r8, r8
200073f4:	2000387a 	andcs	r3, r0, sl, ror r8
200073f8:	20003834 	andcs	r3, r0, r4, lsr r8
200073fc:	20003752 	andcs	r3, r0, r2, asr r7
20007400:	20003834 	andcs	r3, r0, r4, lsr r8
20007404:	2000386c 	andcs	r3, r0, ip, ror #16
20007408:	20003834 	andcs	r3, r0, r4, lsr r8
2000740c:	20003752 	andcs	r3, r0, r2, asr r7
20007410:	2000387a 	andcs	r3, r0, sl, ror r8
20007414:	2000387a 	andcs	r3, r0, sl, ror r8
20007418:	2000386c 	andcs	r3, r0, ip, ror #16
2000741c:	20003752 	andcs	r3, r0, r2, asr r7
20007420:	2000374a 	andcs	r3, r0, sl, asr #14
20007424:	2000374a 	andcs	r3, r0, sl, asr #14
20007428:	2000374a 	andcs	r3, r0, sl, asr #14
2000742c:	20003ab0 			; <UNDEFINED> instruction: 0x20003ab0
20007430:	200040f8 	strdcs	r4, [r0], -r8
20007434:	20003fb8 			; <UNDEFINED> instruction: 0x20003fb8
20007438:	20003fb8 			; <UNDEFINED> instruction: 0x20003fb8
2000743c:	20003fb4 			; <UNDEFINED> instruction: 0x20003fb4
20007440:	200040d0 	ldrdcs	r4, [r0], -r0
20007444:	200040d0 	ldrdcs	r4, [r0], -r0
20007448:	200040c2 	andcs	r4, r0, r2, asr #1
2000744c:	20003fb4 			; <UNDEFINED> instruction: 0x20003fb4
20007450:	200040d0 	ldrdcs	r4, [r0], -r0
20007454:	200040c2 	andcs	r4, r0, r2, asr #1
20007458:	200040d0 	ldrdcs	r4, [r0], -r0
2000745c:	20003fb4 			; <UNDEFINED> instruction: 0x20003fb4
20007460:	200040d8 	ldrdcs	r4, [r0], -r8
20007464:	200040d8 	ldrdcs	r4, [r0], -r8
20007468:	200040d8 	ldrdcs	r4, [r0], -r8
2000746c:	200042dc 	ldrdcs	r4, [r0], -ip
20007470:	00776f70 	rsbseq	r6, r7, r0, ror pc
20007474:	74727173 	ldrbtvc	r7, [r2], #-371	; 0xfffffe8d
	...

20007480 <TWO52>:
20007480:	00000000 	andeq	r0, r0, r0
20007484:	43300000 	teqmi	r0, #0
20007488:	00000000 	andeq	r0, r0, r0
2000748c:	c3300000 	teqgt	r0, #0

20007490 <_global_impure_ptr>:
20007490:	20006ed8 	ldrdcs	r6, [r0], -r8

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000db7 			; <UNDEFINED> instruction: 0x00000db7
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000121 	andeq	r0, r0, r1, lsr #2
      10:	0002ca0c 	andeq	ip, r2, ip, lsl #20
      14:	00034a00 	andeq	r4, r3, r0, lsl #20
      18:	00001000 	andeq	r1, r0, r0
      1c:	00077420 	andeq	r7, r7, r0, lsr #8
      20:	00000000 	andeq	r0, r0, r0
      24:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      28:	00746e69 	rsbseq	r6, r4, r9, ror #28
      2c:	73070403 	movwvc	r0, #29699	; 0x7403
      30:	03000000 	movweq	r0, #0
      34:	04870601 	streq	r0, [r7], #1537	; 0x601
      38:	01030000 	mrseq	r0, (UNDEF: 3)
      3c:	00048508 	andeq	r8, r4, r8, lsl #10
      40:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
      44:	000004a1 	andeq	r0, r0, r1, lsr #9
      48:	81070203 	tsthi	r7, r3, lsl #4
      4c:	03000003 	movweq	r0, #3
      50:	00d80504 	sbcseq	r0, r8, r4, lsl #10
      54:	04030000 	streq	r0, [r3], #-0
      58:	00006e07 	andeq	r6, r0, r7, lsl #28
      5c:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
      60:	000000d3 	ldrdeq	r0, [r0], -r3
      64:	69070803 	stmdbvs	r7, {r0, r1, fp}
      68:	04000000 	streq	r0, [r0], #-0
      6c:	000003c4 	andeq	r0, r0, r4, asr #7
      70:	00762202 	rsbseq	r2, r6, r2, lsl #4
      74:	04050000 	streq	r0, [r5], #-0
      78:	0000007c 	andeq	r0, r0, ip, ror r0
      7c:	00055a06 	andeq	r5, r5, r6, lsl #20
      80:	044f0400 	strbeq	r0, [pc], #-1024	; 88 <startup-0x1fffff78>
      84:	2c030000 	stccs	0, cr0, [r3], {-0}
      88:	0000004f 	andeq	r0, r0, pc, asr #32
      8c:	00057d04 	andeq	r7, r5, r4, lsl #26
      90:	4f720300 	svcmi	0x00720300
      94:	07000000 	streq	r0, [r0, -r0]
      98:	000003d3 	ldrdeq	r0, [r0], -r3
      9c:	2c016504 	cfstr32cs	mvfx6, [r1], {4}
      a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      a4:	c2a60304 	adcgt	r0, r6, #4, 6	; 0x10000000
      a8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      ac:	000003be 			; <UNDEFINED> instruction: 0x000003be
      b0:	0097a803 	addseq	sl, r7, r3, lsl #16
      b4:	3b090000 	blcc	2400bc <startup-0x1fdbff44>
      b8:	03000003 	movweq	r0, #3
      bc:	0000c2a9 	andeq	ip, r0, r9, lsr #5
      c0:	3a0a0000 	bcc	2800c8 <startup-0x1fd7ff38>
      c4:	d2000000 	andle	r0, r0, #0
      c8:	0b000000 	bleq	d0 <startup-0x1fffff30>
      cc:	000000d2 	ldrdeq	r0, [r0], -r2
      d0:	04030003 	streq	r0, [r3], #-3
      d4:	0003ec07 	andeq	lr, r3, r7, lsl #24
      d8:	03080c00 	movweq	r0, #35840	; 0x8c00
      dc:	0000faa3 	andeq	pc, r0, r3, lsr #21
      e0:	05520d00 	ldrbeq	r0, [r2, #-3328]	; 0xfffff300
      e4:	a5030000 	strge	r0, [r3, #-0]
      e8:	00000025 	andeq	r0, r0, r5, lsr #32
      ec:	05610d00 	strbeq	r0, [r1, #-3328]!	; 0xfffff300
      f0:	aa030000 	bge	c00f8 <startup-0x1ff3ff08>
      f4:	000000a3 	andeq	r0, r0, r3, lsr #1
      f8:	c9040004 	stmdbgt	r4, {r2}
      fc:	03000004 	movweq	r0, #4
     100:	0000d9ab 	andeq	sp, r0, fp, lsr #19
     104:	02e70400 	rsceq	r0, r7, #0, 8
     108:	af030000 	svcge	0x00030000
     10c:	0000006b 	andeq	r0, r0, fp, rrx
     110:	0405040e 	streq	r0, [r5], #-1038	; 0xfffffbf2
     114:	00000118 	andeq	r0, r0, r8, lsl r1
     118:	8e080103 	adfhie	f0, f0, f3
     11c:	0f000004 	svceq	0x00000004
     120:	00000118 	andeq	r0, r0, r8, lsl r1
     124:	0005d404 	andeq	sp, r5, r4, lsl #8
     128:	56160500 	ldrpl	r0, [r6], -r0, lsl #10
     12c:	10000000 	andne	r0, r0, r0
     130:	000002f8 	strdeq	r0, [r0], -r8
     134:	822f0518 	eorhi	r0, pc, #24, 10	; 0x6000000
     138:	0d000001 	stceq	0, cr0, [r0, #-4]
     13c:	000004f5 	strdeq	r0, [r0], -r5
     140:	01823105 	orreq	r3, r2, r5, lsl #2
     144:	11000000 	mrsne	r0, (UNDEF: 0)
     148:	05006b5f 	streq	r6, [r0, #-2911]	; 0xfffff4a1
     14c:	00002532 	andeq	r2, r0, r2, lsr r5
     150:	3d0d0400 	cfstrscc	mvf0, [sp, #-0]
     154:	05000005 	streq	r0, [r0, #-5]
     158:	00002532 	andeq	r2, r0, r2, lsr r5
     15c:	c40d0800 	strgt	r0, [sp], #-2048	; 0xfffff800
     160:	05000002 	streq	r0, [r0, #-2]
     164:	00002532 	andeq	r2, r0, r2, lsr r5
     168:	0e0d0c00 	cdpeq	12, 0, cr0, cr13, cr0, {0}
     16c:	05000006 	streq	r0, [r0, #-6]
     170:	00002532 	andeq	r2, r0, r2, lsr r5
     174:	5f111000 	svcpl	0x00111000
     178:	33050078 	movwcc	r0, #20600	; 0x5078
     17c:	00000188 	andeq	r0, r0, r8, lsl #3
     180:	04050014 	streq	r0, [r5], #-20	; 0xffffffec
     184:	0000012f 	andeq	r0, r0, pc, lsr #2
     188:	0001240a 	andeq	r2, r1, sl, lsl #8
     18c:	00019800 	andeq	r9, r1, r0, lsl #16
     190:	00d20b00 	sbcseq	r0, r2, r0, lsl #22
     194:	00000000 	andeq	r0, r0, r0
     198:	00033610 	andeq	r3, r3, r0, lsl r6
     19c:	37052400 	strcc	r2, [r5, -r0, lsl #8]
     1a0:	00000211 	andeq	r0, r0, r1, lsl r2
     1a4:	0000ca0d 	andeq	ip, r0, sp, lsl #20
     1a8:	25390500 	ldrcs	r0, [r9, #-1280]!	; 0xfffffb00
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	0005850d 	andeq	r8, r5, sp, lsl #10
     1b4:	253a0500 	ldrcs	r0, [sl, #-1280]!	; 0xfffffb00
     1b8:	04000000 	streq	r0, [r0], #-0
     1bc:	0001b90d 	andeq	fp, r1, sp, lsl #18
     1c0:	253b0500 	ldrcs	r0, [fp, #-1280]!	; 0xfffffb00
     1c4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     1c8:	0006a30d 	andeq	sl, r6, sp, lsl #6
     1cc:	253c0500 	ldrcs	r0, [ip, #-1280]!	; 0xfffffb00
     1d0:	0c000000 	stceq	0, cr0, [r0], {-0}
     1d4:	0004290d 	andeq	r2, r4, sp, lsl #18
     1d8:	253d0500 	ldrcs	r0, [sp, #-1280]!	; 0xfffffb00
     1dc:	10000000 	andne	r0, r0, r0
     1e0:	0003e20d 	andeq	lr, r3, sp, lsl #4
     1e4:	253e0500 	ldrcs	r0, [lr, #-1280]!	; 0xfffffb00
     1e8:	14000000 	strne	r0, [r0], #-0
     1ec:	0006130d 	andeq	r1, r6, sp, lsl #6
     1f0:	253f0500 	ldrcs	r0, [pc, #-1280]!	; fffffcf8 <_global_impure_ptr+0xdfff8868>
     1f4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     1f8:	0004ab0d 	andeq	sl, r4, sp, lsl #22
     1fc:	25400500 	strbcs	r0, [r0, #-1280]	; 0xfffffb00
     200:	1c000000 	stcne	0, cr0, [r0], {-0}
     204:	00065e0d 	andeq	r5, r6, sp, lsl #28
     208:	25410500 	strbcs	r0, [r1, #-1280]	; 0xfffffb00
     20c:	20000000 	andcs	r0, r0, r0
     210:	01c81200 	biceq	r1, r8, r0, lsl #4
     214:	01080000 	mrseq	r0, (UNDEF: 8)
     218:	02514a05 	subseq	r4, r1, #20480	; 0x5000
     21c:	8c0d0000 	stchi	0, cr0, [sp], {-0}
     220:	05000002 	streq	r0, [r0, #-2]
     224:	0002514b 	andeq	r5, r2, fp, asr #2
     228:	000d0000 	andeq	r0, sp, r0
     22c:	05000000 	streq	r0, [r0, #-0]
     230:	0002514c 	andeq	r5, r2, ip, asr #2
     234:	b6138000 	ldrlt	r8, [r3], -r0
     238:	05000005 	streq	r0, [r0, #-5]
     23c:	0001244e 	andeq	r2, r1, lr, asr #8
     240:	13010000 	movwne	r0, #4096	; 0x1000
     244:	0000020f 	andeq	r0, r0, pc, lsl #4
     248:	01245105 			; <UNDEFINED> instruction: 0x01245105
     24c:	01040000 	mrseq	r0, (UNDEF: 4)
     250:	01100a00 	tsteq	r0, r0, lsl #20
     254:	02610000 	rsbeq	r0, r1, #0
     258:	d20b0000 	andle	r0, fp, #0
     25c:	1f000000 	svcne	0x00000000
     260:	04321200 	ldrteq	r1, [r2], #-512	; 0xfffffe00
     264:	01900000 	orrseq	r0, r0, r0
     268:	029f5d05 	addseq	r5, pc, #320	; 0x140
     26c:	f50d0000 			; <UNDEFINED> instruction: 0xf50d0000
     270:	05000004 	streq	r0, [r0, #-4]
     274:	00029f5e 	andeq	r9, r2, lr, asr pc
     278:	0d0d0000 	stceq	0, cr0, [sp, #-0]
     27c:	05000005 	streq	r0, [r0, #-5]
     280:	0000255f 	andeq	r2, r0, pc, asr r5
     284:	ac0d0400 	cfstrsge	mvf0, [sp], {-0}
     288:	05000002 	streq	r0, [r0, #-2]
     28c:	0002a561 	andeq	sl, r2, r1, ror #10
     290:	c80d0800 	stmdagt	sp, {fp}
     294:	05000001 	streq	r0, [r0, #-1]
     298:	00021162 	andeq	r1, r2, r2, ror #2
     29c:	05008800 	streq	r8, [r0, #-2048]	; 0xfffff800
     2a0:	00026104 	andeq	r6, r2, r4, lsl #2
     2a4:	02b50a00 	adcseq	r0, r5, #0, 20
     2a8:	02b50000 	adcseq	r0, r5, #0
     2ac:	d20b0000 	andle	r0, fp, #0
     2b0:	1f000000 	svcne	0x00000000
     2b4:	bb040500 	bllt	1016bc <startup-0x1fefe944>
     2b8:	14000002 	strne	r0, [r0], #-2
     2bc:	0004b510 	andeq	fp, r4, r0, lsl r5
     2c0:	75050800 	strvc	r0, [r5, #-2048]	; 0xfffff800
     2c4:	000002e1 	andeq	r0, r0, r1, ror #5
     2c8:	00011b0d 	andeq	r1, r1, sp, lsl #22
     2cc:	e1760500 	cmn	r6, r0, lsl #10
     2d0:	00000002 	andeq	r0, r0, r2
     2d4:	0000120d 	andeq	r1, r0, sp, lsl #4
     2d8:	25770500 	ldrbcs	r0, [r7, #-1280]!	; 0xfffffb00
     2dc:	04000000 	streq	r0, [r0], #-0
     2e0:	3a040500 	bcc	1016e8 <startup-0x1fefe918>
     2e4:	10000000 	andne	r0, r0, r0
     2e8:	000004d4 	ldrdeq	r0, [r0], -r4
     2ec:	11b50568 			; <UNDEFINED> instruction: 0x11b50568
     2f0:	11000004 	tstne	r0, r4
     2f4:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
     2f8:	0002e1b6 			; <UNDEFINED> instruction: 0x0002e1b6
     2fc:	5f110000 	svcpl	0x00110000
     300:	b7050072 	smlsdxlt	r5, r2, r0, r0
     304:	00000025 	andeq	r0, r0, r5, lsr #32
     308:	775f1104 	ldrbvc	r1, [pc, -r4, lsl #2]
     30c:	25b80500 	ldrcs	r0, [r8, #1280]!	; 0x500
     310:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     314:	0002080d 	andeq	r0, r2, sp, lsl #16
     318:	41b90500 			; <UNDEFINED> instruction: 0x41b90500
     31c:	0c000000 	stceq	0, cr0, [r0], {-0}
     320:	0003620d 	andeq	r6, r3, sp, lsl #4
     324:	41ba0500 			; <UNDEFINED> instruction: 0x41ba0500
     328:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     32c:	66625f11 	uqadd16vs	r5, r2, r1
     330:	bcbb0500 	cfldr32lt	mvfx0, [fp]
     334:	10000002 	andne	r0, r0, r2
     338:	00008a0d 	andeq	r8, r0, sp, lsl #20
     33c:	25bc0500 	ldrcs	r0, [ip, #1280]!	; 0x500
     340:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     344:	0001d60d 	andeq	sp, r1, sp, lsl #12
     348:	10c30500 	sbcne	r0, r3, r0, lsl #10
     34c:	1c000001 	stcne	0, cr0, [r0], {1}
     350:	0009e60d 	andeq	lr, r9, sp, lsl #12
     354:	6cc50500 	cfstr64vs	mvdx0, [r5], {0}
     358:	20000005 	andcs	r0, r0, r5
     35c:	0008e70d 	andeq	lr, r8, sp, lsl #14
     360:	96c70500 	strbls	r0, [r7], r0, lsl #10
     364:	24000005 	strcs	r0, [r0], #-5
     368:	0005690d 	andeq	r6, r5, sp, lsl #18
     36c:	baca0500 	blt	ff281774 <_global_impure_ptr+0xdf27a2e4>
     370:	28000005 	stmdacs	r0, {r0, r2}
     374:	0006780d 	andeq	r7, r6, sp, lsl #16
     378:	d4cb0500 	strble	r0, [fp], #1280	; 0x500
     37c:	2c000005 	stccs	0, cr0, [r0], {5}
     380:	62755f11 	rsbsvs	r5, r5, #17, 30	; 0x44
     384:	bcce0500 	cfstr64lt	mvdx0, [lr], {0}
     388:	30000002 	andcc	r0, r0, r2
     38c:	70755f11 	rsbsvc	r5, r5, r1, lsl pc
     390:	e1cf0500 	bic	r0, pc, r0, lsl #10
     394:	38000002 	stmdacc	r0, {r1}
     398:	72755f11 	rsbsvc	r5, r5, #17, 30	; 0x44
     39c:	25d00500 	ldrbcs	r0, [r0, #1280]	; 0x500
     3a0:	3c000000 	stccc	0, cr0, [r0], {-0}
     3a4:	00010f0d 	andeq	r0, r1, sp, lsl #30
     3a8:	dad30500 	ble	ff4c17b0 <_global_impure_ptr+0xdf4ba320>
     3ac:	40000005 	andmi	r0, r0, r5
     3b0:	00064b0d 	andeq	r4, r6, sp, lsl #22
     3b4:	ead40500 	b	ff5017bc <_global_impure_ptr+0xdf4fa32c>
     3b8:	43000005 	movwmi	r0, #5
     3bc:	626c5f11 	rsbvs	r5, ip, #17, 30	; 0x44
     3c0:	bcd70500 	cfldr64lt	mvdx0, [r7], {0}
     3c4:	44000002 	strmi	r0, [r0], #-2
     3c8:	00021e0d 	andeq	r1, r2, sp, lsl #28
     3cc:	25da0500 	ldrbcs	r0, [sl, #1280]	; 0x500
     3d0:	4c000000 	stcmi	0, cr0, [r0], {-0}
     3d4:	00024d0d 	andeq	r4, r2, sp, lsl #26
     3d8:	81db0500 	bicshi	r0, fp, r0, lsl #10
     3dc:	50000000 	andpl	r0, r0, r0
     3e0:	0008ce0d 	andeq	ip, r8, sp, lsl #28
     3e4:	2fde0500 	svccs	0x00de0500
     3e8:	54000004 	strpl	r0, [r0], #-4
     3ec:	00055b0d 	andeq	r5, r5, sp, lsl #22
     3f0:	05e20500 	strbeq	r0, [r2, #1280]!	; 0x500
     3f4:	58000001 	stmdapl	r0, {r0}
     3f8:	0004e70d 	andeq	lr, r4, sp, lsl #14
     3fc:	fae40500 	blx	ff901804 <_global_impure_ptr+0xdf8fa374>
     400:	5c000000 	stcpl	0, cr0, [r0], {-0}
     404:	0003da0d 	andeq	sp, r3, sp, lsl #20
     408:	25e50500 	strbcs	r0, [r5, #1280]!	; 0x500
     40c:	64000000 	strvs	r0, [r0], #-0
     410:	00251500 	eoreq	r1, r5, r0, lsl #10
     414:	042f0000 	strteq	r0, [pc], #-0	; 41c <startup-0x1ffffbe4>
     418:	2f160000 	svccs	0x00160000
     41c:	16000004 	strne	r0, [r0], -r4
     420:	00000110 	andeq	r0, r0, r0, lsl r1
     424:	00011216 	andeq	r1, r1, r6, lsl r2
     428:	00251600 	eoreq	r1, r5, r0, lsl #12
     42c:	05000000 	streq	r0, [r0, #-0]
     430:	00043a04 	andeq	r3, r4, r4, lsl #20
     434:	042f0f00 	strteq	r0, [pc], #-3840	; 43c <startup-0x1ffffbc4>
     438:	45170000 	ldrmi	r0, [r7, #-0]
     43c:	28000005 	stmdacs	r0, {r0, r2}
     440:	02390504 	eorseq	r0, r9, #4, 10	; 0x1000000
     444:	0000056c 	andeq	r0, r0, ip, ror #10
     448:	00049a18 	andeq	r9, r4, r8, lsl sl
     44c:	023b0500 	eorseq	r0, fp, #0, 10
     450:	00000025 	andeq	r0, r0, r5, lsr #32
     454:	02171800 	andseq	r1, r7, #0, 16
     458:	40050000 	andmi	r0, r5, r0
     45c:	00064102 	andeq	r4, r6, r2, lsl #2
     460:	42180400 	andsmi	r0, r8, #0, 8
     464:	05000003 	streq	r0, [r0, #-3]
     468:	06410240 	strbeq	r0, [r1], -r0, asr #4
     46c:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
     470:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     474:	41024005 	tstmi	r2, r5
     478:	0c000006 	stceq	0, cr0, [r0], {6}
     47c:	00050818 	andeq	r0, r5, r8, lsl r8
     480:	02420500 	subeq	r0, r2, #0, 10
     484:	00000025 	andeq	r0, r0, r5, lsr #32
     488:	00261810 	eoreq	r1, r6, r0, lsl r8
     48c:	43050000 	movwmi	r0, #20480	; 0x5000
     490:	00082302 	andeq	r2, r8, r2, lsl #6
     494:	24181400 	ldrcs	r1, [r8], #-1024	; 0xfffffc00
     498:	05000005 	streq	r0, [r0, #-5]
     49c:	00250246 	eoreq	r0, r5, r6, asr #4
     4a0:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
     4a4:	00000512 	andeq	r0, r0, r2, lsl r5
     4a8:	38024705 	stmdacc	r2, {r0, r2, r8, r9, sl, lr}
     4ac:	34000008 	strcc	r0, [r0], #-8
     4b0:	00044418 	andeq	r4, r4, r8, lsl r4
     4b4:	02490500 	subeq	r0, r9, #0, 10
     4b8:	00000025 	andeq	r0, r0, r5, lsr #32
     4bc:	051a1838 	ldreq	r1, [sl, #-2104]	; 0xfffff7c8
     4c0:	4b050000 	blmi	1404c8 <startup-0x1febfb38>
     4c4:	00084902 	andeq	r4, r8, r2, lsl #18
     4c8:	b6183c00 	ldrlt	r3, [r8], -r0, lsl #24
     4cc:	05000003 	streq	r0, [r0, #-3]
     4d0:	0182024e 	orreq	r0, r2, lr, asr #4
     4d4:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
     4d8:	0000030f 	andeq	r0, r0, pc, lsl #6
     4dc:	25024f05 	strcs	r4, [r2, #-3845]	; 0xfffff0fb
     4e0:	44000000 	strmi	r0, [r0], #-0
     4e4:	00069e18 	andeq	r9, r6, r8, lsl lr
     4e8:	02500500 	subseq	r0, r0, #0, 10
     4ec:	00000182 	andeq	r0, r0, r2, lsl #3
     4f0:	045c1848 	ldrbeq	r1, [ip], #-2120	; 0xfffff7b8
     4f4:	51050000 	mrspl	r0, (UNDEF: 5)
     4f8:	00084f02 	andeq	r4, r8, r2, lsl #30
     4fc:	31184c00 	tstcc	r8, r0, lsl #24
     500:	05000000 	streq	r0, [r0, #-0]
     504:	00250254 	eoreq	r0, r5, r4, asr r2
     508:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
     50c:	00000245 	andeq	r0, r0, r5, asr #4
     510:	12025505 	andne	r5, r2, #20971520	; 0x1400000
     514:	54000001 	strpl	r0, [r0], #-1
     518:	00049318 	andeq	r9, r4, r8, lsl r3
     51c:	02780500 	rsbseq	r0, r8, #0, 10
     520:	00000801 	andeq	r0, r0, r1, lsl #16
     524:	04321958 	ldrteq	r1, [r2], #-2392	; 0xfffff6a8
     528:	7c050000 	stcvc	0, cr0, [r5], {-0}
     52c:	00029f02 	andeq	r9, r2, r2, lsl #30
     530:	19014800 	stmdbne	r1, {fp, lr}
     534:	00000394 	muleq	r0, r4, r3
     538:	61027d05 	tstvs	r2, r5, lsl #26
     53c:	4c000002 	stcmi	0, cr0, [r0], {2}
     540:	063c1901 	ldrteq	r1, [ip], -r1, lsl #18
     544:	81050000 	mrshi	r0, (UNDEF: 5)
     548:	00086002 	andeq	r6, r8, r2
     54c:	1902dc00 	stmdbne	r2, {sl, fp, ip, lr, pc}
     550:	000001de 	ldrdeq	r0, [r0], -lr
     554:	06028605 	streq	r8, [r2], -r5, lsl #12
     558:	e0000006 	and	r0, r0, r6
     55c:	01c31902 	biceq	r1, r3, r2, lsl #18
     560:	87050000 	strhi	r0, [r5, -r0]
     564:	00086c02 	andeq	r6, r8, r2, lsl #24
     568:	0002ec00 	andeq	lr, r2, r0, lsl #24
     56c:	04110405 	ldreq	r0, [r1], #-1029	; 0xfffffbfb
     570:	25150000 	ldrcs	r0, [r5, #-0]
     574:	90000000 	andls	r0, r0, r0
     578:	16000005 	strne	r0, [r0], -r5
     57c:	0000042f 	andeq	r0, r0, pc, lsr #8
     580:	00011016 	andeq	r1, r1, r6, lsl r0
     584:	05901600 	ldreq	r1, [r0, #1536]	; 0x600
     588:	25160000 	ldrcs	r0, [r6, #-0]
     58c:	00000000 	andeq	r0, r0, r0
     590:	011f0405 	tsteq	pc, r5, lsl #8
     594:	04050000 	streq	r0, [r5], #-0
     598:	00000572 	andeq	r0, r0, r2, ror r5
     59c:	00008c15 	andeq	r8, r0, r5, lsl ip
     5a0:	0005ba00 	andeq	fp, r5, r0, lsl #20
     5a4:	042f1600 	strteq	r1, [pc], #-1536	; 5ac <startup-0x1ffffa54>
     5a8:	10160000 	andsne	r0, r6, r0
     5ac:	16000001 	strne	r0, [r0], -r1
     5b0:	0000008c 	andeq	r0, r0, ip, lsl #1
     5b4:	00002516 	andeq	r2, r0, r6, lsl r5
     5b8:	04050000 	streq	r0, [r5], #-0
     5bc:	0000059c 	muleq	r0, ip, r5
     5c0:	00002515 	andeq	r2, r0, r5, lsl r5
     5c4:	0005d400 	andeq	sp, r5, r0, lsl #8
     5c8:	042f1600 	strteq	r1, [pc], #-1536	; 5d0 <startup-0x1ffffa30>
     5cc:	10160000 	andsne	r0, r6, r0
     5d0:	00000001 	andeq	r0, r0, r1
     5d4:	05c00405 	strbeq	r0, [r0, #1029]	; 0x405
     5d8:	3a0a0000 	bcc	2805e0 <startup-0x1fd7fa20>
     5dc:	ea000000 	b	5e4 <startup-0x1ffffa1c>
     5e0:	0b000005 	bleq	5fc <startup-0x1ffffa04>
     5e4:	000000d2 	ldrdeq	r0, [r0], -r2
     5e8:	3a0a0002 	bcc	2805f8 <startup-0x1fd7fa08>
     5ec:	fa000000 	blx	5f4 <startup-0x1ffffa0c>
     5f0:	0b000005 	bleq	60c <startup-0x1ffff9f4>
     5f4:	000000d2 	ldrdeq	r0, [r0], -r2
     5f8:	c2070000 	andgt	r0, r7, #0
     5fc:	05000004 	streq	r0, [r0, #-4]
     600:	02e7011f 	rsceq	r0, r7, #-1073741817	; 0xc0000007
     604:	1d1a0000 	ldcne	0, cr0, [sl, #-0]
     608:	0c000006 	stceq	0, cr0, [r0], {6}
     60c:	3b012305 	blcc	49228 <startup-0x1ffb6dd8>
     610:	18000006 	stmdane	r0, {r1, r2}
     614:	000004f5 	strdeq	r0, [r0], -r5
     618:	3b012505 	blcc	49a34 <startup-0x1ffb65cc>
     61c:	00000006 	andeq	r0, r0, r6
     620:	00037a18 	andeq	r7, r3, r8, lsl sl
     624:	01260500 			; <UNDEFINED> instruction: 0x01260500
     628:	00000025 	andeq	r0, r0, r5, lsr #32
     62c:	04bc1804 	ldrteq	r1, [ip], #2052	; 0x804
     630:	27050000 	strcs	r0, [r5, -r0]
     634:	00064101 	andeq	r4, r6, r1, lsl #2
     638:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
     63c:	00060604 	andeq	r0, r6, r4, lsl #12
     640:	fa040500 	blx	101a48 <startup-0x1fefe5b8>
     644:	1a000005 	bne	660 <startup-0x1ffff9a0>
     648:	0000001e 	andeq	r0, r0, lr, lsl r0
     64c:	013f050e 	teqeq	pc, lr, lsl #10
     650:	0000067c 	andeq	r0, r0, ip, ror r6
     654:	00054c18 	andeq	r4, r5, r8, lsl ip
     658:	01400500 	cmpeq	r0, r0, lsl #10
     65c:	0000067c 	andeq	r0, r0, ip, ror r6
     660:	058e1800 	streq	r1, [lr, #2048]	; 0x800
     664:	41050000 	mrsmi	r0, (UNDEF: 5)
     668:	00067c01 	andeq	r7, r6, r1, lsl #24
     66c:	c4180600 	ldrgt	r0, [r8], #-1536	; 0xfffffa00
     670:	05000005 	streq	r0, [r0, #-5]
     674:	00480142 	subeq	r0, r8, r2, asr #2
     678:	000c0000 	andeq	r0, ip, r0
     67c:	0000480a 	andeq	r4, r0, sl, lsl #16
     680:	00068c00 	andeq	r8, r6, r0, lsl #24
     684:	00d20b00 	sbcseq	r0, r2, r0, lsl #22
     688:	00020000 	andeq	r0, r2, r0
     68c:	5905d01b 	stmdbpl	r5, {r0, r1, r3, r4, ip, lr, pc}
     690:	00078d02 	andeq	r8, r7, r2, lsl #26
     694:	06011800 	streq	r1, [r1], -r0, lsl #16
     698:	5b050000 	blpl	1406a0 <startup-0x1febf960>
     69c:	00002c02 	andeq	r2, r0, r2, lsl #24
     6a0:	94180000 	ldrls	r0, [r8], #-0
     6a4:	05000005 	streq	r0, [r0, #-5]
     6a8:	0112025c 	tsteq	r2, ip, asr r2
     6ac:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     6b0:	000003a9 	andeq	r0, r0, r9, lsr #7
     6b4:	8d025d05 	stchi	13, cr5, [r2, #-20]	; 0xffffffec
     6b8:	08000007 	stmdaeq	r0, {r0, r1, r2}
     6bc:	00066918 	andeq	r6, r6, r8, lsl r9
     6c0:	025e0500 	subseq	r0, lr, #0, 10
     6c4:	00000198 	muleq	r0, r8, r1
     6c8:	03001824 	movweq	r1, #2084	; 0x824
     6cc:	5f050000 	svcpl	0x00050000
     6d0:	00002502 	andeq	r2, r0, r2, lsl #10
     6d4:	f0184800 			; <UNDEFINED> instruction: 0xf0184800
     6d8:	05000004 	streq	r0, [r0, #-4]
     6dc:	00640260 	rsbeq	r0, r4, r0, ror #4
     6e0:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
     6e4:	00000685 	andeq	r0, r0, r5, lsl #13
     6e8:	47026105 	strmi	r6, [r2, -r5, lsl #2]
     6ec:	58000006 	stmdapl	r0, {r1, r2}
     6f0:	0004fb18 	andeq	pc, r4, r8, lsl fp	; <UNPREDICTABLE>
     6f4:	02620500 	rsbeq	r0, r2, #0, 10
     6f8:	000000fa 	strdeq	r0, [r0], -sl
     6fc:	068a1868 	streq	r1, [sl], r8, ror #16
     700:	63050000 	movwvs	r0, #20480	; 0x5000
     704:	0000fa02 	andeq	pc, r0, r2, lsl #20
     708:	6e187000 	cdpvs	0, 1, cr7, cr8, cr0, {0}
     70c:	05000004 	streq	r0, [r0, #-4]
     710:	00fa0264 	rscseq	r0, sl, r4, ror #4
     714:	18780000 	ldmdane	r8!, {}^	; <UNPREDICTABLE>
     718:	00000632 	andeq	r0, r0, r2, lsr r6
     71c:	9d026505 	cfstr32ls	mvfx6, [r2, #-20]	; 0xffffffec
     720:	80000007 	andhi	r0, r0, r7
     724:	00039d18 	andeq	r9, r3, r8, lsl sp
     728:	02660500 	rsbeq	r0, r6, #0, 10
     72c:	000007ad 	andeq	r0, r0, sp, lsr #15
     730:	05dc1888 	ldrbeq	r1, [ip, #2184]	; 0x888
     734:	67050000 	strvs	r0, [r5, -r0]
     738:	00002502 	andeq	r2, r0, r2, lsl #10
     73c:	6c18a000 	ldcvs	0, cr10, [r8], {-0}
     740:	05000002 	streq	r0, [r0, #-2]
     744:	00fa0268 	rscseq	r0, sl, r8, ror #4
     748:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
     74c:	000000aa 	andeq	r0, r0, sl, lsr #1
     750:	fa026905 	blx	9ab6c <startup-0x1ff65494>
     754:	ac000000 	stcge	0, cr0, [r0], {-0}
     758:	00025518 	andeq	r5, r2, r8, lsl r5
     75c:	026a0500 	rsbeq	r0, sl, #0, 10
     760:	000000fa 	strdeq	r0, [r0], -sl
     764:	004918b4 	strheq	r1, [r9], #-132	; 0xffffff7c
     768:	6b050000 	blvs	140770 <startup-0x1febf890>
     76c:	0000fa02 	andeq	pc, r0, r2, lsl #20
     770:	5818bc00 	ldmdapl	r8, {sl, fp, ip, sp, pc}
     774:	05000000 	streq	r0, [r0, #-0]
     778:	00fa026c 	rscseq	r0, sl, ip, ror #4
     77c:	18c40000 	stmiane	r4, {}^	; <UNPREDICTABLE>
     780:	00000498 	muleq	r0, r8, r4
     784:	25026d05 	strcs	r6, [r2, #-3333]	; 0xfffff2fb
     788:	cc000000 	stcgt	0, cr0, [r0], {-0}
     78c:	01180a00 	tsteq	r8, r0, lsl #20
     790:	079d0000 	ldreq	r0, [sp, r0]
     794:	d20b0000 	andle	r0, fp, #0
     798:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     79c:	01180a00 	tsteq	r8, r0, lsl #20
     7a0:	07ad0000 	streq	r0, [sp, r0]!
     7a4:	d20b0000 	andle	r0, fp, #0
     7a8:	07000000 	streq	r0, [r0, -r0]
     7ac:	01180a00 	tsteq	r8, r0, lsl #20
     7b0:	07bd0000 	ldreq	r0, [sp, r0]!
     7b4:	d20b0000 	andle	r0, fp, #0
     7b8:	17000000 	strne	r0, [r0, -r0]
     7bc:	05f01b00 	ldrbeq	r1, [r0, #2816]!	; 0xb00
     7c0:	07e10272 			; <UNDEFINED> instruction: 0x07e10272
     7c4:	1b180000 	blne	6007cc <startup-0x1f9ff834>
     7c8:	05000004 	streq	r0, [r0, #-4]
     7cc:	07e10275 			; <UNDEFINED> instruction: 0x07e10275
     7d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     7d4:	00000629 	andeq	r0, r0, r9, lsr #12
     7d8:	f1027605 			; <UNDEFINED> instruction: 0xf1027605
     7dc:	78000007 	stmdavc	r0, {r0, r1, r2}
     7e0:	02e10a00 	rsceq	r0, r1, #0, 20
     7e4:	07f10000 	ldrbeq	r0, [r1, r0]!
     7e8:	d20b0000 	andle	r0, fp, #0
     7ec:	1d000000 	stcne	0, cr0, [r0, #-0]
     7f0:	002c0a00 	eoreq	r0, ip, r0, lsl #20
     7f4:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     7f8:	d20b0000 	andle	r0, fp, #0
     7fc:	1d000000 	stcne	0, cr0, [r0, #-0]
     800:	05f01c00 	ldrbeq	r1, [r0, #3072]!	; 0xc00
     804:	08230257 	stmdaeq	r3!, {r0, r1, r2, r4, r6, r9}
     808:	451d0000 	ldrmi	r0, [sp, #-0]
     80c:	05000005 	streq	r0, [r0, #-5]
     810:	068c026e 	streq	r0, [ip], lr, ror #4
     814:	511d0000 	tstpl	sp, r0
     818:	05000006 	streq	r0, [r0, #-6]
     81c:	07bd0277 			; <UNDEFINED> instruction: 0x07bd0277
     820:	0a000000 	beq	828 <startup-0x1ffff7d8>
     824:	00000118 	andeq	r0, r0, r8, lsl r1
     828:	00000833 	andeq	r0, r0, r3, lsr r8
     82c:	0000d20b 	andeq	sp, r0, fp, lsl #4
     830:	06001800 	streq	r1, [r0], -r0, lsl #16
     834:	00000099 	muleq	r0, r9, r0
     838:	08330405 	ldmdaeq	r3!, {r0, r2, sl}
     83c:	491e0000 	ldmdbmi	lr, {}	; <UNPREDICTABLE>
     840:	16000008 	strne	r0, [r0], -r8
     844:	0000042f 	andeq	r0, r0, pc, lsr #8
     848:	3e040500 	cfsh32cc	mvfx0, mvfx4, #0
     84c:	05000008 	streq	r0, [r0, #-8]
     850:	00018204 	andeq	r8, r1, r4, lsl #4
     854:	08601e00 	stmdaeq	r0!, {r9, sl, fp, ip}^
     858:	25160000 	ldrcs	r0, [r6, #-0]
     85c:	00000000 	andeq	r0, r0, r0
     860:	08660405 	stmdaeq	r6!, {r0, r2, sl}^
     864:	04050000 	streq	r0, [r5], #-0
     868:	00000855 	andeq	r0, r0, r5, asr r8
     86c:	0005fa0a 	andeq	pc, r5, sl, lsl #20
     870:	00087c00 	andeq	r7, r8, r0, lsl #24
     874:	00d20b00 	sbcseq	r0, r2, r0, lsl #22
     878:	00020000 	andeq	r0, r2, r0
     87c:	0005f51f 	andeq	pc, r5, pc, lsl r5	; <UNPREDICTABLE>
     880:	02fe0500 	rscseq	r0, lr, #0, 10
     884:	0000042f 	andeq	r0, r0, pc, lsr #8
     888:	0005ee1f 	andeq	lr, r5, pc, lsl lr
     88c:	02ff0500 	rscseq	r0, pc, #0, 10
     890:	00000435 	andeq	r0, r0, r5, lsr r4
     894:	fa040803 	blx	1028a8 <startup-0x1fefd758>
     898:	03000003 	movweq	r0, #3
     89c:	04560404 	ldrbeq	r0, [r6], #-1028	; 0xfffffbfc
     8a0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
     8a4:	0003f504 	andeq	pc, r3, r4, lsl #10
     8a8:	06020c00 	streq	r0, [r2], -r0, lsl #24
     8ac:	0008c60a 	andeq	ip, r8, sl, lsl #12
     8b0:	00781100 	rsbseq	r1, r8, r0, lsl #2
     8b4:	003a0b06 	eorseq	r0, sl, r6, lsl #22
     8b8:	11000000 	mrsne	r0, (UNDEF: 0)
     8bc:	0b060079 	bleq	180aa8 <startup-0x1fe7f558>
     8c0:	0000003a 	andeq	r0, r0, sl, lsr r0
     8c4:	66040001 	strvs	r0, [r4], -r1
     8c8:	06000002 	streq	r0, [r0], -r2
     8cc:	0008a90c 	andeq	sl, r8, ip, lsl #18
     8d0:	06400c00 	strbeq	r0, [r0], -r0, lsl #24
     8d4:	0009090e 	andeq	r0, r9, lr, lsl #18
     8d8:	01050d00 	tsteq	r5, r0, lsl #26
     8dc:	0f060000 	svceq	0x00060000
     8e0:	00000025 	andeq	r0, r0, r5, lsr #32
     8e4:	06230d00 	strteq	r0, [r3], -r0, lsl #26
     8e8:	10060000 	andne	r0, r6, r0
     8ec:	00000025 	andeq	r0, r0, r5, lsr #32
     8f0:	067f0d04 	ldrbteq	r0, [pc], -r4, lsl #26
     8f4:	11060000 	mrsne	r0, (UNDEF: 6)
     8f8:	00000025 	andeq	r0, r0, r5, lsr #32
     8fc:	78701108 	ldmdavc	r0!, {r3, r8, ip}^
     900:	09120600 	ldmdbeq	r2, {r9, sl}
     904:	0c000009 	stceq	0, cr0, [r0], {9}
     908:	08c60a00 	stmiaeq	r6, {r9, fp}^
     90c:	09190000 	ldmdbeq	r9, {}	; <UNPREDICTABLE>
     910:	d20b0000 	andle	r0, fp, #0
     914:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     918:	043a0400 	ldrteq	r0, [sl], #-1024	; 0xfffffc00
     91c:	13060000 	movwne	r0, #24576	; 0x6000
     920:	00000924 	andeq	r0, r0, r4, lsr #18
     924:	08d10405 	ldmeq	r1, {r0, r2, sl}^
     928:	bf100000 	svclt	0x00100000
     92c:	2c000005 	stccs	0, cr0, [r0], {5}
     930:	09bb1506 	ldmibeq	fp!, {r1, r2, r8, sl, ip}
     934:	67110000 	ldrvs	r0, [r1, -r0]
     938:	06006f65 	streq	r6, [r0], -r5, ror #30
     93c:	00091916 	andeq	r1, r9, r6, lsl r9
     940:	3f0d0000 	svccc	0x000d0000
     944:	06000000 	streq	r0, [r0], -r0
     948:	00002517 	andeq	r2, r0, r7, lsl r5
     94c:	440d0400 	strmi	r0, [sp], #-1024	; 0xfffffc00
     950:	06000000 	streq	r0, [r0], -r0
     954:	00002517 	andeq	r2, r0, r7, lsl r5
     958:	460d0800 	strmi	r0, [sp], -r0, lsl #16
     95c:	06000006 	streq	r0, [r0], -r6
     960:	00002518 	andeq	r2, r0, r8, lsl r5
     964:	590d0c00 	stmdbpl	sp, {sl, fp}
     968:	06000006 	streq	r0, [r0], -r6
     96c:	00002518 	andeq	r2, r0, r8, lsl r5
     970:	7c0d1000 	stcvc	0, cr1, [sp], {-0}
     974:	06000004 	streq	r0, [r0], -r4
     978:	00002519 	andeq	r2, r0, r9, lsl r5
     97c:	940d1400 	strls	r1, [sp], #-1024	; 0xfffffc00
     980:	06000002 	streq	r0, [r0], -r2
     984:	0000251a 	andeq	r2, r0, sl, lsl r5
     988:	e90d1800 	stmdb	sp, {fp, ip}
     98c:	06000005 	streq	r0, [r0], -r5
     990:	0009cc1b 	andeq	ip, r9, fp, lsl ip
     994:	fa0d1c00 	blx	34799c <startup-0x1fcb8664>
     998:	06000006 	streq	r0, [r0], -r6
     99c:	0009cc1c 	andeq	ip, r9, ip, lsl ip
     9a0:	c50d2000 	strgt	r2, [sp, #-0]
     9a4:	06000000 	streq	r0, [r0], -r0
     9a8:	0009cc1d 	andeq	ip, r9, sp, lsl ip
     9ac:	800d2400 	andhi	r2, sp, r0, lsl #8
     9b0:	06000000 	streq	r0, [r0], -r0
     9b4:	0009e71e 	andeq	lr, r9, lr, lsl r7
     9b8:	1e002800 	cdpne	8, 0, cr2, cr0, cr0, {0}
     9bc:	000009c6 	andeq	r0, r0, r6, asr #19
     9c0:	0009c616 	andeq	ip, r9, r6, lsl r6
     9c4:	04050000 	streq	r0, [r5], #-0
     9c8:	0000092a 	andeq	r0, r0, sl, lsr #18
     9cc:	09bb0405 	ldmibeq	fp!, {r0, r2, sl}
     9d0:	e71e0000 	ldr	r0, [lr, -r0]
     9d4:	16000009 	strne	r0, [r0], -r9
     9d8:	000009c6 	andeq	r0, r0, r6, asr #19
     9dc:	00002516 	andeq	r2, r0, r6, lsl r5
     9e0:	00251600 	eoreq	r1, r5, r0, lsl #12
     9e4:	05000000 	streq	r0, [r0, #-0]
     9e8:	0009d204 	andeq	sp, r9, r4, lsl #4
     9ec:	04020400 	streq	r0, [r2], #-1024	; 0xfffffc00
     9f0:	1f060000 	svcne	0x00060000
     9f4:	0000092a 	andeq	r0, r0, sl, lsr #18
     9f8:	00040104 	andeq	r0, r4, r4, lsl #2
     9fc:	c61f0600 	ldrgt	r0, [pc], -r0, lsl #12
     a00:	20000009 	andcs	r0, r0, r9
     a04:	0000022d 	andeq	r0, r0, sp, lsr #4
     a08:	09ed2106 	stmibeq	sp!, {r1, r2, r8, sp}^
     a0c:	6f200000 	svcvs	0x00200000
     a10:	06000005 	streq	r0, [r0], -r5
     a14:	0009ed22 	andeq	lr, r9, r2, lsr #26
     a18:	023b2000 	eorseq	r2, fp, #0
     a1c:	23060000 	movwcs	r0, #24576	; 0x6000
     a20:	000009ed 	andeq	r0, r0, sp, ror #19
     a24:	0001e621 	andeq	lr, r1, r1, lsr #12
     a28:	25090100 	strcs	r0, [r9, #-256]	; 0xffffff00
     a2c:	05000000 	streq	r0, [r0, #-0]
     a30:	005e3c03 	subseq	r3, lr, r3, lsl #24
     a34:	03192120 	tsteq	r9, #32, 2
     a38:	0a010000 	beq	40a40 <startup-0x1ffbf5c0>
     a3c:	00000025 	andeq	r0, r0, r5, lsr #32
     a40:	5e400305 	cdppl	3, 4, cr0, cr0, cr5, {0}
     a44:	66222000 	strtvs	r2, [r2], -r0
     a48:	01000004 	tsteq	r0, r4
     a4c:	00061487 	andeq	r1, r6, r7, lsl #9
     a50:	00017020 	andeq	r7, r1, r0, lsr #32
     a54:	df9c0100 	svcle	0x009c0100
     a58:	2300000a 	movwcs	r0, #10
     a5c:	8701006f 	strhi	r0, [r1, -pc, rrx]
     a60:	000009f8 	strdeq	r0, [r0], -r8
     a64:	24549102 	ldrbcs	r9, [r4], #-258	; 0xfffffefe
     a68:	01003170 	tsteq	r0, r0, ror r1
     a6c:	0009f888 	andeq	pc, r9, r8, lsl #17
     a70:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     a74:	00327024 	eorseq	r7, r2, r4, lsr #32
     a78:	09f88901 	ldmibeq	r8!, {r0, r8, fp, pc}^
     a7c:	91020000 	mrsls	r0, (UNDEF: 2)
     a80:	03cc2560 	biceq	r2, ip, #96, 10	; 0x18000000
     a84:	8a010000 	bhi	40a8c <startup-0x1ffbf574>
     a88:	00000025 	andeq	r0, r0, r5, lsr #32
     a8c:	265c9102 	ldrbcs	r9, [ip], -r2, lsl #2
     a90:	00736261 	rsbseq	r6, r3, r1, ror #4
     a94:	00250007 	eoreq	r0, r5, r7
     a98:	0aa00000 	beq	fe800aa0 <_global_impure_ptr+0xde7f9610>
     a9c:	00270000 	eoreq	r0, r7, r0
     aa0:	00042225 	andeq	r2, r4, r5, lsr #4
     aa4:	258b0100 	strcs	r0, [fp, #256]	; 0x100
     aa8:	02000000 	andeq	r0, r0, #0
     aac:	3c285891 	stccc	8, cr5, [r8], #-580	; 0xfffffdbc
     ab0:	98200006 	stmdals	r0!, {r1, r2}
     ab4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     ab8:	2400000a 	strcs	r0, [r0], #-10
     abc:	8c010069 	stchi	0, cr0, [r1], {105}	; 0x69
     ac0:	00000025 	andeq	r0, r0, r5, lsr #32
     ac4:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     ac8:	0006d429 	andeq	sp, r6, r9, lsr #8
     acc:	00009820 	andeq	r9, r0, r0, lsr #16
     ad0:	00692400 	rsbeq	r2, r9, r0, lsl #8
     ad4:	0025a101 	eoreq	sl, r5, r1, lsl #2
     ad8:	91020000 	mrsls	r0, (UNDEF: 2)
     adc:	2a000068 	bcs	c84 <startup-0x1ffff37c>
     ae0:	000001f3 	strdeq	r0, [r0], -r3
     ae4:	00257701 	eoreq	r7, r5, r1, lsl #14
     ae8:	05800000 	streq	r0, [r0]
     aec:	00942000 	addseq	r2, r4, r0
     af0:	9c010000 	stcls	0, cr0, [r1], {-0}
     af4:	00000b83 	andeq	r0, r0, r3, lsl #23
     af8:	01006f23 	tsteq	r0, r3, lsr #30
     afc:	0009f877 	andeq	pc, r9, r7, ror r8	; <UNPREDICTABLE>
     b00:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     b04:	000c9f2b 	andeq	r9, ip, fp, lsr #30
     b08:	f8770100 			; <UNDEFINED> instruction: 0xf8770100
     b0c:	02000009 	andeq	r0, r0, #9
     b10:	28255091 	stmdacs	r5!, {r0, r4, r7, ip, lr}
     b14:	01000002 	tsteq	r0, r2
     b18:	00002578 	andeq	r2, r0, r8, ror r5
     b1c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     b20:	00011625 	andeq	r1, r1, r5, lsr #12
     b24:	25790100 	ldrbcs	r0, [r9, #-256]!	; 0xffffff00
     b28:	02000000 	andeq	r0, r0, #0
     b2c:	99257091 	stmdbls	r5!, {r0, r4, r7, ip, sp, lr}
     b30:	01000006 	tsteq	r0, r6
     b34:	0000257a 	andeq	r2, r0, sl, ror r5
     b38:	6c910200 	lfmvs	f0, 4, [r1], {0}
     b3c:	00003a25 	andeq	r3, r0, r5, lsr #20
     b40:	257b0100 	ldrbcs	r0, [fp, #-256]!	; 0xffffff00
     b44:	02000000 	andeq	r0, r0, #0
     b48:	27256891 			; <UNDEFINED> instruction: 0x27256891
     b4c:	01000002 	tsteq	r0, r2
     b50:	0000257c 	andeq	r2, r0, ip, ror r5
     b54:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     b58:	00011525 	andeq	r1, r1, r5, lsr #10
     b5c:	257d0100 	ldrbcs	r0, [sp, #-256]!	; 0xffffff00
     b60:	02000000 	andeq	r0, r0, #0
     b64:	98256091 	stmdals	r5!, {r0, r4, r7, sp, lr}
     b68:	01000006 	tsteq	r0, r6
     b6c:	0000257e 	andeq	r2, r0, lr, ror r5
     b70:	5c910200 	lfmpl	f0, 4, [r1], {0}
     b74:	00003925 	andeq	r3, r0, r5, lsr #18
     b78:	257f0100 	ldrbcs	r0, [pc, #-256]!	; a80 <startup-0x1ffff580>
     b7c:	02000000 	andeq	r0, r0, #0
     b80:	2a005891 	bcs	16dcc <startup-0x1ffe9234>
     b84:	000005a1 	andeq	r0, r0, r1, lsr #11
     b88:	00256701 	eoreq	r6, r5, r1, lsl #14
     b8c:	04ec0000 	strbteq	r0, [ip], #0
     b90:	00942000 	addseq	r2, r4, r0
     b94:	9c010000 	stcls	0, cr0, [r1], {-0}
     b98:	00000c27 	andeq	r0, r0, r7, lsr #24
     b9c:	01006f23 	tsteq	r0, r3, lsr #30
     ba0:	0009f867 	andeq	pc, r9, r7, ror #16
     ba4:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     ba8:	000c9f2b 	andeq	r9, ip, fp, lsr #30
     bac:	f8670100 			; <UNDEFINED> instruction: 0xf8670100
     bb0:	02000009 	andeq	r0, r0, #9
     bb4:	28255091 	stmdacs	r5!, {r0, r4, r7, ip, lr}
     bb8:	01000002 	tsteq	r0, r2
     bbc:	00002568 	andeq	r2, r0, r8, ror #10
     bc0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     bc4:	00011625 	andeq	r1, r1, r5, lsr #12
     bc8:	25690100 	strbcs	r0, [r9, #-256]!	; 0xffffff00
     bcc:	02000000 	andeq	r0, r0, #0
     bd0:	99257091 	stmdbls	r5!, {r0, r4, r7, ip, sp, lr}
     bd4:	01000006 	tsteq	r0, r6
     bd8:	0000256a 	andeq	r2, r0, sl, ror #10
     bdc:	6c910200 	lfmvs	f0, 4, [r1], {0}
     be0:	00003a25 	andeq	r3, r0, r5, lsr #20
     be4:	256b0100 	strbcs	r0, [fp, #-256]!	; 0xffffff00
     be8:	02000000 	andeq	r0, r0, #0
     bec:	27256891 			; <UNDEFINED> instruction: 0x27256891
     bf0:	01000002 	tsteq	r0, r2
     bf4:	0000256c 	andeq	r2, r0, ip, ror #10
     bf8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     bfc:	00011525 	andeq	r1, r1, r5, lsr #10
     c00:	256d0100 	strbcs	r0, [sp, #-256]!	; 0xffffff00
     c04:	02000000 	andeq	r0, r0, #0
     c08:	98256091 	stmdals	r5!, {r0, r4, r7, sp, lr}
     c0c:	01000006 	tsteq	r0, r6
     c10:	0000256e 	andeq	r2, r0, lr, ror #10
     c14:	5c910200 	lfmpl	f0, 4, [r1], {0}
     c18:	00003925 	andeq	r3, r0, r5, lsr #18
     c1c:	256f0100 	strbcs	r0, [pc, #-256]!	; b24 <startup-0x1ffff4dc>
     c20:	02000000 	andeq	r0, r0, #0
     c24:	22005891 	andcs	r5, r0, #9502720	; 0x910000
     c28:	00000409 	andeq	r0, r0, r9, lsl #8
     c2c:	01082501 	tsteq	r8, r1, lsl #10
     c30:	03e42000 	mvneq	r2, #0
     c34:	9c010000 	stcls	0, cr0, [r1], {-0}
     c38:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
     c3c:	01006f23 	tsteq	r0, r3, lsr #30
     c40:	0009f825 	andeq	pc, r9, r5, lsr #16
     c44:	4c910200 	lfmmi	f0, 4, [r1], {0}
     c48:	00317023 	eorseq	r7, r1, r3, lsr #32
     c4c:	09f82501 	ldmibeq	r8!, {r0, r8, sl, sp}^
     c50:	91020000 	mrsls	r0, (UNDEF: 2)
     c54:	32702348 	rsbscc	r2, r0, #72, 6	; 0x20000001
     c58:	f8250100 			; <UNDEFINED> instruction: 0xf8250100
     c5c:	02000009 	andeq	r0, r0, #9
     c60:	b9254491 	stmdblt	r5!, {r0, r4, r7, sl, lr}
     c64:	01000000 	mrseq	r0, (UNDEF: 0)
     c68:	00002526 	andeq	r2, r0, r6, lsr #10
     c6c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     c70:	0000e125 	andeq	lr, r0, r5, lsr #2
     c74:	25270100 	strcs	r0, [r7, #-256]!	; 0xffffff00
     c78:	02000000 	andeq	r0, r0, #0
     c7c:	ed256091 	stc	0, cr6, [r5, #-580]!	; 0xfffffdbc
     c80:	01000000 	mrseq	r0, (UNDEF: 0)
     c84:	00002528 	andeq	r2, r0, r8, lsr #10
     c88:	5c910200 	lfmpl	f0, 4, [r1], {0}
     c8c:	0000f925 	andeq	pc, r0, r5, lsr #18
     c90:	25290100 	strcs	r0, [r9, #-256]!	; 0xffffff00
     c94:	02000000 	andeq	r0, r0, #0
     c98:	dc255891 	stcle	8, cr5, [r5], #-580	; 0xfffffdbc
     c9c:	01000004 	tsteq	r0, r4
     ca0:	0000252a 	andeq	r2, r0, sl, lsr #10
     ca4:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     ca8:	0005c925 	andeq	ip, r5, r5, lsr #18
     cac:	252b0100 	strcs	r0, [fp, #-256]!	; 0xffffff00
     cb0:	02000000 	andeq	r0, r0, #0
     cb4:	2c005091 	stccs	0, cr5, [r0], {145}	; 0x91
     cb8:	00000368 	andeq	r0, r0, r8, ror #6
     cbc:	00bc1e01 	adcseq	r1, ip, r1, lsl #28
     cc0:	004c2000 	subeq	r2, ip, r0
     cc4:	9c010000 	stcls	0, cr0, [r1], {-0}
     cc8:	00000d11 	andeq	r0, r0, r1, lsl sp
     ccc:	01006f23 	tsteq	r0, r3, lsr #30
     cd0:	0009f81e 	andeq	pc, r9, lr, lsl r8	; <UNPREDICTABLE>
     cd4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     cd8:	0000932b 	andeq	r9, r0, fp, lsr #6
     cdc:	201e0100 	andscs	r0, lr, r0, lsl #2
     ce0:	0200000d 	andeq	r0, r0, #13
     ce4:	0c2b7091 	stceq	0, cr7, [fp], #-580	; 0xfffffdbc
     ce8:	01000000 	mrseq	r0, (UNDEF: 0)
     cec:	000d201e 	andeq	r2, sp, lr, lsl r0
     cf0:	6c910200 	lfmvs	f0, 4, [r1], {0}
     cf4:	0000a42b 	andeq	sl, r0, fp, lsr #8
     cf8:	201e0100 	andscs	r0, lr, r0, lsl #2
     cfc:	0200000d 	andeq	r0, r0, #13
     d00:	182b6891 	stmdane	fp!, {r0, r4, r7, fp, sp, lr}
     d04:	01000000 	mrseq	r0, (UNDEF: 0)
     d08:	000d201e 	andeq	r2, sp, lr, lsl r0
     d0c:	00910200 	addseq	r0, r1, r0, lsl #4
     d10:	00251500 	eoreq	r1, r5, r0, lsl #10
     d14:	0d200000 	stceq	0, cr0, [r0, #-0]
     d18:	f8160000 			; <UNDEFINED> instruction: 0xf8160000
     d1c:	00000009 	andeq	r0, r0, r9
     d20:	0d110405 	cfldrseq	mvf0, [r1, #-20]	; 0xffffffec
     d24:	9a2d0000 	bls	b40d2c <startup-0x1f4bf2d4>
     d28:	01000002 	tsteq	r0, r2
     d2c:	00002518 	andeq	r2, r0, r8, lsl r5
     d30:	00009200 	andeq	r9, r0, r0, lsl #4
     d34:	00002a20 	andeq	r2, r0, r0, lsr #20
     d38:	4c9c0100 	ldfmis	f0, [ip], {0}
     d3c:	2300000d 	movwcs	r0, #13
     d40:	1801006f 	stmdane	r1, {r0, r1, r2, r3, r5, r6}
     d44:	000009f8 	strdeq	r0, [r0], -r8
     d48:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     d4c:	0003262d 	andeq	r2, r3, sp, lsr #12
     d50:	25140100 	ldrcs	r0, [r4, #-256]	; 0xffffff00
     d54:	66000000 	strvs	r0, [r0], -r0
     d58:	2c200000 	stccs	0, cr0, [r0], #-0
     d5c:	01000000 	mrseq	r0, (UNDEF: 0)
     d60:	000d729c 	muleq	sp, ip, r2
     d64:	006f2300 	rsbeq	r2, pc, r0, lsl #6
     d68:	09f81401 	ldmibeq	r8!, {r0, sl, ip}^
     d6c:	91020000 	mrsls	r0, (UNDEF: 2)
     d70:	b12d006c 			; <UNDEFINED> instruction: 0xb12d006c
     d74:	01000002 	tsteq	r0, r2
     d78:	00002510 	andeq	r2, r0, r0, lsl r5
     d7c:	00003c00 	andeq	r3, r0, r0, lsl #24
     d80:	00002a20 	andeq	r2, r0, r0, lsr #20
     d84:	989c0100 	ldmls	ip, {r8}
     d88:	2300000d 	movwcs	r0, #13
     d8c:	1001006f 	andne	r0, r1, pc, rrx
     d90:	000009f8 	strdeq	r0, [r0], -r8
     d94:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     d98:	00027a2e 	andeq	r7, r2, lr, lsr #20
     d9c:	250c0100 	strcs	r0, [ip, #-256]	; 0xffffff00
     da0:	10000000 	andne	r0, r0, r0
     da4:	2c200000 	stccs	0, cr0, [r0], #-0
     da8:	01000000 	mrseq	r0, (UNDEF: 0)
     dac:	006f239c 	mlseq	pc, ip, r3, r2	; <UNPREDICTABLE>
     db0:	09f80c01 	ldmibeq	r8!, {r0, sl, fp}^
     db4:	91020000 	mrsls	r0, (UNDEF: 2)
     db8:	7200006c 	andvc	r0, r0, #108	; 0x6c
     dbc:	04000003 	streq	r0, [r0], #-3
     dc0:	00028600 	andeq	r8, r2, r0, lsl #12
     dc4:	21010400 	tstcs	r1, r0, lsl #8
     dc8:	0c000001 	stceq	0, cr0, [r0], {1}
     dcc:	00000700 	andeq	r0, r0, r0, lsl #14
     dd0:	20000784 	andcs	r0, r0, r4, lsl #15
     dd4:	00000346 	andeq	r0, r0, r6, asr #6
     dd8:	00000223 	andeq	r0, r0, r3, lsr #4
     ddc:	69050402 	stmdbvs	r5, {r1, sl}
     de0:	0300746e 	movweq	r7, #1134	; 0x46e
     de4:	04870601 	streq	r0, [r7], #1537	; 0x601
     de8:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
     dec:	02000007 	andeq	r0, r0, #7
     df0:	00003a0f 	andeq	r3, r0, pc, lsl #20
     df4:	08010300 	stmdaeq	r1, {r8, r9}
     df8:	00000485 	andeq	r0, r0, r5, lsl #9
     dfc:	a1050203 	tstge	r5, r3, lsl #4
     e00:	03000004 	movweq	r0, #4
     e04:	03810702 	orreq	r0, r1, #524288	; 0x80000
     e08:	ef040000 	svc	0x00040000
     e0c:	02000007 	andeq	r0, r0, #7
     e10:	00005a13 	andeq	r5, r0, r3, lsl sl
     e14:	07040300 	streq	r0, [r4, -r0, lsl #6]
     e18:	00000073 	andeq	r0, r0, r3, ror r0
     e1c:	11030205 	tstne	r3, r5, lsl #4
     e20:	00000082 	andeq	r0, r0, r2, lsl #1
     e24:	0007c306 	andeq	ip, r7, r6, lsl #6
     e28:	2f120300 	svccs	0x00120300
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	0007ab06 	andeq	sl, r7, r6, lsl #22
     e34:	2f130300 	svccs	0x00130300
     e38:	01000000 	mrseq	r0, (UNDEF: 0)
     e3c:	03040700 	movweq	r0, #18176	; 0x4700
     e40:	00009b0f 	andeq	r9, r0, pc, lsl #22
     e44:	64690800 	strbtvs	r0, [r9], #-2048	; 0xfffff800
     e48:	10030072 	andne	r0, r3, r2, ror r0
     e4c:	0000004f 	andeq	r0, r0, pc, asr #32
     e50:	00006109 	andeq	r6, r0, r9, lsl #2
     e54:	02050000 	andeq	r0, r5, #0
     e58:	00bc1803 	adcseq	r1, ip, r3, lsl #16
     e5c:	86060000 	strhi	r0, [r6], -r0
     e60:	03000007 	movweq	r0, #7
     e64:	00002f19 	andeq	r2, r0, r9, lsl pc
     e68:	cd060000 	stcgt	0, cr0, [r6, #-0]
     e6c:	03000006 	movweq	r0, #6
     e70:	00002f1a 	andeq	r2, r0, sl, lsl pc
     e74:	07000100 	streq	r0, [r0, -r0, lsl #2]
     e78:	d5160304 	ldrle	r0, [r6, #-772]	; 0xfffffcfc
     e7c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     e80:	0072646f 	rsbseq	r6, r2, pc, ror #8
     e84:	004f1703 	subeq	r1, pc, r3, lsl #14
     e88:	9b090000 	blls	240e90 <startup-0x1fdbf170>
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	0006ad0a 	andeq	sl, r6, sl, lsl #26
     e94:	0a031800 	beq	c6e9c <startup-0x1ff39164>
     e98:	0000011e 	andeq	r0, r0, lr, lsl r1
     e9c:	0007f806 	andeq	pc, r7, r6, lsl #16
     ea0:	4f0b0300 	svcmi	0x000b0300
     ea4:	00000000 	andeq	r0, r0, r0
     ea8:	0006c106 	andeq	ip, r6, r6, lsl #2
     eac:	4f0c0300 	svcmi	0x000c0300
     eb0:	04000000 	streq	r0, [r0], #-0
     eb4:	0007bb06 	andeq	fp, r7, r6, lsl #22
     eb8:	4f0d0300 	svcmi	0x000d0300
     ebc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     ec0:	00077006 	andeq	r7, r7, r6
     ec4:	4f0e0300 	svcmi	0x000e0300
     ec8:	0c000000 	stceq	0, cr0, [r0], {-0}
     ecc:	0000820b 	andeq	r8, r0, fp, lsl #4
     ed0:	bc0b1000 	stclt	0, cr1, [fp], {-0}
     ed4:	14000000 	strne	r0, [r0], #-0
     ed8:	06ef0400 	strbteq	r0, [pc], r0, lsl #8
     edc:	1d030000 	stcne	0, cr0, [r3, #-0]
     ee0:	000000d5 	ldrdeq	r0, [r0], -r5
     ee4:	00011e0c 	andeq	r1, r1, ip, lsl #28
     ee8:	07b30400 	ldreq	r0, [r3, r0, lsl #8]!
     eec:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
     ef0:	00000139 	andeq	r0, r0, r9, lsr r1
     ef4:	0129040d 			; <UNDEFINED> instruction: 0x0129040d
     ef8:	540e0000 	strpl	r0, [lr], #-0
     efc:	01000007 	tsteq	r0, r7
     f00:	000a7077 	andeq	r7, sl, r7, ror r0
     f04:	00005a20 	andeq	r5, r0, r0, lsr #20
     f08:	7d9c0100 	ldfvcs	f0, [ip]
     f0c:	0f000001 	svceq	0x00000001
     f10:	000007df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     f14:	017d7701 	cmneq	sp, r1, lsl #14
     f18:	91020000 	mrsls	r0, (UNDEF: 2)
     f1c:	07e70f6c 	strbeq	r0, [r7, ip, ror #30]!
     f20:	77010000 	strvc	r0, [r1, -r0]
     f24:	0000017d 	andeq	r0, r0, sp, ror r1
     f28:	10689102 	rsbne	r9, r8, r2, lsl #2
     f2c:	78010073 	stmdavc	r1, {r0, r1, r4, r5, r6}
     f30:	0000017d 	andeq	r0, r0, sp, ror r1
     f34:	00749102 	rsbseq	r9, r4, r2, lsl #2
     f38:	0183040d 	orreq	r0, r3, sp, lsl #8
     f3c:	01030000 	mrseq	r0, (UNDEF: 3)
     f40:	00048e08 	andeq	r8, r4, r8, lsl #28
     f44:	06f41100 	ldrbteq	r1, [r4], r0, lsl #2
     f48:	73010000 	movwvc	r0, #4096	; 0x1000
     f4c:	20000a56 	andcs	r0, r0, r6, asr sl
     f50:	0000001a 	andeq	r0, r0, sl, lsl r0
     f54:	25129c01 	ldrcs	r9, [r2, #-3073]	; 0xfffff3ff
     f58:	01000008 	tsteq	r0, r8
     f5c:	000a1a6b 	andeq	r1, sl, fp, ror #20
     f60:	00003c20 	andeq	r3, r0, r0, lsr #24
     f64:	bd9c0100 	ldflts	f0, [ip]
     f68:	13000001 	movwne	r0, #1
     f6c:	6b010063 	blvs	41100 <startup-0x1ffbef00>
     f70:	0000003a 	andeq	r0, r0, sl, lsr r0
     f74:	00779102 	rsbseq	r9, r7, r2, lsl #2
     f78:	00079e12 	andeq	r9, r7, r2, lsl lr
     f7c:	e0630100 	rsb	r0, r3, r0, lsl #2
     f80:	3a200009 	bcc	800fac <startup-0x1f7ff054>
     f84:	01000000 	mrseq	r0, (UNDEF: 0)
     f88:	0001f99c 	muleq	r1, ip, r9
     f8c:	00781300 	rsbseq	r1, r8, r0, lsl #6
     f90:	00216301 	eoreq	r6, r1, r1, lsl #6
     f94:	91020000 	mrsls	r0, (UNDEF: 2)
     f98:	0079136c 	rsbseq	r1, r9, ip, ror #6
     f9c:	00216301 	eoreq	r6, r1, r1, lsl #6
     fa0:	91020000 	mrsls	r0, (UNDEF: 2)
     fa4:	07761468 	ldrbeq	r1, [r6, -r8, ror #8]!
     fa8:	64010000 	strvs	r0, [r1], #-0
     fac:	00000021 	andeq	r0, r0, r1, lsr #32
     fb0:	00749102 	rsbseq	r9, r4, r2, lsl #2
     fb4:	00073611 	andeq	r3, r7, r1, lsl r6
     fb8:	b05c0100 	subslt	r0, ip, r0, lsl #2
     fbc:	30200009 	eorcc	r0, r0, r9
     fc0:	01000000 	mrseq	r0, (UNDEF: 0)
     fc4:	06b3129c 	ssateq	r1, #20, ip, lsl #5
     fc8:	52010000 	andpl	r0, r1, #0
     fcc:	20000960 	andcs	r0, r0, r0, ror #18
     fd0:	00000050 	andeq	r0, r0, r0, asr r0
     fd4:	023c9c01 	eorseq	r9, ip, #256	; 0x100
     fd8:	fa0f0000 	blx	3c0fe0 <startup-0x1fc3f020>
     fdc:	01000009 	tsteq	r0, r9
     fe0:	00003a52 	andeq	r3, r0, r2, asr sl
     fe4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     fe8:	0006d50f 	andeq	sp, r6, pc, lsl #10
     fec:	21520100 	cmpcs	r2, r0, lsl #2
     ff0:	02000000 	andeq	r0, r0, #0
     ff4:	15007091 	strne	r7, [r0, #-145]	; 0xffffff6f
     ff8:	00000815 	andeq	r0, r0, r5, lsl r8
     ffc:	003a4801 	eorseq	r4, sl, r1, lsl #16
    1000:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    1004:	00402000 	subeq	r2, r0, r0
    1008:	9c010000 	stcls	0, cr0, [r1], {-0}
    100c:	00000263 	andeq	r0, r0, r3, ror #4
    1010:	00767210 	rsbseq	r7, r6, r0, lsl r2
    1014:	003a4c01 	eorseq	r4, sl, r1, lsl #24
    1018:	91020000 	mrsls	r0, (UNDEF: 2)
    101c:	dd15006f 	ldcle	0, cr0, [r5, #-444]	; 0xfffffe44
    1020:	01000006 	tsteq	r0, r6
    1024:	00003a3f 	andeq	r3, r0, pc, lsr sl
    1028:	0008e000 	andeq	lr, r8, r0
    102c:	00004020 	andeq	r4, r0, r0, lsr #32
    1030:	8a9c0100 	bhi	fe701438 <_global_impure_ptr+0xde6f9fa8>
    1034:	10000002 	andne	r0, r0, r2
    1038:	01007672 	tsteq	r0, r2, ror r6
    103c:	00003a43 	andeq	r3, r0, r3, asr #20
    1040:	6f910200 	svcvs	0x00910200
    1044:	078d1200 	streq	r1, [sp, r0, lsl #4]
    1048:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    104c:	200008b6 			; <UNDEFINED> instruction: 0x200008b6
    1050:	0000002a 	andeq	r0, r0, sl, lsr #32
    1054:	02ae9c01 	adceq	r9, lr, #256	; 0x100
    1058:	cf0f0000 	svcgt	0x000f0000
    105c:	01000008 	tsteq	r0, r8
    1060:	00003a39 	andeq	r3, r0, r9, lsr sl
    1064:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1068:	07601200 	strbeq	r1, [r0, -r0, lsl #4]!
    106c:	33010000 	movwcc	r0, #4096	; 0x1000
    1070:	2000088c 	andcs	r0, r0, ip, lsl #17
    1074:	0000002a 	andeq	r0, r0, sl, lsr #32
    1078:	02d29c01 	sbcseq	r9, r2, #256	; 0x100
    107c:	fa0f0000 	blx	3c1084 <startup-0x1fc3ef7c>
    1080:	01000009 	tsteq	r0, r9
    1084:	00003a33 	andeq	r3, r0, r3, lsr sl
    1088:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    108c:	07201500 	streq	r1, [r0, -r0, lsl #10]!
    1090:	26010000 	strcs	r0, [r1], -r0
    1094:	0000003a 	andeq	r0, r0, sl, lsr r0
    1098:	2000084c 	andcs	r0, r0, ip, asr #16
    109c:	00000040 	andeq	r0, r0, r0, asr #32
    10a0:	02f99c01 	rscseq	r9, r9, #256	; 0x100
    10a4:	72100000 	andsvc	r0, r0, #0
    10a8:	27010076 	smlsdxcs	r1, r6, r0, r0
    10ac:	0000003a 	andeq	r0, r0, sl, lsr r0
    10b0:	00779102 	rsbseq	r9, r7, r2, lsl #2
    10b4:	0007fe12 	andeq	pc, r7, r2, lsl lr	; <UNPREDICTABLE>
    10b8:	181e0100 	ldmdane	lr, {r8}
    10bc:	34200008 	strtcc	r0, [r0], #-8
    10c0:	01000000 	mrseq	r0, (UNDEF: 0)
    10c4:	00031d9c 	muleq	r3, ip, sp
    10c8:	06c80f00 	strbeq	r0, [r8], r0, lsl #30
    10cc:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    10d0:	0000003a 	andeq	r0, r0, sl, lsr r0
    10d4:	00779102 	rsbseq	r9, r7, r2, lsl #2
    10d8:	0007ca16 	andeq	ip, r7, r6, lsl sl
    10dc:	c8170100 	ldmdagt	r7, {r8}
    10e0:	50200007 	eorpl	r0, r0, r7
    10e4:	01000000 	mrseq	r0, (UNDEF: 0)
    10e8:	00034b9c 	muleq	r3, ip, fp
    10ec:	00781300 	rsbseq	r1, r8, r0, lsl #6
    10f0:	003a1701 	eorseq	r1, sl, r1, lsl #14
    10f4:	91020000 	mrsls	r0, (UNDEF: 2)
    10f8:	0063106f 	rsbeq	r1, r3, pc, rrx
    10fc:	003a1801 	eorseq	r1, sl, r1, lsl #16
    1100:	91020000 	mrsls	r0, (UNDEF: 2)
    1104:	41170077 	tstmi	r7, r7, ror r0
    1108:	01000007 	tsteq	r0, r7
    110c:	00078410 	andeq	r8, r7, r0, lsl r4
    1110:	00004420 	andeq	r4, r0, r0, lsr #8
    1114:	139c0100 	orrsne	r0, ip, #0, 2
    1118:	10010078 	andne	r0, r1, r8, ror r0
    111c:	0000003a 	andeq	r0, r0, sl, lsr r0
    1120:	106f9102 	rsbne	r9, pc, r2, lsl #2
    1124:	11010063 	tstne	r1, r3, rrx
    1128:	0000003a 	andeq	r0, r0, sl, lsr r0
    112c:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1130:	00008d00 	andeq	r8, r0, r0, lsl #26
    1134:	ee000400 	cfcpys	mvf0, mvf0
    1138:	04000003 	streq	r0, [r0], #-3
    113c:	00012101 	andeq	r2, r1, r1, lsl #2
    1140:	08660c00 	stmdaeq	r6!, {sl, fp}^
    1144:	0acc0000 	beq	ff30114c <_global_impure_ptr+0xdf2f9cbc>
    1148:	00da2000 	sbcseq	r2, sl, r0
    114c:	02f30000 	rscseq	r0, r3, #0
    1150:	42020000 	andmi	r0, r2, #0
    1154:	01000008 	tsteq	r0, r8
    1158:	000b8027 	andeq	r8, fp, r7, lsr #32
    115c:	00002620 	andeq	r2, r0, r0, lsr #12
    1160:	449c0100 	ldrmi	r0, [ip], #256	; 0x100
    1164:	03000000 	movweq	r0, #0
    1168:	0100736d 	tsteq	r0, sp, ror #6
    116c:	00004427 	andeq	r4, r0, r7, lsr #8
    1170:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1174:	07040400 	streq	r0, [r4, -r0, lsl #8]
    1178:	00000073 	andeq	r0, r0, r3, ror r0
    117c:	00085a02 	andeq	r5, r8, r2, lsl #20
    1180:	541e0100 	ldrpl	r0, [lr], #-256	; 0xffffff00
    1184:	2c20000b 	stccs	0, cr0, [r0], #-44	; 0xffffffd4
    1188:	01000000 	mrseq	r0, (UNDEF: 0)
    118c:	00006e9c 	muleq	r0, ip, lr
    1190:	73750300 	cmnvc	r5, #0, 6
    1194:	441e0100 	ldrmi	r0, [lr], #-256	; 0xffffff00
    1198:	02000000 	andeq	r0, r0, #0
    119c:	05007491 	streq	r7, [r0, #-1169]	; 0xfffffb6f
    11a0:	00000836 	andeq	r0, r0, r6, lsr r8
    11a4:	0b101401 	bleq	4061b0 <startup-0x1fbf9e50>
    11a8:	00442000 	subeq	r2, r4, r0
    11ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    11b0:	00084e05 	andeq	r4, r8, r5, lsl #28
    11b4:	cc0a0100 	stfgts	f0, [sl], {-0}
    11b8:	4420000a 	strtmi	r0, [r0], #-10
    11bc:	01000000 	mrseq	r0, (UNDEF: 0)
    11c0:	0573009c 	ldrbeq	r0, [r3, #-156]!	; 0xffffff64
    11c4:	00040000 	andeq	r0, r4, r0
    11c8:	0000044c 	andeq	r0, r0, ip, asr #8
    11cc:	01210104 			; <UNDEFINED> instruction: 0x01210104
    11d0:	f90c0000 			; <UNDEFINED> instruction: 0xf90c0000
    11d4:	a8000008 	stmdage	r0, {r3}
    11d8:	8820000b 	stmdahi	r0!, {r0, r1, r3}
    11dc:	6c000008 	stcvs	0, cr0, [r0], {8}
    11e0:	02000003 	andeq	r0, r0, #3
    11e4:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    11e8:	002c0c02 	eoreq	r0, ip, r2, lsl #24
    11ec:	04030000 	streq	r0, [r3], #-0
    11f0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    11f4:	06010400 	streq	r0, [r1], -r0, lsl #8
    11f8:	00000487 	andeq	r0, r0, r7, lsl #9
    11fc:	00077e02 	andeq	r7, r7, r2, lsl #28
    1200:	450f0200 	strmi	r0, [pc, #-512]	; 1008 <startup-0x1fffeff8>
    1204:	04000000 	streq	r0, [r0], #-0
    1208:	04850801 	streq	r0, [r5], #2049	; 0x801
    120c:	02040000 	andeq	r0, r4, #0
    1210:	0004a105 	andeq	sl, r4, r5, lsl #2
    1214:	07020400 	streq	r0, [r2, -r0, lsl #8]
    1218:	00000381 	andeq	r0, r0, r1, lsl #7
    121c:	0007ef02 	andeq	lr, r7, r2, lsl #30
    1220:	65130200 	ldrvs	r0, [r3, #-512]	; 0xfffffe00
    1224:	04000000 	streq	r0, [r0], #-0
    1228:	00730704 	rsbseq	r0, r3, r4, lsl #14
    122c:	02050000 	andeq	r0, r5, #0
    1230:	008d1103 	addeq	r1, sp, r3, lsl #2
    1234:	c3060000 	movwgt	r0, #24576	; 0x6000
    1238:	03000007 	movweq	r0, #7
    123c:	00003a12 	andeq	r3, r0, r2, lsl sl
    1240:	ab060000 	blge	181248 <startup-0x1fe7edb8>
    1244:	03000007 	movweq	r0, #7
    1248:	00003a13 	andeq	r3, r0, r3, lsl sl
    124c:	07000100 	streq	r0, [r0, -r0, lsl #2]
    1250:	a60f0304 	strge	r0, [pc], -r4, lsl #6
    1254:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1258:	00726469 	rsbseq	r6, r2, r9, ror #8
    125c:	005a1003 	subseq	r1, sl, r3
    1260:	6c090000 	stcvs	0, cr0, [r9], {-0}
    1264:	00000000 	andeq	r0, r0, r0
    1268:	18030205 	stmdane	r3, {r0, r2, r9}
    126c:	000000c7 	andeq	r0, r0, r7, asr #1
    1270:	00078606 	andeq	r8, r7, r6, lsl #12
    1274:	3a190300 	bcc	641e7c <startup-0x1f9be184>
    1278:	00000000 	andeq	r0, r0, r0
    127c:	0006cd06 	andeq	ip, r6, r6, lsl #26
    1280:	3a1a0300 	bcc	681e88 <startup-0x1f97e178>
    1284:	01000000 	mrseq	r0, (UNDEF: 0)
    1288:	03040700 	movweq	r0, #18176	; 0x4700
    128c:	0000e016 	andeq	lr, r0, r6, lsl r0
    1290:	646f0800 	strbtvs	r0, [pc], #-2048	; 1298 <startup-0x1fffed68>
    1294:	17030072 	smlsdxne	r3, r2, r0, r0
    1298:	0000005a 	andeq	r0, r0, sl, asr r0
    129c:	0000a609 	andeq	sl, r0, r9, lsl #12
    12a0:	ad0a0000 	stcge	0, cr0, [sl, #-0]
    12a4:	18000006 	stmdane	r0, {r1, r2}
    12a8:	01290a03 			; <UNDEFINED> instruction: 0x01290a03
    12ac:	f8060000 			; <UNDEFINED> instruction: 0xf8060000
    12b0:	03000007 	movweq	r0, #7
    12b4:	00005a0b 	andeq	r5, r0, fp, lsl #20
    12b8:	c1060000 	mrsgt	r0, (UNDEF: 6)
    12bc:	03000006 	movweq	r0, #6
    12c0:	00005a0c 	andeq	r5, r0, ip, lsl #20
    12c4:	bb060400 	bllt	1822cc <startup-0x1fe7dd34>
    12c8:	03000007 	movweq	r0, #7
    12cc:	00005a0d 	andeq	r5, r0, sp, lsl #20
    12d0:	70060800 	andvc	r0, r6, r0, lsl #16
    12d4:	03000007 	movweq	r0, #7
    12d8:	00005a0e 	andeq	r5, r0, lr, lsl #20
    12dc:	8d0b0c00 	stchi	12, cr0, [fp, #-0]
    12e0:	10000000 	andne	r0, r0, r0
    12e4:	0000c70b 	andeq	ip, r0, fp, lsl #14
    12e8:	02001400 	andeq	r1, r0, #0, 8
    12ec:	000006ef 	andeq	r0, r0, pc, ror #13
    12f0:	00e01d03 	rsceq	r1, r0, r3, lsl #26
    12f4:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
    12f8:	02000001 	andeq	r0, r0, #1
    12fc:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    1300:	01441e03 	cmpeq	r4, r3, lsl #28
    1304:	040d0000 	streq	r0, [sp], #-0
    1308:	00000134 	andeq	r0, r0, r4, lsr r1
    130c:	00003a0e 	andeq	r3, r0, lr, lsl #20
    1310:	00015b00 	andeq	r5, r1, r0, lsl #22
    1314:	015b0f00 	cmpeq	fp, r0, lsl #30
    1318:	03ff0000 	mvnseq	r0, #0
    131c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    1320:	000003ec 	andeq	r0, r0, ip, ror #7
    1324:	0009c510 	andeq	ip, r9, r0, lsl r5
    1328:	4ad80100 	bmi	ff601730 <_global_impure_ptr+0xdf5fa2a0>
    132c:	05000001 	streq	r0, [r0, #-1]
    1330:	00625803 	rsbeq	r5, r2, r3, lsl #16
    1334:	09d21020 	ldmibeq	r2, {r5, ip}^
    1338:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    133c:	0000014a 	andeq	r0, r0, sl, asr #2
    1340:	5e580305 	cdppl	3, 5, cr0, cr8, cr5, {0}
    1344:	ee102000 	cdp	0, 1, cr2, cr0, cr0, {0}
    1348:	01000008 	tsteq	r0, r8
    134c:	000195d9 	ldrdeq	r9, [r1], -r9	; <UNPREDICTABLE>
    1350:	60030500 	andvs	r0, r3, r0, lsl #10
    1354:	0d200066 	stceq	0, cr0, [r0, #-408]!	; 0xfffffe68
    1358:	00003a04 	andeq	r3, r0, r4, lsl #20
    135c:	08981000 	ldmeq	r8, {ip}
    1360:	da010000 	ble	41368 <startup-0x1ffbec98>
    1364:	00000195 	muleq	r0, r5, r1
    1368:	66640305 	strbtvs	r0, [r4], -r5, lsl #6
    136c:	b6112000 	ldrlt	r2, [r1], -r0
    1370:	01000008 	tsteq	r0, r8
    1374:	14000127 	strne	r0, [r0], #-295	; 0xfffffed9
    1378:	00302000 	eorseq	r2, r0, r0
    137c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1380:	000001d2 	ldrdeq	r0, [r0], -r2
    1384:	706d7412 	rsbvc	r7, sp, r2, lsl r4
    1388:	01290100 			; <UNDEFINED> instruction: 0x01290100
    138c:	000001d2 	ldrdeq	r0, [r0], -r2
    1390:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1394:	0045040d 	subeq	r0, r5, sp, lsl #8
    1398:	98130000 	ldmdals	r3, {}	; <UNPREDICTABLE>
    139c:	01000009 	tsteq	r0, r9
    13a0:	12e4010f 	rscne	r0, r4, #-1073741821	; 0xc0000003
    13a4:	011c2000 	tsteq	ip, r0
    13a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    13ac:	00000241 	andeq	r0, r0, r1, asr #4
    13b0:	01006912 	tsteq	r0, r2, lsl r9
    13b4:	003a0110 	eorseq	r0, sl, r0, lsl r1
    13b8:	91020000 	mrsls	r0, (UNDEF: 2)
    13bc:	006a1277 	rsbeq	r1, sl, r7, ror r2
    13c0:	3a011001 	bcc	453cc <startup-0x1ffbac34>
    13c4:	02000000 	andeq	r0, r0, #0
    13c8:	2b147691 	blcs	51ee14 <startup-0x1fae11ec>
    13cc:	01000007 	tsteq	r0, r7
    13d0:	003a0110 	eorseq	r0, sl, r0, lsl r1
    13d4:	91020000 	mrsls	r0, (UNDEF: 2)
    13d8:	0063126b 	rsbeq	r1, r3, fp, ror #4
    13dc:	3a011001 	bcc	453e8 <startup-0x1ffbac18>
    13e0:	02000000 	andeq	r0, r0, #0
    13e4:	69147591 	ldmdbvs	r4, {r0, r4, r7, r8, sl, ip, sp, lr}
    13e8:	01000009 	tsteq	r0, r9
    13ec:	00210111 	eoreq	r0, r1, r1, lsl r1
    13f0:	91020000 	mrsls	r0, (UNDEF: 2)
    13f4:	006b1270 	rsbeq	r1, fp, r0, ror r2
    13f8:	65011201 	strvs	r1, [r1, #-513]	; 0xfffffdff
    13fc:	02000000 	andeq	r0, r0, #0
    1400:	15006c91 	strne	r6, [r0, #-3217]	; 0xfffff36f
    1404:	00000975 	andeq	r0, r0, r5, ror r9
    1408:	002cf901 	eoreq	pc, ip, r1, lsl #18
    140c:	12340000 	eorsne	r0, r4, #0
    1410:	00b02000 	adcseq	r2, r0, r0
    1414:	9c010000 	stcls	0, cr0, [r1], {-0}
    1418:	0000028f 	andeq	r0, r0, pc, lsl #5
    141c:	01007816 	tsteq	r0, r6, lsl r8
    1420:	00002cf9 	strdeq	r2, [r0], -r9
    1424:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1428:	01007916 	tsteq	r0, r6, lsl r9
    142c:	00002cf9 	strdeq	r2, [r0], -r9
    1430:	68910200 	ldmvs	r1, {r9}
    1434:	00098017 	andeq	r8, r9, r7, lsl r0
    1438:	3afa0100 	bcc	ffe81840 <_global_impure_ptr+0xdfe7a3b0>
    143c:	02000000 	andeq	r0, r0, #0
    1440:	bf177391 	svclt	0x00177391
    1444:	01000009 	tsteq	r0, r9
    1448:	00002cfb 	strdeq	r2, [r0], -fp
    144c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1450:	097a1800 	ldmdbeq	sl!, {fp, ip}^
    1454:	e6010000 	str	r0, [r1], -r0
    1458:	20001188 	andcs	r1, r0, r8, lsl #3
    145c:	000000ac 	andeq	r0, r0, ip, lsr #1
    1460:	02d99c01 	sbcseq	r9, r9, #256	; 0x100
    1464:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    1468:	2ce60100 	stfcse	f0, [r6]
    146c:	02000000 	andeq	r0, r0, #0
    1470:	79166c91 	ldmdbvc	r6, {r0, r4, r7, sl, fp, sp, lr}
    1474:	2ce60100 	stfcse	f0, [r6]
    1478:	02000000 	andeq	r0, r0, #0
    147c:	80176891 	mulshi	r7, r1, r8
    1480:	01000009 	tsteq	r0, r9
    1484:	00003aec 	andeq	r3, r0, ip, ror #21
    1488:	73910200 	orrsvc	r0, r1, #0, 4
    148c:	0009bf17 	andeq	fp, r9, r7, lsl pc
    1490:	2cee0100 	stfcse	f0, [lr]
    1494:	02000000 	andeq	r0, r0, #0
    1498:	18007491 	stmdane	r0, {r0, r4, r7, sl, ip, sp, lr}
    149c:	000008a4 	andeq	r0, r0, r4, lsr #17
    14a0:	1140e101 	cmpne	r0, r1, lsl #2
    14a4:	00482000 	subeq	r2, r8, r0
    14a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    14ac:	00000305 	andeq	r0, r0, r5, lsl #6
    14b0:	00114619 	andseq	r4, r1, r9, lsl r6
    14b4:	00002c20 	andeq	r2, r0, r0, lsr #24
    14b8:	00691a00 	rsbeq	r1, r9, r0, lsl #20
    14bc:	002ce201 	eoreq	lr, ip, r1, lsl #4
    14c0:	91020000 	mrsls	r0, (UNDEF: 2)
    14c4:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    14c8:	000008d4 	ldrdeq	r0, [r0], -r4
    14cc:	1108dc01 	tstne	r8, r1, lsl #24
    14d0:	00382000 	eorseq	r2, r8, r0
    14d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    14d8:	00000331 	andeq	r0, r0, r1, lsr r3
    14dc:	00110e19 	andseq	r0, r1, r9, lsl lr
    14e0:	00002020 	andeq	r2, r0, r0, lsr #32
    14e4:	00691a00 	rsbeq	r1, r9, r0, lsl #20
    14e8:	002cdd01 	eoreq	sp, ip, r1, lsl #26
    14ec:	91020000 	mrsls	r0, (UNDEF: 2)
    14f0:	1b000074 	blne	16c8 <startup-0x1fffe938>
    14f4:	00000960 	andeq	r0, r0, r0, ror #18
    14f8:	0fbcb601 	svceq	0x00bcb601
    14fc:	014c2000 	mrseq	r2, (UNDEF: 76)
    1500:	9c010000 	stcls	0, cr0, [r1], {-0}
    1504:	000003a3 	andeq	r0, r0, r3, lsr #7
    1508:	01007816 	tsteq	r0, r6, lsl r8
    150c:	00002cb6 			; <UNDEFINED> instruction: 0x00002cb6
    1510:	5c910200 	lfmpl	f0, 4, [r1], {0}
    1514:	01007916 	tsteq	r0, r6, lsl r9
    1518:	00002cb6 			; <UNDEFINED> instruction: 0x00002cb6
    151c:	58910200 	ldmpl	r1, {r9}
    1520:	74657316 	strbtvc	r7, [r5], #-790	; 0xfffffcea
    1524:	2cb60100 	ldfcss	f0, [r6]
    1528:	02000000 	andeq	r0, r0, #0
    152c:	80175491 	mulshi	r7, r1, r4
    1530:	01000009 	tsteq	r0, r9
    1534:	00003ab7 			; <UNDEFINED> instruction: 0x00003ab7
    1538:	6f910200 	svcvs	0x00910200
    153c:	0100631a 	tsteq	r0, sl, lsl r3
    1540:	00003ab7 			; <UNDEFINED> instruction: 0x00003ab7
    1544:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
    1548:	00072b17 	andeq	r2, r7, r7, lsl fp
    154c:	3ab70100 	bcc	fedc1954 <_global_impure_ptr+0xdedba4c4>
    1550:	02000000 	andeq	r0, r0, #0
    1554:	bf176e91 	svclt	0x00176e91
    1558:	01000009 	tsteq	r0, r9
    155c:	00002cb8 			; <UNDEFINED> instruction: 0x00002cb8
    1560:	68910200 	ldmvs	r1, {r9}
    1564:	0a021b00 	beq	8816c <startup-0x1ff77e94>
    1568:	aa010000 	bge	41570 <startup-0x1ffbea90>
    156c:	20000f56 	andcs	r0, r0, r6, asr pc
    1570:	00000066 	andeq	r0, r0, r6, rrx
    1574:	03d59c01 	bicseq	r9, r5, #256	; 0x100
    1578:	86170000 	ldrhi	r0, [r7], -r0
    157c:	01000008 	tsteq	r0, r8
    1580:	00003aab 	andeq	r3, r0, fp, lsr #21
    1584:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1588:	6464611a 	strbtvs	r6, [r4], #-282	; 0xfffffee6
    158c:	3aab0100 	bcc	feac1994 <_global_impure_ptr+0xdeaba504>
    1590:	02000000 	andeq	r0, r0, #0
    1594:	1c007691 	stcne	6, cr7, [r0], {145}	; 0x91
    1598:	0000088b 	andeq	r0, r0, fp, lsl #17
    159c:	0efa9b01 	vmoveq.f64	d25, #161	; 0xc1080000 -8.5
    15a0:	005c2000 	subseq	r2, ip, r0
    15a4:	9c010000 	stcls	0, cr0, [r1], {-0}
    15a8:	0009851d 	andeq	r8, r9, sp, lsl r5
    15ac:	b4930100 	ldrlt	r0, [r3], #256	; 0x100
    15b0:	4620000e 	strtmi	r0, [r0], -lr
    15b4:	01000000 	mrseq	r0, (UNDEF: 0)
    15b8:	0004189c 	muleq	r4, ip, r8
    15bc:	08cf1e00 	stmiaeq	pc, {r9, sl, fp, ip}^	; <UNPREDICTABLE>
    15c0:	93010000 	movwls	r0, #4096	; 0x1000
    15c4:	0000003a 	andeq	r0, r0, sl, lsr r0
    15c8:	1e779102 	expnes	f1, f2
    15cc:	0000072b 	andeq	r0, r0, fp, lsr #14
    15d0:	003a9301 	eorseq	r9, sl, r1, lsl #6
    15d4:	91020000 	mrsls	r0, (UNDEF: 2)
    15d8:	ec1d0076 	ldc	0, cr0, [sp], {118}	; 0x76
    15dc:	01000009 	tsteq	r0, r9
    15e0:	000e748c 	andeq	r7, lr, ip, lsl #9
    15e4:	00004020 	andeq	r4, r0, r0, lsr #32
    15e8:	4a9c0100 	bmi	fe7019f0 <_global_impure_ptr+0xde6fa560>
    15ec:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
    15f0:	000009fa 	strdeq	r0, [r0], -sl
    15f4:	003a8c01 	eorseq	r8, sl, r1, lsl #24
    15f8:	91020000 	mrsls	r0, (UNDEF: 2)
    15fc:	072b1e77 			; <UNDEFINED> instruction: 0x072b1e77
    1600:	8c010000 	stchi	0, cr0, [r1], {-0}
    1604:	0000003a 	andeq	r0, r0, sl, lsr r0
    1608:	00769102 	rsbseq	r9, r6, r2, lsl #2
    160c:	0008e01d 	andeq	lr, r8, sp, lsl r0
    1610:	f6780100 			; <UNDEFINED> instruction: 0xf6780100
    1614:	7e20000d 	cdpvc	0, 2, cr0, cr0, cr13, {0}
    1618:	01000000 	mrseq	r0, (UNDEF: 0)
    161c:	00047c9c 	muleq	r4, ip, ip
    1620:	05631e00 	strbeq	r1, [r3, #-3584]!	; 0xfffff200
    1624:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    1628:	0000003a 	andeq	r0, r0, sl, lsr r0
    162c:	1e779102 	expnes	f1, f2
    1630:	0000072b 	andeq	r0, r0, fp, lsr #14
    1634:	003a7801 	eorseq	r7, sl, r1, lsl #16
    1638:	91020000 	mrsls	r0, (UNDEF: 2)
    163c:	c21f0076 	andsgt	r0, pc, #118	; 0x76
    1640:	01000008 	tsteq	r0, r8
    1644:	00003a72 	andeq	r3, r0, r2, ror sl
    1648:	000dcc00 	andeq	ip, sp, r0, lsl #24
    164c:	00002a20 	andeq	r2, r0, r0, lsr #20
    1650:	a49c0100 	ldrge	r0, [ip], #256	; 0x100
    1654:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
    1658:	0000072b 	andeq	r0, r0, fp, lsr #14
    165c:	003a7201 	eorseq	r7, sl, r1, lsl #4
    1660:	91020000 	mrsls	r0, (UNDEF: 2)
    1664:	df1f0077 	svcle	0x001f0077
    1668:	01000009 	tsteq	r0, r9
    166c:	00003a5a 	andeq	r3, r0, sl, asr sl
    1670:	000d3400 	andeq	r3, sp, r0, lsl #8
    1674:	00009820 	andeq	r9, r0, r0, lsr #16
    1678:	d89c0100 	ldmle	ip, {r8}
    167c:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
    1680:	0000072b 	andeq	r0, r0, fp, lsr #14
    1684:	003a5a01 	eorseq	r5, sl, r1, lsl #20
    1688:	91020000 	mrsls	r0, (UNDEF: 2)
    168c:	00631a6f 	rsbeq	r1, r3, pc, ror #20
    1690:	003a5b01 	eorseq	r5, sl, r1, lsl #22
    1694:	91020000 	mrsls	r0, (UNDEF: 2)
    1698:	ac1d0077 	ldcge	0, cr0, [sp], {119}	; 0x77
    169c:	01000009 	tsteq	r0, r9
    16a0:	000cc243 	andeq	ip, ip, r3, asr #4
    16a4:	00007220 	andeq	r7, r0, r0, lsr #4
    16a8:	fa9c0100 	blx	fe701ab0 <_global_impure_ptr+0xde6fa620>
    16ac:	1a000004 	bne	16c4 <startup-0x1fffe93c>
    16b0:	45010063 	strmi	r0, [r1, #-99]	; 0xffffff9d
    16b4:	0000003a 	andeq	r0, r0, sl, lsr r0
    16b8:	00779102 	rsbseq	r9, r7, r2, lsl #2
    16bc:	0009221d 	andeq	r2, r9, sp, lsl r2
    16c0:	5c2d0100 	stfpls	f0, [sp], #-0
    16c4:	6620000c 	strtvs	r0, [r0], -ip
    16c8:	01000000 	mrseq	r0, (UNDEF: 0)
    16cc:	00051e9c 	muleq	r5, ip, lr
    16d0:	072b1e00 	streq	r1, [fp, -r0, lsl #28]!
    16d4:	2d010000 	stccs	0, cr0, [r1, #-0]
    16d8:	0000003a 	andeq	r0, r0, sl, lsr r0
    16dc:	00779102 	rsbseq	r9, r7, r2, lsl #2
    16e0:	00093420 	andeq	r3, r9, r0, lsr #8
    16e4:	04240100 	strteq	r0, [r4], #-256	; 0xffffff00
    16e8:	5820000c 	stmdapl	r0!, {r2, r3}
    16ec:	01000000 	mrseq	r0, (UNDEF: 0)
    16f0:	00054c9c 	muleq	r5, ip, ip
    16f4:	00781600 	rsbseq	r1, r8, r0, lsl #12
    16f8:	003a2401 	eorseq	r2, sl, r1, lsl #8
    16fc:	91020000 	mrsls	r0, (UNDEF: 2)
    1700:	00631a6f 	rsbeq	r1, r3, pc, ror #20
    1704:	003a2501 	eorseq	r2, sl, r1, lsl #10
    1708:	91020000 	mrsls	r0, (UNDEF: 2)
    170c:	4b210077 	blmi	8418f0 <startup-0x1f7be710>
    1710:	01000009 	tsteq	r0, r9
    1714:	000ba81c 	andeq	sl, fp, ip, lsl r8
    1718:	00005c20 	andeq	r5, r0, r0, lsr #24
    171c:	169c0100 	ldrne	r0, [ip], r0, lsl #2
    1720:	1c010078 	stcne	0, cr0, [r1], {120}	; 0x78
    1724:	0000003a 	andeq	r0, r0, sl, lsr r0
    1728:	1a6f9102 	bne	1be5b38 <startup-0x1e41a4c8>
    172c:	1d010063 	stcne	0, cr0, [r1, #-396]	; 0xfffffe74
    1730:	0000003a 	andeq	r0, r0, sl, lsr r0
    1734:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1738:	0002ca00 	andeq	ip, r2, r0, lsl #20
    173c:	66000400 	strvs	r0, [r0], -r0, lsl #8
    1740:	04000006 	streq	r0, [r0], #-6
    1744:	00012101 	andeq	r2, r1, r1, lsl #2
    1748:	0a270c00 	beq	9c4750 <startup-0x1f63b8b0>
    174c:	14300000 	ldrtne	r0, [r0], #-0
    1750:	02922000 	addseq	r2, r2, #0
    1754:	05630000 	strbeq	r0, [r3, #-0]!
    1758:	04020000 	streq	r0, [r2], #-0
    175c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1760:	06010300 	streq	r0, [r1], -r0, lsl #6
    1764:	00000487 	andeq	r0, r0, r7, lsl #9
    1768:	00077e04 	andeq	r7, r7, r4, lsl #28
    176c:	3a0f0200 	bcc	3c1f74 <startup-0x1fc3e08c>
    1770:	03000000 	movweq	r0, #0
    1774:	04850801 	streq	r0, [r5], #2049	; 0x801
    1778:	02030000 	andeq	r0, r3, #0
    177c:	0004a105 	andeq	sl, r4, r5, lsl #2
    1780:	07020300 	streq	r0, [r2, -r0, lsl #6]
    1784:	00000381 	andeq	r0, r0, r1, lsl #7
    1788:	0007ef04 	andeq	lr, r7, r4, lsl #30
    178c:	5a130200 	bpl	4c1f94 <startup-0x1fb3e06c>
    1790:	03000000 	movweq	r0, #0
    1794:	00730704 	rsbseq	r0, r3, r4, lsl #14
    1798:	02050000 	andeq	r0, r5, #0
    179c:	00821103 	addeq	r1, r2, r3, lsl #2
    17a0:	c3060000 	movwgt	r0, #24576	; 0x6000
    17a4:	03000007 	movweq	r0, #7
    17a8:	00002f12 	andeq	r2, r0, r2, lsl pc
    17ac:	ab060000 	blge	1817b4 <startup-0x1fe7e84c>
    17b0:	03000007 	movweq	r0, #7
    17b4:	00002f13 	andeq	r2, r0, r3, lsl pc
    17b8:	07000100 	streq	r0, [r0, -r0, lsl #2]
    17bc:	9b0f0304 	blls	3c23d4 <startup-0x1fc3dc2c>
    17c0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    17c4:	00726469 	rsbseq	r6, r2, r9, ror #8
    17c8:	004f1003 	subeq	r1, pc, r3
    17cc:	61090000 	mrsvs	r0, (UNDEF: 9)
    17d0:	00000000 	andeq	r0, r0, r0
    17d4:	18030205 	stmdane	r3, {r0, r2, r9}
    17d8:	000000bc 	strheq	r0, [r0], -ip
    17dc:	00078606 	andeq	r8, r7, r6, lsl #12
    17e0:	2f190300 	svccs	0x00190300
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	0006cd06 	andeq	ip, r6, r6, lsl #26
    17ec:	2f1a0300 	svccs	0x001a0300
    17f0:	01000000 	mrseq	r0, (UNDEF: 0)
    17f4:	03040700 	movweq	r0, #18176	; 0x4700
    17f8:	0000d516 	andeq	sp, r0, r6, lsl r5
    17fc:	646f0800 	strbtvs	r0, [pc], #-2048	; 1804 <startup-0x1fffe7fc>
    1800:	17030072 	smlsdxne	r3, r2, r0, r0
    1804:	0000004f 	andeq	r0, r0, pc, asr #32
    1808:	00009b09 	andeq	r9, r0, r9, lsl #22
    180c:	ad0a0000 	stcge	0, cr0, [sl, #-0]
    1810:	18000006 	stmdane	r0, {r1, r2}
    1814:	011e0a03 	tsteq	lr, r3, lsl #20
    1818:	f8060000 			; <UNDEFINED> instruction: 0xf8060000
    181c:	03000007 	movweq	r0, #7
    1820:	00004f0b 	andeq	r4, r0, fp, lsl #30
    1824:	c1060000 	mrsgt	r0, (UNDEF: 6)
    1828:	03000006 	movweq	r0, #6
    182c:	00004f0c 	andeq	r4, r0, ip, lsl #30
    1830:	bb060400 	bllt	182838 <startup-0x1fe7d7c8>
    1834:	03000007 	movweq	r0, #7
    1838:	00004f0d 	andeq	r4, r0, sp, lsl #30
    183c:	70060800 	andvc	r0, r6, r0, lsl #16
    1840:	03000007 	movweq	r0, #7
    1844:	00004f0e 	andeq	r4, r0, lr, lsl #30
    1848:	820b0c00 	andhi	r0, fp, #0, 24
    184c:	10000000 	andne	r0, r0, r0
    1850:	0000bc0b 	andeq	fp, r0, fp, lsl #24
    1854:	04001400 	streq	r1, [r0], #-1024	; 0xfffffc00
    1858:	000006ef 	andeq	r0, r0, pc, ror #13
    185c:	00d51d03 	sbcseq	r1, r5, r3, lsl #26
    1860:	1e0c0000 	cdpne	0, 0, cr0, cr12, cr0, {0}
    1864:	04000001 	streq	r0, [r0], #-1
    1868:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    186c:	01391e03 	teqeq	r9, r3, lsl #28
    1870:	040d0000 	streq	r0, [sp], #-0
    1874:	00000129 	andeq	r0, r0, r9, lsr #2
    1878:	000a1f0e 	andeq	r1, sl, lr, lsl #30
    187c:	3a610100 	bcc	1841c84 <startup-0x1e7be37c>
    1880:	3c000000 	stccc	0, cr0, [r0], {-0}
    1884:	86200016 			; <UNDEFINED> instruction: 0x86200016
    1888:	01000000 	mrseq	r0, (UNDEF: 0)
    188c:	0001899c 	muleq	r1, ip, r9
    1890:	16420f00 	strbne	r0, [r2], -r0, lsl #30
    1894:	00762000 	rsbseq	r2, r6, r0
    1898:	72100000 	andsvc	r0, r0, #0
    189c:	0100776f 	tsteq	r0, pc, ror #14
    18a0:	00002162 	andeq	r2, r0, r2, ror #2
    18a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    18a8:	0016480f 	andseq	r4, r6, pc, lsl #16
    18ac:	00006420 	andeq	r6, r0, r0, lsr #8
    18b0:	0a621100 	beq	1885cb8 <startup-0x1e77a348>
    18b4:	64010000 	strvs	r0, [r1], #-0
    18b8:	00000021 	andeq	r0, r0, r1, lsr #32
    18bc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    18c0:	170e0000 	strne	r0, [lr, -r0]
    18c4:	0100000a 	tsteq	r0, sl
    18c8:	00003a47 	andeq	r3, r0, r7, asr #20
    18cc:	0015b600 	andseq	fp, r5, r0, lsl #12
    18d0:	00008620 	andeq	r8, r0, r0, lsr #12
    18d4:	d39c0100 	orrsle	r0, ip, #0, 2
    18d8:	0f000001 	svceq	0x00000001
    18dc:	200015bc 			; <UNDEFINED> instruction: 0x200015bc
    18e0:	00000076 	andeq	r0, r0, r6, ror r0
    18e4:	776f7210 			; <UNDEFINED> instruction: 0x776f7210
    18e8:	21480100 	mrscs	r0, (UNDEF: 88)
    18ec:	02000000 	andeq	r0, r0, #0
    18f0:	c20f7491 	andgt	r7, pc, #-1862270976	; 0x91000000
    18f4:	64200015 	strtvs	r0, [r0], #-21	; 0xffffffeb
    18f8:	11000000 	mrsne	r0, (UNDEF: 0)
    18fc:	00000a62 	andeq	r0, r0, r2, ror #20
    1900:	00214a01 	eoreq	r4, r1, r1, lsl #20
    1904:	91020000 	mrsls	r0, (UNDEF: 2)
    1908:	00000070 	andeq	r0, r0, r0, ror r0
    190c:	000a690e 	andeq	r6, sl, lr, lsl #18
    1910:	3a2d0100 	bcc	b41d18 <startup-0x1f4be2e8>
    1914:	30000000 	andcc	r0, r0, r0
    1918:	86200015 			; <UNDEFINED> instruction: 0x86200015
    191c:	01000000 	mrseq	r0, (UNDEF: 0)
    1920:	00021d9c 	muleq	r2, ip, sp
    1924:	15360f00 	ldrne	r0, [r6, #-3840]!	; 0xfffff100
    1928:	00762000 	rsbseq	r2, r6, r0
    192c:	72100000 	andsvc	r0, r0, #0
    1930:	0100776f 	tsteq	r0, pc, ror #14
    1934:	0000212e 	andeq	r2, r0, lr, lsr #2
    1938:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    193c:	00153c0f 	andseq	r3, r5, pc, lsl #24
    1940:	00006420 	andeq	r6, r0, r0, lsr #8
    1944:	0a621100 	beq	1885d4c <startup-0x1e77a2b4>
    1948:	30010000 	andcc	r0, r1, r0
    194c:	00000021 	andeq	r0, r0, r1, lsr #32
    1950:	00709102 	rsbseq	r9, r0, r2, lsl #2
    1954:	6e120000 	cdpvs	0, 1, cr0, cr2, cr0, {0}
    1958:	0100000a 	tsteq	r0, sl
    195c:	00002123 	andeq	r2, r0, r3, lsr #2
    1960:	0014f000 	andseq	pc, r4, r0
    1964:	00004020 	andeq	r4, r0, r0, lsr #32
    1968:	4d9c0100 	ldfmis	f0, [ip]
    196c:	0f000002 	svceq	0x00000002
    1970:	200014f6 	strdcs	r1, [r0], -r6
    1974:	0000002a 	andeq	r0, r0, sl, lsr #32
    1978:	01006910 	tsteq	r0, r0, lsl r9
    197c:	00002124 	andeq	r2, r0, r4, lsr #2
    1980:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1984:	54120000 	ldrpl	r0, [r2], #-0
    1988:	0100000a 	tsteq	r0, sl
    198c:	0000211a 	andeq	r2, r0, sl, lsl r1
    1990:	0014b000 	andseq	fp, r4, r0
    1994:	00004020 	andeq	r4, r0, r0, lsr #32
    1998:	7d9c0100 	ldfvcs	f0, [ip]
    199c:	0f000002 	svceq	0x00000002
    19a0:	200014b6 			; <UNDEFINED> instruction: 0x200014b6
    19a4:	0000002a 	andeq	r0, r0, sl, lsr #32
    19a8:	01006910 	tsteq	r0, r0, lsl r9
    19ac:	0000211b 	andeq	r2, r0, fp, lsl r1
    19b0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    19b4:	7c120000 	ldcvc	0, cr0, [r2], {-0}
    19b8:	0100000a 	tsteq	r0, sl
    19bc:	00002111 	andeq	r2, r0, r1, lsl r1
    19c0:	00147000 	andseq	r7, r4, r0
    19c4:	00004020 	andeq	r4, r0, r0, lsr #32
    19c8:	ad9c0100 	ldfges	f0, [ip]
    19cc:	0f000002 	svceq	0x00000002
    19d0:	20001476 	andcs	r1, r0, r6, ror r4
    19d4:	0000002a 	andeq	r0, r0, sl, lsr #32
    19d8:	01006910 	tsteq	r0, r0, lsl r9
    19dc:	00002112 	andeq	r2, r0, r2, lsl r1
    19e0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    19e4:	48130000 	ldmdami	r3, {}	; <UNPREDICTABLE>
    19e8:	0100000a 	tsteq	r0, sl
    19ec:	0014300b 	andseq	r3, r4, fp
    19f0:	00004020 	andeq	r4, r0, r0, lsr #32
    19f4:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    19f8:	00776f72 	rsbseq	r6, r7, r2, ror pc
    19fc:	00210b01 	eoreq	r0, r1, r1, lsl #22
    1a00:	91020000 	mrsls	r0, (UNDEF: 2)
    1a04:	de000074 	mcrle	0, 0, r0, cr0, cr4, {3}
    1a08:	04000006 	streq	r0, [r0], #-6
    1a0c:	00078200 	andeq	r8, r7, r0, lsl #4
    1a10:	21010400 	tstcs	r1, r0, lsl #8
    1a14:	0c000001 	stceq	0, cr0, [r0], {1}
    1a18:	00000b57 	andeq	r0, r0, r7, asr fp
    1a1c:	200016c4 	andcs	r1, r0, r4, asr #13
    1a20:	00000a88 	andeq	r0, r0, r8, lsl #21
    1a24:	00000677 	andeq	r0, r0, r7, ror r6
    1a28:	69050402 	stmdbvs	r5, {r1, sl}
    1a2c:	0300746e 	movweq	r7, #1134	; 0x46e
    1a30:	04870601 	streq	r0, [r7], #1537	; 0x601
    1a34:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
    1a38:	03000007 	movweq	r0, #7
    1a3c:	00003a0f 	andeq	r3, r0, pc, lsl #20
    1a40:	08010300 	stmdaeq	r1, {r8, r9}
    1a44:	00000485 	andeq	r0, r0, r5, lsl #9
    1a48:	a1050203 	tstge	r5, r3, lsl #4
    1a4c:	03000004 	movweq	r0, #4
    1a50:	03810702 	orreq	r0, r1, #524288	; 0x80000
    1a54:	04030000 	streq	r0, [r3], #-0
    1a58:	00007307 	andeq	r7, r0, r7, lsl #6
    1a5c:	002f0500 	eoreq	r0, pc, r0, lsl #10
    1a60:	00610000 	rsbeq	r0, r1, r0
    1a64:	00060000 	andeq	r0, r6, r0
    1a68:	0008ee07 	andeq	lr, r8, r7, lsl #28
    1a6c:	560a0400 	strpl	r0, [sl], -r0, lsl #8
    1a70:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1a74:	890a0202 	stmdbhi	sl, {r1, r9}
    1a78:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1a7c:	0b020078 	bleq	81c64 <startup-0x1ff7e39c>
    1a80:	0000003a 	andeq	r0, r0, sl, lsr r0
    1a84:	00790900 	rsbseq	r0, r9, r0, lsl #18
    1a88:	003a0b02 	eorseq	r0, sl, r2, lsl #22
    1a8c:	00010000 	andeq	r0, r1, r0
    1a90:	00026604 	andeq	r6, r2, r4, lsl #12
    1a94:	6c0c0200 	sfmvs	f0, 4, [ip], {-0}
    1a98:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1a9c:	cc0e0240 	sfmgt	f0, 4, [lr], {64}	; 0x40
    1aa0:	0a000000 	beq	1aa8 <startup-0x1fffe558>
    1aa4:	00000105 	andeq	r0, r0, r5, lsl #2
    1aa8:	00210f02 	eoreq	r0, r1, r2, lsl #30
    1aac:	0a000000 	beq	1ab4 <startup-0x1fffe54c>
    1ab0:	00000623 	andeq	r0, r0, r3, lsr #12
    1ab4:	00211002 	eoreq	r1, r1, r2
    1ab8:	0a040000 	beq	101ac0 <startup-0x1fefe540>
    1abc:	0000067f 	andeq	r0, r0, pc, ror r6
    1ac0:	00211102 	eoreq	r1, r1, r2, lsl #2
    1ac4:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    1ac8:	02007870 	andeq	r7, r0, #112, 16	; 0x700000
    1acc:	0000cc12 	andeq	ip, r0, r2, lsl ip
    1ad0:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    1ad4:	00000089 	andeq	r0, r0, r9, lsl #1
    1ad8:	000000dc 	ldrdeq	r0, [r0], -ip
    1adc:	0000dc0b 	andeq	sp, r0, fp, lsl #24
    1ae0:	03001800 	movweq	r1, #2048	; 0x800
    1ae4:	03ec0704 	mvneq	r0, #4, 14	; 0x100000
    1ae8:	3a040000 	bcc	101af0 <startup-0x1fefe510>
    1aec:	02000004 	andeq	r0, r0, #4
    1af0:	0000ee13 	andeq	lr, r0, r3, lsl lr
    1af4:	94040c00 	strls	r0, [r4], #-3072	; 0xfffff400
    1af8:	0d000000 	stceq	0, cr0, [r0, #-0]
    1afc:	000005bf 			; <UNDEFINED> instruction: 0x000005bf
    1b00:	8515022c 	ldrhi	r0, [r5, #-556]	; 0xfffffdd4
    1b04:	09000001 	stmdbeq	r0, {r0}
    1b08:	006f6567 	rsbeq	r6, pc, r7, ror #10
    1b0c:	00e31602 	rsceq	r1, r3, r2, lsl #12
    1b10:	0a000000 	beq	1b18 <startup-0x1fffe4e8>
    1b14:	0000003f 	andeq	r0, r0, pc, lsr r0
    1b18:	00211702 	eoreq	r1, r1, r2, lsl #14
    1b1c:	0a040000 	beq	101b24 <startup-0x1fefe4dc>
    1b20:	00000044 	andeq	r0, r0, r4, asr #32
    1b24:	00211702 	eoreq	r1, r1, r2, lsl #14
    1b28:	0a080000 	beq	201b30 <startup-0x1fdfe4d0>
    1b2c:	00000646 	andeq	r0, r0, r6, asr #12
    1b30:	00211802 	eoreq	r1, r1, r2, lsl #16
    1b34:	0a0c0000 	beq	301b3c <startup-0x1fcfe4c4>
    1b38:	00000659 	andeq	r0, r0, r9, asr r6
    1b3c:	00211802 	eoreq	r1, r1, r2, lsl #16
    1b40:	0a100000 	beq	401b48 <startup-0x1fbfe4b8>
    1b44:	0000047c 	andeq	r0, r0, ip, ror r4
    1b48:	00211902 	eoreq	r1, r1, r2, lsl #18
    1b4c:	0a140000 	beq	501b54 <startup-0x1fafe4ac>
    1b50:	00000294 	muleq	r0, r4, r2
    1b54:	00211a02 	eoreq	r1, r1, r2, lsl #20
    1b58:	0a180000 	beq	601b60 <startup-0x1f9fe4a0>
    1b5c:	000005e9 	andeq	r0, r0, r9, ror #11
    1b60:	01961b02 	orrseq	r1, r6, r2, lsl #22
    1b64:	0a1c0000 	beq	701b6c <startup-0x1f8fe494>
    1b68:	000006fa 	strdeq	r0, [r0], -sl
    1b6c:	01961c02 	orrseq	r1, r6, r2, lsl #24
    1b70:	0a200000 	beq	801b78 <startup-0x1f7fe488>
    1b74:	000000c5 	andeq	r0, r0, r5, asr #1
    1b78:	01961d02 	orrseq	r1, r6, r2, lsl #26
    1b7c:	0a240000 	beq	901b84 <startup-0x1f6fe47c>
    1b80:	00000080 	andeq	r0, r0, r0, lsl #1
    1b84:	01b11e02 			; <UNDEFINED> instruction: 0x01b11e02
    1b88:	00280000 	eoreq	r0, r8, r0
    1b8c:	0001900e 	andeq	r9, r1, lr
    1b90:	01900f00 	orrseq	r0, r0, r0, lsl #30
    1b94:	0c000000 	stceq	0, cr0, [r0], {-0}
    1b98:	0000f404 	andeq	pc, r0, r4, lsl #8
    1b9c:	85040c00 	strhi	r0, [r4, #-3072]	; 0xfffff400
    1ba0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1ba4:	000001b1 			; <UNDEFINED> instruction: 0x000001b1
    1ba8:	0001900f 	andeq	r9, r1, pc
    1bac:	00210f00 	eoreq	r0, r1, r0, lsl #30
    1bb0:	210f0000 	mrscs	r0, CPSR
    1bb4:	00000000 	andeq	r0, r0, r0
    1bb8:	019c040c 	orrseq	r0, ip, ip, lsl #8
    1bbc:	02040000 	andeq	r0, r4, #0
    1bc0:	02000004 	andeq	r0, r0, #4
    1bc4:	0000f41f 	andeq	pc, r0, pc, lsl r4	; <UNPREDICTABLE>
    1bc8:	022d0700 	eoreq	r0, sp, #0, 14
    1bcc:	21020000 	mrscs	r0, (UNDEF: 2)
    1bd0:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    1bd4:	00056f07 	andeq	r6, r5, r7, lsl #30
    1bd8:	b7220200 	strlt	r0, [r2, -r0, lsl #4]!
    1bdc:	07000001 	streq	r0, [r0, -r1]
    1be0:	0000023b 	andeq	r0, r0, fp, lsr r2
    1be4:	01b72302 			; <UNDEFINED> instruction: 0x01b72302
    1be8:	98100000 	ldmdals	r0, {}	; <UNPREDICTABLE>
    1bec:	1c090101 	stfnes	f0, [r9], {1}
    1bf0:	0a000002 	beq	1c00 <startup-0x1fffe400>
    1bf4:	00000105 	andeq	r0, r0, r5, lsl #2
    1bf8:	00210a01 	eoreq	r0, r1, r1, lsl #20
    1bfc:	0a000000 	beq	1c04 <startup-0x1fffe3fc>
    1c00:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c04:	00210b01 	eoreq	r0, r1, r1, lsl #22
    1c08:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1c0c:	01007870 	tsteq	r0, r0, ror r8
    1c10:	00021c0c 	andeq	r1, r2, ip, lsl #24
    1c14:	d30a0800 	movwle	r0, #43008	; 0xa800
    1c18:	0100000b 	tsteq	r0, fp
    1c1c:	00021c0d 	andeq	r1, r2, sp, lsl #24
    1c20:	0500d000 	streq	sp, [r0, #-0]
    1c24:	00000089 	andeq	r0, r0, r9, lsl #1
    1c28:	0000022c 	andeq	r0, r0, ip, lsr #4
    1c2c:	0000dc0b 	andeq	sp, r0, fp, lsl #24
    1c30:	04006300 	streq	r6, [r0], #-768	; 0xfffffd00
    1c34:	00000aea 	andeq	r0, r0, sl, ror #21
    1c38:	01e30e01 	mvneq	r0, r1, lsl #28
    1c3c:	e9040000 	stmdb	r4, {}	; <UNPREDICTABLE>
    1c40:	0100000a 	tsteq	r0, sl
    1c44:	0002420e 	andeq	r4, r2, lr, lsl #4
    1c48:	e3040c00 	movw	r0, #19456	; 0x4c00
    1c4c:	11000001 	tstne	r0, r1
    1c50:	00000b30 	andeq	r0, r0, r0, lsr fp
    1c54:	02371001 	eorseq	r1, r7, #1
    1c58:	03050000 	movweq	r0, #20480	; 0x5000
    1c5c:	2000665c 	andcs	r6, r0, ip, asr r6
    1c60:	000bd811 	andeq	sp, fp, r1, lsl r8
    1c64:	89110100 	ldmdbhi	r1, {r8}
    1c68:	05000000 	streq	r0, [r0, #-0]
    1c6c:	00665803 	rsbeq	r5, r6, r3, lsl #16
    1c70:	0b1b1220 	bleq	6c64f8 <startup-0x1f939b08>
    1c74:	13010000 	movwne	r0, #4096	; 0x1000
    1c78:	0000022c 	andeq	r0, r0, ip, lsr #4
    1c7c:	66680305 	strbtvs	r0, [r8], -r5, lsl #6
    1c80:	22122000 	andscs	r2, r2, #0
    1c84:	0100000b 	tsteq	r0, fp
    1c88:	00022c22 	andeq	r2, r2, r2, lsr #24
    1c8c:	00030500 	andeq	r0, r3, r0, lsl #10
    1c90:	12200068 	eorne	r0, r0, #104	; 0x68
    1c94:	00000b29 	andeq	r0, r0, r9, lsr #22
    1c98:	022c3101 	eoreq	r3, ip, #1073741824	; 0x40000000
    1c9c:	03050000 	movweq	r0, #20480	; 0x5000
    1ca0:	20006998 	mulcs	r0, r8, r9
    1ca4:	000b3d12 	andeq	r3, fp, r2, lsl sp
    1ca8:	2c390100 	ldfcss	f0, [r9], #-0
    1cac:	05000002 	streq	r0, [r0, #-2]
    1cb0:	006b3003 	rsbeq	r3, fp, r3
    1cb4:	0b8d1320 	bleq	fe34693c <_global_impure_ptr+0xde33f4ac>
    1cb8:	1c010000 	stcne	0, cr0, [r1], {-0}
    1cbc:	001f8401 	andseq	r8, pc, r1, lsl #8
    1cc0:	0001c820 	andeq	ip, r1, r0, lsr #16
    1cc4:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
    1cc8:	14000002 	strne	r0, [r0], #-2
    1ccc:	1d010069 	stcne	0, cr0, [r1, #-420]	; 0xfffffe5c
    1cd0:	00004f01 	andeq	r4, r0, r1, lsl #30
    1cd4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1cd8:	000bcb15 	andeq	ip, fp, r5, lsl fp
    1cdc:	011f0100 	tsteq	pc, r0, lsl #2
    1ce0:	00000021 	andeq	r0, r0, r1, lsr #32
    1ce4:	15709102 	ldrbne	r9, [r0, #-258]!	; 0xfffffefe
    1ce8:	00000aad 	andeq	r0, r0, sp, lsr #21
    1cec:	21012001 	tstcs	r1, r1
    1cf0:	02000000 	andeq	r0, r0, #0
    1cf4:	16006c91 			; <UNDEFINED> instruction: 0x16006c91
    1cf8:	00000ab2 			; <UNDEFINED> instruction: 0x00000ab2
    1cfc:	0e010d01 	cdpeq	13, 0, cr0, cr1, cr1, {0}
    1d00:	7620001f 			; <UNDEFINED> instruction: 0x7620001f
    1d04:	01000000 	mrseq	r0, (UNDEF: 0)
    1d08:	0003599c 	muleq	r3, ip, r9
    1d0c:	00781700 	rsbseq	r1, r8, r0, lsl #14
    1d10:	21010d01 	tstcs	r1, r1, lsl #26
    1d14:	02000000 	andeq	r0, r0, #0
    1d18:	79176491 	ldmdbvc	r7, {r0, r4, r7, sl, sp, lr}
    1d1c:	010d0100 	mrseq	r0, (UNDEF: 29)
    1d20:	00000021 	andeq	r0, r0, r1, lsr #32
    1d24:	14609102 	strbtne	r9, [r0], #-258	; 0xfffffefe
    1d28:	0f010069 	svceq	0x00010069
    1d2c:	00004f01 	andeq	r4, r0, r1, lsl #30
    1d30:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1d34:	01006a14 	tsteq	r0, r4, lsl sl
    1d38:	004f010f 	subeq	r0, pc, pc, lsl #2
    1d3c:	91020000 	mrsls	r0, (UNDEF: 2)
    1d40:	06991570 			; <UNDEFINED> instruction: 0x06991570
    1d44:	12010000 	andne	r0, r1, #0
    1d48:	00002101 	andeq	r2, r0, r1, lsl #2
    1d4c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1d50:	00022815 	andeq	r2, r2, r5, lsl r8
    1d54:	01130100 	tsteq	r3, r0, lsl #2
    1d58:	00000021 	andeq	r0, r0, r1, lsr #32
    1d5c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    1d60:	000b0516 	andeq	r0, fp, r6, lsl r5
    1d64:	01000100 	mrseq	r0, (UNDEF: 16)
    1d68:	20001e5c 	andcs	r1, r0, ip, asr lr
    1d6c:	000000b2 	strheq	r0, [r0], -r2
    1d70:	039b9c01 	orrseq	r9, fp, #256	; 0x100
    1d74:	cb180000 	blgt	601d7c <startup-0x1f9fe284>
    1d78:	0100000b 	tsteq	r0, fp
    1d7c:	00210100 	eoreq	r0, r1, r0, lsl #2
    1d80:	91020000 	mrsls	r0, (UNDEF: 2)
    1d84:	0aad186c 	beq	feb47f3c <_global_impure_ptr+0xdeb40aac>
    1d88:	00010000 	andeq	r0, r1, r0
    1d8c:	00002101 	andeq	r2, r0, r1, lsl #2
    1d90:	68910200 	ldmvs	r1, {r9}
    1d94:	01006914 	tsteq	r0, r4, lsl r9
    1d98:	004f0101 	subeq	r0, pc, r1, lsl #2
    1d9c:	91020000 	mrsls	r0, (UNDEF: 2)
    1da0:	dc190074 	ldcle	0, cr0, [r9], {116}	; 0x74
    1da4:	0100000a 	tsteq	r0, sl
    1da8:	001e08fa 			; <UNDEFINED> instruction: 0x001e08fa
    1dac:	00005420 	andeq	r5, r0, r0, lsr #8
    1db0:	c79c0100 	ldrgt	r0, [ip, r0, lsl #2]
    1db4:	1a000003 	bne	1dc8 <startup-0x1fffe238>
    1db8:	20001e12 	andcs	r1, r0, r2, lsl lr
    1dbc:	0000003c 	andeq	r0, r0, ip, lsr r0
    1dc0:	0100691b 	tsteq	r0, fp, lsl r9
    1dc4:	000021fc 	strdeq	r2, [r0], -ip
    1dc8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1dcc:	871c0000 	ldrhi	r0, [ip, -r0]
    1dd0:	0100000a 	tsteq	r0, sl
    1dd4:	001d8aeb 	andseq	r8, sp, fp, ror #21
    1dd8:	00007e20 	andeq	r7, r0, r0, lsr #28
    1ddc:	299c0100 	ldmibcs	ip, {r8}
    1de0:	1d000004 	stcne	0, cr0, [r0, #-16]
    1de4:	eb010078 	bl	41fcc <startup-0x1ffbe034>
    1de8:	00000021 	andeq	r0, r0, r1, lsr #32
    1dec:	1d649102 	stfnep	f1, [r4, #-8]!
    1df0:	eb010079 	bl	41fdc <startup-0x1ffbe024>
    1df4:	00000021 	andeq	r0, r0, r1, lsr #32
    1df8:	1b609102 	blne	1826208 <startup-0x1e7d9df8>
    1dfc:	ec010069 	stc	0, cr0, [r1], {105}	; 0x69
    1e00:	0000004f 	andeq	r0, r0, pc, asr #32
    1e04:	1b749102 	blne	1d26214 <startup-0x1e2d9dec>
    1e08:	ec01006a 	stc	0, cr0, [r1], {106}	; 0x6a
    1e0c:	0000004f 	andeq	r0, r0, pc, asr #32
    1e10:	12709102 	rsbsne	r9, r0, #-2147483648	; 0x80000000
    1e14:	00000699 	muleq	r0, r9, r6
    1e18:	0021f001 	eoreq	pc, r1, r1
    1e1c:	91020000 	mrsls	r0, (UNDEF: 2)
    1e20:	0228126c 	eoreq	r1, r8, #108, 4	; 0xc0000006
    1e24:	f1010000 	setend	le
    1e28:	00000021 	andeq	r0, r0, r1, lsr #32
    1e2c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    1e30:	000af01c 	andeq	pc, sl, ip, lsl r0	; <UNPREDICTABLE>
    1e34:	04de0100 	ldrbeq	r0, [lr], #256	; 0x100
    1e38:	8620001d 			; <UNDEFINED> instruction: 0x8620001d
    1e3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e40:	00044b9c 	muleq	r4, ip, fp
    1e44:	00691b00 	rsbeq	r1, r9, r0, lsl #22
    1e48:	004fdf01 	subeq	sp, pc, r1, lsl #30
    1e4c:	91020000 	mrsls	r0, (UNDEF: 2)
    1e50:	b6190074 			; <UNDEFINED> instruction: 0xb6190074
    1e54:	0100000b 	tsteq	r0, fp
    1e58:	001c64cd 	andseq	r6, ip, sp, asr #9
    1e5c:	0000a020 	andeq	sl, r0, r0, lsr #32
    1e60:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    1e64:	1b000004 	blne	1e7c <startup-0x1fffe184>
    1e68:	ce010078 	mcrgt	0, 0, r0, cr1, cr8, {3}
    1e6c:	00000021 	andeq	r0, r0, r1, lsr #32
    1e70:	1b749102 	blne	1d26280 <startup-0x1e2d9d80>
    1e74:	cf010079 	svcgt	0x00010079
    1e78:	00000021 	andeq	r0, r0, r1, lsr #32
    1e7c:	1e709102 	expnes	f1, f2
    1e80:	d1010069 	tstle	r1, r9, rrx
    1e84:	0000004f 	andeq	r0, r0, pc, asr #32
    1e88:	01006a1e 	tsteq	r0, lr, lsl sl
    1e8c:	00004fd1 	ldrdeq	r4, [r0], -r1
    1e90:	06991200 	ldreq	r1, [r9], r0, lsl #4
    1e94:	d4010000 	strle	r0, [r1], #-0
    1e98:	00000021 	andeq	r0, r0, r1, lsr #32
    1e9c:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
    1ea0:	00000228 	andeq	r0, r0, r8, lsr #4
    1ea4:	0021d501 	eoreq	sp, r1, r1, lsl #10
    1ea8:	91020000 	mrsls	r0, (UNDEF: 2)
    1eac:	77190068 	ldrvc	r0, [r9, -r8, rrx]
    1eb0:	0100000b 	tsteq	r0, fp
    1eb4:	001a9eb0 			; <UNDEFINED> instruction: 0x001a9eb0
    1eb8:	0001c620 	andeq	ip, r1, r0, lsr #12
    1ebc:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
    1ec0:	1b000004 	blne	1ed8 <startup-0x1fffe128>
    1ec4:	b1010069 	tstlt	r1, r9, rrx
    1ec8:	0000004f 	andeq	r0, r0, pc, asr #32
    1ecc:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
    1ed0:	00000bcb 	andeq	r0, r0, fp, asr #23
    1ed4:	0021b301 	eoreq	fp, r1, r1, lsl #6
    1ed8:	91020000 	mrsls	r0, (UNDEF: 2)
    1edc:	0aad1270 	beq	feb468a4 <_global_impure_ptr+0xdeb3f414>
    1ee0:	b4010000 	strlt	r0, [r1], #-0
    1ee4:	00000021 	andeq	r0, r0, r1, lsr #32
    1ee8:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1eec:	000b441c 	andeq	r4, fp, ip, lsl r4
    1ef0:	2aa10100 	bcs	fe8422f8 <_global_impure_ptr+0xde83ae68>
    1ef4:	7420001a 	strtvc	r0, [r0], #-26	; 0xffffffe6
    1ef8:	01000000 	mrseq	r0, (UNDEF: 0)
    1efc:	0005479c 	muleq	r5, ip, r7
    1f00:	00781d00 	rsbseq	r1, r8, r0, lsl #26
    1f04:	0021a101 	eoreq	sl, r1, r1, lsl #2
    1f08:	91020000 	mrsls	r0, (UNDEF: 2)
    1f0c:	00791d64 	rsbseq	r1, r9, r4, ror #26
    1f10:	0021a101 	eoreq	sl, r1, r1, lsl #2
    1f14:	91020000 	mrsls	r0, (UNDEF: 2)
    1f18:	00691b60 	rsbeq	r1, r9, r0, ror #22
    1f1c:	004fa301 	subeq	sl, pc, r1, lsl #6
    1f20:	91020000 	mrsls	r0, (UNDEF: 2)
    1f24:	006a1b74 	rsbeq	r1, sl, r4, ror fp
    1f28:	004fa301 	subeq	sl, pc, r1, lsl #6
    1f2c:	91020000 	mrsls	r0, (UNDEF: 2)
    1f30:	06991270 			; <UNDEFINED> instruction: 0x06991270
    1f34:	a6010000 	strge	r0, [r1], -r0
    1f38:	00000021 	andeq	r0, r0, r1, lsr #32
    1f3c:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
    1f40:	00000228 	andeq	r0, r0, r8, lsr #4
    1f44:	0021a701 	eoreq	sl, r1, r1, lsl #14
    1f48:	91020000 	mrsls	r0, (UNDEF: 2)
    1f4c:	9a1c0068 	bls	7020f4 <startup-0x1f8fdf0c>
    1f50:	0100000a 	tsteq	r0, sl
    1f54:	00197894 	mulseq	r9, r4, r8
    1f58:	0000b220 	andeq	fp, r0, r0, lsr #4
    1f5c:	859c0100 	ldrhi	r0, [ip, #256]	; 0x100
    1f60:	1f000005 	svcne	0x00000005
    1f64:	00000bcb 	andeq	r0, r0, fp, asr #23
    1f68:	00219401 	eoreq	r9, r1, r1, lsl #8
    1f6c:	91020000 	mrsls	r0, (UNDEF: 2)
    1f70:	0aad1f6c 	beq	feb49d28 <_global_impure_ptr+0xdeb42898>
    1f74:	94010000 	strls	r0, [r1], #-0
    1f78:	00000021 	andeq	r0, r0, r1, lsr #32
    1f7c:	1b689102 	blne	1a2638c <startup-0x1e5d9c74>
    1f80:	95010069 	strls	r0, [r1, #-105]	; 0xffffff97
    1f84:	0000004f 	andeq	r0, r0, pc, asr #32
    1f88:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1f8c:	000ac819 	andeq	ip, sl, r9, lsl r8
    1f90:	248e0100 	strcs	r0, [lr], #256	; 0x100
    1f94:	54200019 	strtpl	r0, [r0], #-25	; 0xffffffe7
    1f98:	01000000 	mrseq	r0, (UNDEF: 0)
    1f9c:	0005b19c 	muleq	r5, ip, r1
    1fa0:	192e1a00 	stmdbne	lr!, {r9, fp, ip}
    1fa4:	003c2000 	eorseq	r2, ip, r0
    1fa8:	691b0000 	ldmdbvs	fp, {}	; <UNPREDICTABLE>
    1fac:	21900100 	orrscs	r0, r0, r0, lsl #2
    1fb0:	02000000 	andeq	r0, r0, #0
    1fb4:	00007491 	muleq	r0, r1, r4
    1fb8:	000ba01c 	andeq	sl, fp, ip, lsl r0
    1fbc:	a87f0100 	ldmdage	pc!, {r8}^	; <UNPREDICTABLE>
    1fc0:	7c200018 	stcvc	0, cr0, [r0], #-96	; 0xffffffa0
    1fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fc8:	0006139c 	muleq	r6, ip, r3
    1fcc:	00781d00 	rsbseq	r1, r8, r0, lsl #26
    1fd0:	00217f01 	eoreq	r7, r1, r1, lsl #30
    1fd4:	91020000 	mrsls	r0, (UNDEF: 2)
    1fd8:	00791d64 	rsbseq	r1, r9, r4, ror #26
    1fdc:	00217f01 	eoreq	r7, r1, r1, lsl #30
    1fe0:	91020000 	mrsls	r0, (UNDEF: 2)
    1fe4:	00691b60 	rsbeq	r1, r9, r0, ror #22
    1fe8:	004f8101 	subeq	r8, pc, r1, lsl #2
    1fec:	91020000 	mrsls	r0, (UNDEF: 2)
    1ff0:	006a1b74 	rsbeq	r1, sl, r4, ror fp
    1ff4:	004f8101 	subeq	r8, pc, r1, lsl #2
    1ff8:	91020000 	mrsls	r0, (UNDEF: 2)
    1ffc:	06991270 			; <UNDEFINED> instruction: 0x06991270
    2000:	84010000 	strhi	r0, [r1], #-0
    2004:	00000021 	andeq	r0, r0, r1, lsr #32
    2008:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
    200c:	00000228 	andeq	r0, r0, r8, lsr #4
    2010:	00218501 	eoreq	r8, r1, r1, lsl #10
    2014:	91020000 	mrsls	r0, (UNDEF: 2)
    2018:	d21c0068 	andsle	r0, ip, #104	; 0x68
    201c:	0100000a 	tsteq	r0, sl
    2020:	00180c6c 	andseq	r0, r8, ip, ror #24
    2024:	00009c20 	andeq	r9, r0, r0, lsr #24
    2028:	359c0100 	ldrcc	r0, [ip, #256]	; 0x100
    202c:	1b000006 	blne	204c <startup-0x1fffdfb4>
    2030:	6d010069 	stcvs	0, cr0, [r1, #-420]	; 0xfffffe5c
    2034:	0000004f 	andeq	r0, r0, pc, asr #32
    2038:	00749102 	rsbseq	r9, r4, r2, lsl #2
    203c:	000afd19 	andeq	pc, sl, r9, lsl sp	; <UNPREDICTABLE>
    2040:	6c5b0100 	ldfvse	f0, [fp], {-0}
    2044:	a0200017 	eorge	r0, r0, r7, lsl r0
    2048:	01000000 	mrseq	r0, (UNDEF: 0)
    204c:	0006919c 	muleq	r6, ip, r1
    2050:	00781b00 	rsbseq	r1, r8, r0, lsl #22
    2054:	00215c01 	eoreq	r5, r1, r1, lsl #24
    2058:	91020000 	mrsls	r0, (UNDEF: 2)
    205c:	00791b74 	rsbseq	r1, r9, r4, ror fp
    2060:	00215d01 	eoreq	r5, r1, r1, lsl #26
    2064:	91020000 	mrsls	r0, (UNDEF: 2)
    2068:	00691e70 	rsbeq	r1, r9, r0, ror lr
    206c:	004f5f01 	subeq	r5, pc, r1, lsl #30
    2070:	6a1e0000 	bvs	782078 <startup-0x1f87df88>
    2074:	4f5f0100 	svcmi	0x005f0100
    2078:	12000000 	andne	r0, r0, #0
    207c:	00000699 	muleq	r0, r9, r6
    2080:	00216201 	eoreq	r6, r1, r1, lsl #4
    2084:	91020000 	mrsls	r0, (UNDEF: 2)
    2088:	0228126c 	eoreq	r1, r8, #108, 4	; 0xc0000006
    208c:	63010000 	movwvs	r0, #4096	; 0x1000
    2090:	00000021 	andeq	r0, r0, r1, lsr #32
    2094:	00689102 	rsbeq	r9, r8, r2, lsl #2
    2098:	000bc119 	andeq	ip, fp, r9, lsl r1
    209c:	28560100 	ldmdacs	r6, {r8}^
    20a0:	44200017 	strtmi	r0, [r0], #-23	; 0xffffffe9
    20a4:	01000000 	mrseq	r0, (UNDEF: 0)
    20a8:	0006c19c 	muleq	r6, ip, r1
    20ac:	00721d00 	rsbseq	r1, r2, r0, lsl #26
    20b0:	00215601 	eoreq	r5, r1, r1, lsl #12
    20b4:	91020000 	mrsls	r0, (UNDEF: 2)
    20b8:	6f641b6c 	svcvs	0x00641b6c
    20bc:	57010074 	smlsdxpl	r1, r4, r0, r0
    20c0:	00000021 	andeq	r0, r0, r1, lsr #32
    20c4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    20c8:	000baa20 	andeq	sl, fp, r0, lsr #20
    20cc:	c4420100 	strbgt	r0, [r2], #-256	; 0xffffff00
    20d0:	64200016 	strtvs	r0, [r0], #-22	; 0xffffffea
    20d4:	01000000 	mrseq	r0, (UNDEF: 0)
    20d8:	0a941f9c 	beq	fe509f50 <_global_impure_ptr+0xde502ac0>
    20dc:	42010000 	andmi	r0, r1, #0
    20e0:	00000021 	andeq	r0, r0, r1, lsr #32
    20e4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    20e8:	000e6000 	andeq	r6, lr, r0
    20ec:	5a000400 	bpl	30f4 <startup-0x1fffcf0c>
    20f0:	04000009 	streq	r0, [r0], #-9
    20f4:	00012101 	andeq	r2, r1, r1, lsl #2
    20f8:	0cca0c00 	stcleq	12, cr0, [sl], {0}
    20fc:	034a0000 	movteq	r0, #40960	; 0xa000
    2100:	214c0000 	mrscs	r0, (UNDEF: 76)
    2104:	053c2000 	ldreq	r2, [ip, #-0]!
    2108:	0a440000 	beq	1102110 <startup-0x1eefdef0>
    210c:	04020000 	streq	r0, [r2], #-0
    2110:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2114:	07040300 	streq	r0, [r4, -r0, lsl #6]
    2118:	00000073 	andeq	r0, r0, r3, ror r0
    211c:	87060103 	strhi	r0, [r6, -r3, lsl #2]
    2120:	03000004 	movweq	r0, #4
    2124:	04850801 	streq	r0, [r5], #2049	; 0x801
    2128:	02030000 	andeq	r0, r3, #0
    212c:	0004a105 	andeq	sl, r4, r5, lsl #2
    2130:	07020300 	streq	r0, [r2, -r0, lsl #6]
    2134:	00000381 	andeq	r0, r0, r1, lsl #7
    2138:	d8050403 	stmdale	r5, {r0, r1, sl}
    213c:	03000000 	movweq	r0, #0
    2140:	006e0704 	rsbeq	r0, lr, r4, lsl #14
    2144:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2148:	0000d305 	andeq	sp, r0, r5, lsl #6
    214c:	07080300 	streq	r0, [r8, -r0, lsl #6]
    2150:	00000069 	andeq	r0, r0, r9, rrx
    2154:	0003c404 	andeq	ip, r3, r4, lsl #8
    2158:	76220200 	strtvc	r0, [r2], -r0, lsl #4
    215c:	05000000 	streq	r0, [r0, #-0]
    2160:	00007c04 	andeq	r7, r0, r4, lsl #24
    2164:	055a0600 	ldrbeq	r0, [sl, #-1536]	; 0xfffffa00
    2168:	4f040000 	svcmi	0x00040000
    216c:	03000004 	movweq	r0, #4
    2170:	00004f2c 	andeq	r4, r0, ip, lsr #30
    2174:	057d0400 	ldrbeq	r0, [sp, #-1024]!	; 0xfffffc00
    2178:	72030000 	andvc	r0, r3, #0
    217c:	0000004f 	andeq	r0, r0, pc, asr #32
    2180:	0003d307 	andeq	sp, r3, r7, lsl #6
    2184:	01650400 	cmneq	r5, r0, lsl #8
    2188:	0000002c 	andeq	r0, r0, ip, lsr #32
    218c:	a6030408 	strge	r0, [r3], -r8, lsl #8
    2190:	000000c2 	andeq	r0, r0, r2, asr #1
    2194:	0003be09 	andeq	fp, r3, r9, lsl #28
    2198:	97a80300 	strls	r0, [r8, r0, lsl #6]!
    219c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    21a0:	0000033b 	andeq	r0, r0, fp, lsr r3
    21a4:	00c2a903 	sbceq	sl, r2, r3, lsl #18
    21a8:	0a000000 	beq	21b0 <startup-0x1fffde50>
    21ac:	0000003a 	andeq	r0, r0, sl, lsr r0
    21b0:	000000d2 	ldrdeq	r0, [r0], -r2
    21b4:	0000d20b 	andeq	sp, r0, fp, lsl #4
    21b8:	03000300 	movweq	r0, #768	; 0x300
    21bc:	03ec0704 	mvneq	r0, #4, 14	; 0x100000
    21c0:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    21c4:	00faa303 	rscseq	sl, sl, r3, lsl #6
    21c8:	520d0000 	andpl	r0, sp, #0
    21cc:	03000005 	movweq	r0, #5
    21d0:	000025a5 	andeq	r2, r0, r5, lsr #11
    21d4:	610d0000 	mrsvs	r0, (UNDEF: 13)
    21d8:	03000005 	movweq	r0, #5
    21dc:	0000a3aa 	andeq	sl, r0, sl, lsr #7
    21e0:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
    21e4:	000004c9 	andeq	r0, r0, r9, asr #9
    21e8:	00d9ab03 	sbcseq	sl, r9, r3, lsl #22
    21ec:	e7040000 	str	r0, [r4, -r0]
    21f0:	03000002 	movweq	r0, #2
    21f4:	00006baf 	andeq	r6, r0, pc, lsr #23
    21f8:	05040e00 	streq	r0, [r4, #-3584]	; 0xfffff200
    21fc:	00011804 	andeq	r1, r1, r4, lsl #16
    2200:	08010300 	stmdaeq	r1, {r8, r9}
    2204:	0000048e 	andeq	r0, r0, lr, lsl #9
    2208:	0001180f 	andeq	r1, r1, pc, lsl #16
    220c:	05d40400 	ldrbeq	r0, [r4, #1024]	; 0x400
    2210:	16050000 	strne	r0, [r5], -r0
    2214:	00000056 	andeq	r0, r0, r6, asr r0
    2218:	0002f810 	andeq	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
    221c:	2f051800 	svccs	0x00051800
    2220:	00000182 	andeq	r0, r0, r2, lsl #3
    2224:	0004f50d 	andeq	pc, r4, sp, lsl #10
    2228:	82310500 	eorshi	r0, r1, #0, 10
    222c:	00000001 	andeq	r0, r0, r1
    2230:	006b5f11 	rsbeq	r5, fp, r1, lsl pc
    2234:	00253205 	eoreq	r3, r5, r5, lsl #4
    2238:	0d040000 	stceq	0, cr0, [r4, #-0]
    223c:	0000053d 	andeq	r0, r0, sp, lsr r5
    2240:	00253205 	eoreq	r3, r5, r5, lsl #4
    2244:	0d080000 	stceq	0, cr0, [r8, #-0]
    2248:	000002c4 	andeq	r0, r0, r4, asr #5
    224c:	00253205 	eoreq	r3, r5, r5, lsl #4
    2250:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    2254:	0000060e 	andeq	r0, r0, lr, lsl #12
    2258:	00253205 	eoreq	r3, r5, r5, lsl #4
    225c:	11100000 	tstne	r0, r0
    2260:	0500785f 	streq	r7, [r0, #-2143]	; 0xfffff7a1
    2264:	00018833 	andeq	r8, r1, r3, lsr r8
    2268:	05001400 	streq	r1, [r0, #-1024]	; 0xfffffc00
    226c:	00012f04 	andeq	r2, r1, r4, lsl #30
    2270:	01240a00 			; <UNDEFINED> instruction: 0x01240a00
    2274:	01980000 	orrseq	r0, r8, r0
    2278:	d20b0000 	andle	r0, fp, #0
    227c:	00000000 	andeq	r0, r0, r0
    2280:	03361000 	teqeq	r6, #0
    2284:	05240000 	streq	r0, [r4, #-0]!
    2288:	00021137 	andeq	r1, r2, r7, lsr r1
    228c:	00ca0d00 	sbceq	r0, sl, r0, lsl #26
    2290:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    2294:	00000025 	andeq	r0, r0, r5, lsr #32
    2298:	05850d00 	streq	r0, [r5, #3328]	; 0xd00
    229c:	3a050000 	bcc	1422a4 <startup-0x1febdd5c>
    22a0:	00000025 	andeq	r0, r0, r5, lsr #32
    22a4:	01b90d04 			; <UNDEFINED> instruction: 0x01b90d04
    22a8:	3b050000 	blcc	1422b0 <startup-0x1febdd50>
    22ac:	00000025 	andeq	r0, r0, r5, lsr #32
    22b0:	06a30d08 	strteq	r0, [r3], r8, lsl #26
    22b4:	3c050000 	stccc	0, cr0, [r5], {-0}
    22b8:	00000025 	andeq	r0, r0, r5, lsr #32
    22bc:	04290d0c 	strteq	r0, [r9], #-3340	; 0xfffff2f4
    22c0:	3d050000 	stccc	0, cr0, [r5, #-0]
    22c4:	00000025 	andeq	r0, r0, r5, lsr #32
    22c8:	03e20d10 	mvneq	r0, #16, 26	; 0x400
    22cc:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    22d0:	00000025 	andeq	r0, r0, r5, lsr #32
    22d4:	06130d14 			; <UNDEFINED> instruction: 0x06130d14
    22d8:	3f050000 	svccc	0x00050000
    22dc:	00000025 	andeq	r0, r0, r5, lsr #32
    22e0:	04ab0d18 	strteq	r0, [fp], #3352	; 0xd18
    22e4:	40050000 	andmi	r0, r5, r0
    22e8:	00000025 	andeq	r0, r0, r5, lsr #32
    22ec:	065e0d1c 			; <UNDEFINED> instruction: 0x065e0d1c
    22f0:	41050000 	mrsmi	r0, (UNDEF: 5)
    22f4:	00000025 	andeq	r0, r0, r5, lsr #32
    22f8:	c8120020 	ldmdagt	r2, {r5}
    22fc:	08000001 	stmdaeq	r0, {r0}
    2300:	514a0501 	cmppl	sl, r1, lsl #10
    2304:	0d000002 	stceq	0, cr0, [r0, #-8]
    2308:	0000028c 	andeq	r0, r0, ip, lsl #5
    230c:	02514b05 	subseq	r4, r1, #5120	; 0x1400
    2310:	0d000000 	stceq	0, cr0, [r0, #-0]
    2314:	00000000 	andeq	r0, r0, r0
    2318:	02514c05 	subseq	r4, r1, #1280	; 0x500
    231c:	13800000 	orrne	r0, r0, #0
    2320:	000005b6 			; <UNDEFINED> instruction: 0x000005b6
    2324:	01244e05 			; <UNDEFINED> instruction: 0x01244e05
    2328:	01000000 	mrseq	r0, (UNDEF: 0)
    232c:	00020f13 	andeq	r0, r2, r3, lsl pc
    2330:	24510500 	ldrbcs	r0, [r1], #-1280	; 0xfffffb00
    2334:	04000001 	streq	r0, [r0], #-1
    2338:	100a0001 	andne	r0, sl, r1
    233c:	61000001 	tstvs	r0, r1
    2340:	0b000002 	bleq	2350 <startup-0x1fffdcb0>
    2344:	000000d2 	ldrdeq	r0, [r0], -r2
    2348:	3212001f 	andscc	r0, r2, #31
    234c:	90000004 	andls	r0, r0, r4
    2350:	9f5d0501 	svcls	0x005d0501
    2354:	0d000002 	stceq	0, cr0, [r0, #-8]
    2358:	000004f5 	strdeq	r0, [r0], -r5
    235c:	029f5e05 	addseq	r5, pc, #5, 28	; 0x50
    2360:	0d000000 	stceq	0, cr0, [r0, #-0]
    2364:	0000050d 	andeq	r0, r0, sp, lsl #10
    2368:	00255f05 	eoreq	r5, r5, r5, lsl #30
    236c:	0d040000 	stceq	0, cr0, [r4, #-0]
    2370:	000002ac 	andeq	r0, r0, ip, lsr #5
    2374:	02a56105 	adceq	r6, r5, #1073741825	; 0x40000001
    2378:	0d080000 	stceq	0, cr0, [r8, #-0]
    237c:	000001c8 	andeq	r0, r0, r8, asr #3
    2380:	02116205 	andseq	r6, r1, #1342177280	; 0x50000000
    2384:	00880000 	addeq	r0, r8, r0
    2388:	02610405 	rsbeq	r0, r1, #83886080	; 0x5000000
    238c:	b50a0000 	strlt	r0, [sl, #-0]
    2390:	b5000002 	strlt	r0, [r0, #-2]
    2394:	0b000002 	bleq	23a4 <startup-0x1fffdc5c>
    2398:	000000d2 	ldrdeq	r0, [r0], -r2
    239c:	0405001f 	streq	r0, [r5], #-31	; 0xffffffe1
    23a0:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    23a4:	04b51014 	ldrteq	r1, [r5], #20
    23a8:	05080000 	streq	r0, [r8, #-0]
    23ac:	0002e175 	andeq	lr, r2, r5, ror r1
    23b0:	011b0d00 	tsteq	fp, r0, lsl #26
    23b4:	76050000 	strvc	r0, [r5], -r0
    23b8:	000002e1 	andeq	r0, r0, r1, ror #5
    23bc:	00120d00 	andseq	r0, r2, r0, lsl #26
    23c0:	77050000 	strvc	r0, [r5, -r0]
    23c4:	00000025 	andeq	r0, r0, r5, lsr #32
    23c8:	04050004 	streq	r0, [r5], #-4
    23cc:	0000003a 	andeq	r0, r0, sl, lsr r0
    23d0:	0004d410 	andeq	sp, r4, r0, lsl r4
    23d4:	b5056800 	strlt	r6, [r5, #-2048]	; 0xfffff800
    23d8:	00000411 	andeq	r0, r0, r1, lsl r4
    23dc:	00705f11 	rsbseq	r5, r0, r1, lsl pc
    23e0:	02e1b605 	rsceq	fp, r1, #5242880	; 0x500000
    23e4:	11000000 	mrsne	r0, (UNDEF: 0)
    23e8:	0500725f 	streq	r7, [r0, #-607]	; 0xfffffda1
    23ec:	000025b7 			; <UNDEFINED> instruction: 0x000025b7
    23f0:	5f110400 	svcpl	0x00110400
    23f4:	b8050077 	stmdalt	r5, {r0, r1, r2, r4, r5, r6}
    23f8:	00000025 	andeq	r0, r0, r5, lsr #32
    23fc:	02080d08 	andeq	r0, r8, #8, 26	; 0x200
    2400:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
    2404:	00000041 	andeq	r0, r0, r1, asr #32
    2408:	03620d0c 	cmneq	r2, #12, 26	; 0x300
    240c:	ba050000 	blt	142414 <startup-0x1febdbec>
    2410:	00000041 	andeq	r0, r0, r1, asr #32
    2414:	625f110e 	subsvs	r1, pc, #-2147483645	; 0x80000003
    2418:	bb050066 	bllt	1425b8 <startup-0x1febda48>
    241c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    2420:	008a0d10 	addeq	r0, sl, r0, lsl sp
    2424:	bc050000 	stclt	0, cr0, [r5], {-0}
    2428:	00000025 	andeq	r0, r0, r5, lsr #32
    242c:	01d60d18 	bicseq	r0, r6, r8, lsl sp
    2430:	c3050000 	movwgt	r0, #20480	; 0x5000
    2434:	00000110 	andeq	r0, r0, r0, lsl r1
    2438:	09e60d1c 	stmibeq	r6!, {r2, r3, r4, r8, sl, fp}^
    243c:	c5050000 	strgt	r0, [r5, #-0]
    2440:	0000056c 	andeq	r0, r0, ip, ror #10
    2444:	08e70d20 	stmiaeq	r7!, {r5, r8, sl, fp}^
    2448:	c7050000 	strgt	r0, [r5, -r0]
    244c:	00000596 	muleq	r0, r6, r5
    2450:	05690d24 	strbeq	r0, [r9, #-3364]!	; 0xfffff2dc
    2454:	ca050000 	bgt	14245c <startup-0x1febdba4>
    2458:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    245c:	06780d28 	ldrbteq	r0, [r8], -r8, lsr #26
    2460:	cb050000 	blgt	142468 <startup-0x1febdb98>
    2464:	000005d4 	ldrdeq	r0, [r0], -r4
    2468:	755f112c 	ldrbvc	r1, [pc, #-300]	; 2344 <startup-0x1fffdcbc>
    246c:	ce050062 	cdpgt	0, 0, cr0, cr5, cr2, {3}
    2470:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    2474:	755f1130 	ldrbvc	r1, [pc, #-304]	; 234c <startup-0x1fffdcb4>
    2478:	cf050070 	svcgt	0x00050070
    247c:	000002e1 	andeq	r0, r0, r1, ror #5
    2480:	755f1138 	ldrbvc	r1, [pc, #-312]	; 2350 <startup-0x1fffdcb0>
    2484:	d0050072 	andle	r0, r5, r2, ror r0
    2488:	00000025 	andeq	r0, r0, r5, lsr #32
    248c:	010f0d3c 	tsteq	pc, ip, lsr sp	; <UNPREDICTABLE>
    2490:	d3050000 	movwle	r0, #20480	; 0x5000
    2494:	000005da 	ldrdeq	r0, [r0], -sl
    2498:	064b0d40 	strbeq	r0, [fp], -r0, asr #26
    249c:	d4050000 	strle	r0, [r5], #-0
    24a0:	000005ea 	andeq	r0, r0, sl, ror #11
    24a4:	6c5f1143 	ldfvse	f1, [pc], {67}	; 0x43
    24a8:	d7050062 	strle	r0, [r5, -r2, rrx]
    24ac:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    24b0:	021e0d44 	andseq	r0, lr, #68, 26	; 0x1100
    24b4:	da050000 	ble	1424bc <startup-0x1febdb44>
    24b8:	00000025 	andeq	r0, r0, r5, lsr #32
    24bc:	024d0d4c 	subeq	r0, sp, #76, 26	; 0x1300
    24c0:	db050000 	blle	1424c8 <startup-0x1febdb38>
    24c4:	00000081 	andeq	r0, r0, r1, lsl #1
    24c8:	08ce0d50 	stmiaeq	lr, {r4, r6, r8, sl, fp}^
    24cc:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    24d0:	0000042f 	andeq	r0, r0, pc, lsr #8
    24d4:	055b0d54 	ldrbeq	r0, [fp, #-3412]	; 0xfffff2ac
    24d8:	e2050000 	and	r0, r5, #0
    24dc:	00000105 	andeq	r0, r0, r5, lsl #2
    24e0:	04e70d58 	strbteq	r0, [r7], #3416	; 0xd58
    24e4:	e4050000 	str	r0, [r5], #-0
    24e8:	000000fa 	strdeq	r0, [r0], -sl
    24ec:	03da0d5c 	bicseq	r0, sl, #92, 26	; 0x1700
    24f0:	e5050000 	str	r0, [r5, #-0]
    24f4:	00000025 	andeq	r0, r0, r5, lsr #32
    24f8:	25150064 	ldrcs	r0, [r5, #-100]	; 0xffffff9c
    24fc:	2f000000 	svccs	0x00000000
    2500:	16000004 	strne	r0, [r0], -r4
    2504:	0000042f 	andeq	r0, r0, pc, lsr #8
    2508:	00011016 	andeq	r1, r1, r6, lsl r0
    250c:	01121600 	tsteq	r2, r0, lsl #12
    2510:	25160000 	ldrcs	r0, [r6, #-0]
    2514:	00000000 	andeq	r0, r0, r0
    2518:	043a0405 	ldrteq	r0, [sl], #-1029	; 0xfffffbfb
    251c:	2f0f0000 	svccs	0x000f0000
    2520:	17000004 	strne	r0, [r0, -r4]
    2524:	00000545 	andeq	r0, r0, r5, asr #10
    2528:	39050428 	stmdbcc	r5, {r3, r5, sl}
    252c:	00056c02 	andeq	r6, r5, r2, lsl #24
    2530:	049a1800 	ldreq	r1, [sl], #2048	; 0x800
    2534:	3b050000 	blcc	14253c <startup-0x1febdac4>
    2538:	00002502 	andeq	r2, r0, r2, lsl #10
    253c:	17180000 	ldrne	r0, [r8, -r0]
    2540:	05000002 	streq	r0, [r0, #-2]
    2544:	06410240 	strbeq	r0, [r1], -r0, asr #4
    2548:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    254c:	00000342 	andeq	r0, r0, r2, asr #6
    2550:	41024005 	tstmi	r2, r5
    2554:	08000006 	stmdaeq	r0, {r1, r2}
    2558:	0002f018 	andeq	pc, r2, r8, lsl r0	; <UNPREDICTABLE>
    255c:	02400500 	subeq	r0, r0, #0, 10
    2560:	00000641 	andeq	r0, r0, r1, asr #12
    2564:	0508180c 	streq	r1, [r8, #-2060]	; 0xfffff7f4
    2568:	42050000 	andmi	r0, r5, #0
    256c:	00002502 	andeq	r2, r0, r2, lsl #10
    2570:	26181000 	ldrcs	r1, [r8], -r0
    2574:	05000000 	streq	r0, [r0, #-0]
    2578:	08230243 	stmdaeq	r3!, {r0, r1, r6, r9}
    257c:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    2580:	00000524 	andeq	r0, r0, r4, lsr #10
    2584:	25024605 	strcs	r4, [r2, #-1541]	; 0xfffff9fb
    2588:	30000000 	andcc	r0, r0, r0
    258c:	00051218 	andeq	r1, r5, r8, lsl r2
    2590:	02470500 	subeq	r0, r7, #0, 10
    2594:	00000838 	andeq	r0, r0, r8, lsr r8
    2598:	04441834 	strbeq	r1, [r4], #-2100	; 0xfffff7cc
    259c:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    25a0:	00002502 	andeq	r2, r0, r2, lsl #10
    25a4:	1a183800 	bne	6105ac <startup-0x1f9efa54>
    25a8:	05000005 	streq	r0, [r0, #-5]
    25ac:	0849024b 	stmdaeq	r9, {r0, r1, r3, r6, r9}^
    25b0:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    25b4:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    25b8:	82024e05 	andhi	r4, r2, #5, 28	; 0x50
    25bc:	40000001 	andmi	r0, r0, r1
    25c0:	00030f18 	andeq	r0, r3, r8, lsl pc
    25c4:	024f0500 	subeq	r0, pc, #0, 10
    25c8:	00000025 	andeq	r0, r0, r5, lsr #32
    25cc:	069e1844 	ldreq	r1, [lr], r4, asr #16
    25d0:	50050000 	andpl	r0, r5, r0
    25d4:	00018202 	andeq	r8, r1, r2, lsl #4
    25d8:	5c184800 	ldcpl	8, cr4, [r8], {-0}
    25dc:	05000004 	streq	r0, [r0, #-4]
    25e0:	084f0251 	stmdaeq	pc, {r0, r4, r6, r9}^	; <UNPREDICTABLE>
    25e4:	184c0000 	stmdane	ip, {}^	; <UNPREDICTABLE>
    25e8:	00000031 	andeq	r0, r0, r1, lsr r0
    25ec:	25025405 	strcs	r5, [r2, #-1029]	; 0xfffffbfb
    25f0:	50000000 	andpl	r0, r0, r0
    25f4:	00024518 	andeq	r4, r2, r8, lsl r5
    25f8:	02550500 	subseq	r0, r5, #0, 10
    25fc:	00000112 	andeq	r0, r0, r2, lsl r1
    2600:	04931854 	ldreq	r1, [r3], #2132	; 0x854
    2604:	78050000 	stmdavc	r5, {}	; <UNPREDICTABLE>
    2608:	00080102 	andeq	r0, r8, r2, lsl #2
    260c:	32195800 	andscc	r5, r9, #0, 16
    2610:	05000004 	streq	r0, [r0, #-4]
    2614:	029f027c 	addseq	r0, pc, #124, 4	; 0xc0000007
    2618:	01480000 	mrseq	r0, (UNDEF: 72)
    261c:	00039419 	andeq	r9, r3, r9, lsl r4
    2620:	027d0500 	rsbseq	r0, sp, #0, 10
    2624:	00000261 	andeq	r0, r0, r1, ror #4
    2628:	3c19014c 	ldfccs	f0, [r9], {76}	; 0x4c
    262c:	05000006 	streq	r0, [r0, #-6]
    2630:	08600281 	stmdaeq	r0!, {r0, r7, r9}^
    2634:	02dc0000 	sbcseq	r0, ip, #0
    2638:	0001de19 	andeq	sp, r1, r9, lsl lr
    263c:	02860500 	addeq	r0, r6, #0, 10
    2640:	00000606 	andeq	r0, r0, r6, lsl #12
    2644:	c31902e0 	tstgt	r9, #224, 4
    2648:	05000001 	streq	r0, [r0, #-1]
    264c:	086c0287 	stmdaeq	ip!, {r0, r1, r2, r7, r9}^
    2650:	02ec0000 	rsceq	r0, ip, #0
    2654:	11040500 	tstne	r4, r0, lsl #10
    2658:	15000004 	strne	r0, [r0, #-4]
    265c:	00000025 	andeq	r0, r0, r5, lsr #32
    2660:	00000590 	muleq	r0, r0, r5
    2664:	00042f16 	andeq	r2, r4, r6, lsl pc
    2668:	01101600 	tsteq	r0, r0, lsl #12
    266c:	90160000 	andsls	r0, r6, r0
    2670:	16000005 	strne	r0, [r0], -r5
    2674:	00000025 	andeq	r0, r0, r5, lsr #32
    2678:	1f040500 	svcne	0x00040500
    267c:	05000001 	streq	r0, [r0, #-1]
    2680:	00057204 	andeq	r7, r5, r4, lsl #4
    2684:	008c1500 	addeq	r1, ip, r0, lsl #10
    2688:	05ba0000 	ldreq	r0, [sl, #0]!
    268c:	2f160000 	svccs	0x00160000
    2690:	16000004 	strne	r0, [r0], -r4
    2694:	00000110 	andeq	r0, r0, r0, lsl r1
    2698:	00008c16 	andeq	r8, r0, r6, lsl ip
    269c:	00251600 	eoreq	r1, r5, r0, lsl #12
    26a0:	05000000 	streq	r0, [r0, #-0]
    26a4:	00059c04 	andeq	r9, r5, r4, lsl #24
    26a8:	00251500 	eoreq	r1, r5, r0, lsl #10
    26ac:	05d40000 	ldrbeq	r0, [r4]
    26b0:	2f160000 	svccs	0x00160000
    26b4:	16000004 	strne	r0, [r0], -r4
    26b8:	00000110 	andeq	r0, r0, r0, lsl r1
    26bc:	c0040500 	andgt	r0, r4, r0, lsl #10
    26c0:	0a000005 	beq	26dc <startup-0x1fffd924>
    26c4:	0000003a 	andeq	r0, r0, sl, lsr r0
    26c8:	000005ea 	andeq	r0, r0, sl, ror #11
    26cc:	0000d20b 	andeq	sp, r0, fp, lsl #4
    26d0:	0a000200 	beq	2ed8 <startup-0x1fffd128>
    26d4:	0000003a 	andeq	r0, r0, sl, lsr r0
    26d8:	000005fa 	strdeq	r0, [r0], -sl
    26dc:	0000d20b 	andeq	sp, r0, fp, lsl #4
    26e0:	07000000 	streq	r0, [r0, -r0]
    26e4:	000004c2 	andeq	r0, r0, r2, asr #9
    26e8:	e7011f05 	str	r1, [r1, -r5, lsl #30]
    26ec:	1a000002 	bne	26fc <startup-0x1fffd904>
    26f0:	0000061d 	andeq	r0, r0, sp, lsl r6
    26f4:	0123050c 			; <UNDEFINED> instruction: 0x0123050c
    26f8:	0000063b 	andeq	r0, r0, fp, lsr r6
    26fc:	0004f518 	andeq	pc, r4, r8, lsl r5	; <UNPREDICTABLE>
    2700:	01250500 			; <UNDEFINED> instruction: 0x01250500
    2704:	0000063b 	andeq	r0, r0, fp, lsr r6
    2708:	037a1800 	cmneq	sl, #0, 16
    270c:	26050000 	strcs	r0, [r5], -r0
    2710:	00002501 	andeq	r2, r0, r1, lsl #10
    2714:	bc180400 	cfldrslt	mvf0, [r8], {-0}
    2718:	05000004 	streq	r0, [r0, #-4]
    271c:	06410127 	strbeq	r0, [r1], -r7, lsr #2
    2720:	00080000 	andeq	r0, r8, r0
    2724:	06060405 	streq	r0, [r6], -r5, lsl #8
    2728:	04050000 	streq	r0, [r5], #-0
    272c:	000005fa 	strdeq	r0, [r0], -sl
    2730:	00001e1a 	andeq	r1, r0, sl, lsl lr
    2734:	3f050e00 	svccc	0x00050e00
    2738:	00067c01 	andeq	r7, r6, r1, lsl #24
    273c:	054c1800 	strbeq	r1, [ip, #-2048]	; 0xfffff800
    2740:	40050000 	andmi	r0, r5, r0
    2744:	00067c01 	andeq	r7, r6, r1, lsl #24
    2748:	8e180000 	cdphi	0, 1, cr0, cr8, cr0, {0}
    274c:	05000005 	streq	r0, [r0, #-5]
    2750:	067c0141 	ldrbteq	r0, [ip], -r1, asr #2
    2754:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    2758:	000005c4 	andeq	r0, r0, r4, asr #11
    275c:	48014205 	stmdami	r1, {r0, r2, r9, lr}
    2760:	0c000000 	stceq	0, cr0, [r0], {-0}
    2764:	00480a00 	subeq	r0, r8, r0, lsl #20
    2768:	068c0000 	streq	r0, [ip], r0
    276c:	d20b0000 	andle	r0, fp, #0
    2770:	02000000 	andeq	r0, r0, #0
    2774:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
    2778:	078d0259 			; <UNDEFINED> instruction: 0x078d0259
    277c:	01180000 	tsteq	r8, r0
    2780:	05000006 	streq	r0, [r0, #-6]
    2784:	002c025b 	eoreq	r0, ip, fp, asr r2
    2788:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    278c:	00000594 	muleq	r0, r4, r5
    2790:	12025c05 	andne	r5, r2, #1280	; 0x500
    2794:	04000001 	streq	r0, [r0], #-1
    2798:	0003a918 	andeq	sl, r3, r8, lsl r9
    279c:	025d0500 	subseq	r0, sp, #0, 10
    27a0:	0000078d 	andeq	r0, r0, sp, lsl #15
    27a4:	06691808 	strbteq	r1, [r9], -r8, lsl #16
    27a8:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    27ac:	00019802 	andeq	r9, r1, r2, lsl #16
    27b0:	00182400 	andseq	r2, r8, r0, lsl #8
    27b4:	05000003 	streq	r0, [r0, #-3]
    27b8:	0025025f 	eoreq	r0, r5, pc, asr r2
    27bc:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    27c0:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    27c4:	64026005 	strvs	r6, [r2], #-5
    27c8:	50000000 	andpl	r0, r0, r0
    27cc:	00068518 	andeq	r8, r6, r8, lsl r5
    27d0:	02610500 	rsbeq	r0, r1, #0, 10
    27d4:	00000647 	andeq	r0, r0, r7, asr #12
    27d8:	04fb1858 	ldrbteq	r1, [fp], #2136	; 0x858
    27dc:	62050000 	andvs	r0, r5, #0
    27e0:	0000fa02 	andeq	pc, r0, r2, lsl #20
    27e4:	8a186800 	bhi	61c7ec <startup-0x1f9e3814>
    27e8:	05000006 	streq	r0, [r0, #-6]
    27ec:	00fa0263 	rscseq	r0, sl, r3, ror #4
    27f0:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
    27f4:	0000046e 	andeq	r0, r0, lr, ror #8
    27f8:	fa026405 	blx	9b814 <startup-0x1ff647ec>
    27fc:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    2800:	00063218 	andeq	r3, r6, r8, lsl r2
    2804:	02650500 	rsbeq	r0, r5, #0, 10
    2808:	0000079d 	muleq	r0, sp, r7
    280c:	039d1880 	orrseq	r1, sp, #128, 16	; 0x800000
    2810:	66050000 	strvs	r0, [r5], -r0
    2814:	0007ad02 	andeq	sl, r7, r2, lsl #26
    2818:	dc188800 	ldcle	8, cr8, [r8], {-0}
    281c:	05000005 	streq	r0, [r0, #-5]
    2820:	00250267 	eoreq	r0, r5, r7, ror #4
    2824:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    2828:	0000026c 	andeq	r0, r0, ip, ror #4
    282c:	fa026805 	blx	9c848 <startup-0x1ff637b8>
    2830:	a4000000 	strge	r0, [r0], #-0
    2834:	0000aa18 	andeq	sl, r0, r8, lsl sl
    2838:	02690500 	rsbeq	r0, r9, #0, 10
    283c:	000000fa 	strdeq	r0, [r0], -sl
    2840:	025518ac 	subseq	r1, r5, #172, 16	; 0xac0000
    2844:	6a050000 	bvs	14284c <startup-0x1febd7b4>
    2848:	0000fa02 	andeq	pc, r0, r2, lsl #20
    284c:	4918b400 	ldmdbmi	r8, {sl, ip, sp, pc}
    2850:	05000000 	streq	r0, [r0, #-0]
    2854:	00fa026b 	rscseq	r0, sl, fp, ror #4
    2858:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    285c:	00000058 	andeq	r0, r0, r8, asr r0
    2860:	fa026c05 	blx	9d87c <startup-0x1ff62784>
    2864:	c4000000 	strgt	r0, [r0], #-0
    2868:	00049818 	andeq	r9, r4, r8, lsl r8
    286c:	026d0500 	rsbeq	r0, sp, #0, 10
    2870:	00000025 	andeq	r0, r0, r5, lsr #32
    2874:	180a00cc 	stmdane	sl, {r2, r3, r6, r7}
    2878:	9d000001 	stcls	0, cr0, [r0, #-4]
    287c:	0b000007 	bleq	28a0 <startup-0x1fffd760>
    2880:	000000d2 	ldrdeq	r0, [r0], -r2
    2884:	180a0019 	stmdane	sl, {r0, r3, r4}
    2888:	ad000001 	stcge	0, cr0, [r0, #-4]
    288c:	0b000007 	bleq	28b0 <startup-0x1fffd750>
    2890:	000000d2 	ldrdeq	r0, [r0], -r2
    2894:	180a0007 	stmdane	sl, {r0, r1, r2}
    2898:	bd000001 	stclt	0, cr0, [r0, #-4]
    289c:	0b000007 	bleq	28c0 <startup-0x1fffd740>
    28a0:	000000d2 	ldrdeq	r0, [r0], -r2
    28a4:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
    28a8:	e1027205 	tst	r2, r5, lsl #4
    28ac:	18000007 	stmdane	r0, {r0, r1, r2}
    28b0:	0000041b 	andeq	r0, r0, fp, lsl r4
    28b4:	e1027505 	tst	r2, r5, lsl #10
    28b8:	00000007 	andeq	r0, r0, r7
    28bc:	00062918 	andeq	r2, r6, r8, lsl r9
    28c0:	02760500 	rsbseq	r0, r6, #0, 10
    28c4:	000007f1 	strdeq	r0, [r0], -r1
    28c8:	e10a0078 	hlt	0xa008
    28cc:	f1000002 	cps	#2
    28d0:	0b000007 	bleq	28f4 <startup-0x1fffd70c>
    28d4:	000000d2 	ldrdeq	r0, [r0], -r2
    28d8:	2c0a001d 	stccs	0, cr0, [sl], {29}
    28dc:	01000000 	mrseq	r0, (UNDEF: 0)
    28e0:	0b000008 	bleq	2908 <startup-0x1fffd6f8>
    28e4:	000000d2 	ldrdeq	r0, [r0], -r2
    28e8:	f01c001d 			; <UNDEFINED> instruction: 0xf01c001d
    28ec:	23025705 	movwcs	r5, #9989	; 0x2705
    28f0:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    28f4:	00000545 	andeq	r0, r0, r5, asr #10
    28f8:	8c026e05 	stchi	14, cr6, [r2], {5}
    28fc:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    2900:	00000651 	andeq	r0, r0, r1, asr r6
    2904:	bd027705 	stclt	7, cr7, [r2, #-20]	; 0xffffffec
    2908:	00000007 	andeq	r0, r0, r7
    290c:	0001180a 	andeq	r1, r1, sl, lsl #16
    2910:	00083300 	andeq	r3, r8, r0, lsl #6
    2914:	00d20b00 	sbcseq	r0, r2, r0, lsl #22
    2918:	00180000 	andseq	r0, r8, r0
    291c:	00009906 	andeq	r9, r0, r6, lsl #18
    2920:	33040500 	movwcc	r0, #17664	; 0x4500
    2924:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    2928:	00000849 	andeq	r0, r0, r9, asr #16
    292c:	00042f16 	andeq	r2, r4, r6, lsl pc
    2930:	04050000 	streq	r0, [r5], #-0
    2934:	0000083e 	andeq	r0, r0, lr, lsr r8
    2938:	01820405 	orreq	r0, r2, r5, lsl #8
    293c:	601e0000 	andsvs	r0, lr, r0
    2940:	16000008 	strne	r0, [r0], -r8
    2944:	00000025 	andeq	r0, r0, r5, lsr #32
    2948:	66040500 	strvs	r0, [r4], -r0, lsl #10
    294c:	05000008 	streq	r0, [r0, #-8]
    2950:	00085504 	andeq	r5, r8, r4, lsl #10
    2954:	05fa0a00 	ldrbeq	r0, [sl, #2560]!	; 0xa00
    2958:	087c0000 	ldmdaeq	ip!, {}^	; <UNPREDICTABLE>
    295c:	d20b0000 	andle	r0, fp, #0
    2960:	02000000 	andeq	r0, r0, #0
    2964:	05f51f00 	ldrbeq	r1, [r5, #3840]!	; 0xf00
    2968:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    296c:	00042f02 	andeq	r2, r4, r2, lsl #30
    2970:	05ee1f00 	strbeq	r1, [lr, #3840]!	; 0xf00
    2974:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    2978:	00043502 	andeq	r3, r4, r2, lsl #10
    297c:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
    2980:	000003fa 	strdeq	r0, [r0], -sl
    2984:	56040403 	strpl	r0, [r4], -r3, lsl #8
    2988:	03000004 	movweq	r0, #4
    298c:	03f50408 	mvnseq	r0, #8, 8	; 0x8000000
    2990:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
    2994:	06000007 	streq	r0, [r0], -r7
    2998:	00003a0f 	andeq	r3, r0, pc, lsl #20
    299c:	08a90a00 	stmiaeq	r9!, {r9, fp}
    29a0:	08bf0000 	ldmeq	pc!, {}	; <UNPREDICTABLE>
    29a4:	00200000 	eoreq	r0, r0, r0
    29a8:	0008ee21 	andeq	lr, r8, r1, lsr #28
    29ac:	b40a0700 	strlt	r0, [sl], #-1792	; 0xfffff900
    29b0:	0c000008 	stceq	0, cr0, [r0], {8}
    29b4:	e70a0802 	str	r0, [sl, -r2, lsl #16]
    29b8:	11000008 	tstne	r0, r8
    29bc:	0b080078 	bleq	202ba4 <startup-0x1fdfd45c>
    29c0:	0000003a 	andeq	r0, r0, sl, lsr r0
    29c4:	00791100 	rsbseq	r1, r9, r0, lsl #2
    29c8:	003a0b08 	eorseq	r0, sl, r8, lsl #22
    29cc:	00010000 	andeq	r0, r1, r0
    29d0:	00026604 	andeq	r6, r2, r4, lsl #12
    29d4:	ca0c0800 	bgt	3049dc <startup-0x1fcfb624>
    29d8:	0c000008 	stceq	0, cr0, [r0], {8}
    29dc:	2a0e0840 	bcs	384ae4 <startup-0x1fc7b51c>
    29e0:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    29e4:	00000105 	andeq	r0, r0, r5, lsl #2
    29e8:	00250f08 	eoreq	r0, r5, r8, lsl #30
    29ec:	0d000000 	stceq	0, cr0, [r0, #-0]
    29f0:	00000623 	andeq	r0, r0, r3, lsr #12
    29f4:	00251008 	eoreq	r1, r5, r8
    29f8:	0d040000 	stceq	0, cr0, [r4, #-0]
    29fc:	0000067f 	andeq	r0, r0, pc, ror r6
    2a00:	00251108 	eoreq	r1, r5, r8, lsl #2
    2a04:	11080000 	mrsne	r0, (UNDEF: 8)
    2a08:	08007870 	stmdaeq	r0, {r4, r5, r6, fp, ip, sp, lr}
    2a0c:	00092a12 	andeq	r2, r9, r2, lsl sl
    2a10:	0a000c00 	beq	5a18 <startup-0x1fffa5e8>
    2a14:	000008e7 	andeq	r0, r0, r7, ror #17
    2a18:	0000093a 	andeq	r0, r0, sl, lsr r9
    2a1c:	0000d20b 	andeq	sp, r0, fp, lsl #4
    2a20:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
    2a24:	0000043b 	andeq	r0, r0, fp, lsr r4
    2a28:	08f21308 	ldmeq	r2!, {r3, r8, r9, ip}^
    2a2c:	3a040000 	bcc	102a34 <startup-0x1fefd5cc>
    2a30:	08000004 	stmdaeq	r0, {r2}
    2a34:	00095013 	andeq	r5, r9, r3, lsl r0
    2a38:	f2040500 	vrshl.s8	d0, d0, d4
    2a3c:	10000008 	andne	r0, r0, r8
    2a40:	000005bf 			; <UNDEFINED> instruction: 0x000005bf
    2a44:	e715082c 	ldr	r0, [r5, -ip, lsr #16]
    2a48:	11000009 	tstne	r0, r9
    2a4c:	006f6567 	rsbeq	r6, pc, r7, ror #10
    2a50:	09451608 	stmdbeq	r5, {r3, r9, sl, ip}^
    2a54:	0d000000 	stceq	0, cr0, [r0, #-0]
    2a58:	0000003f 	andeq	r0, r0, pc, lsr r0
    2a5c:	00251708 	eoreq	r1, r5, r8, lsl #14
    2a60:	0d040000 	stceq	0, cr0, [r4, #-0]
    2a64:	00000044 	andeq	r0, r0, r4, asr #32
    2a68:	00251708 	eoreq	r1, r5, r8, lsl #14
    2a6c:	0d080000 	stceq	0, cr0, [r8, #-0]
    2a70:	00000646 	andeq	r0, r0, r6, asr #12
    2a74:	00251808 	eoreq	r1, r5, r8, lsl #16
    2a78:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    2a7c:	00000659 	andeq	r0, r0, r9, asr r6
    2a80:	00251808 	eoreq	r1, r5, r8, lsl #16
    2a84:	0d100000 	ldceq	0, cr0, [r0, #-0]
    2a88:	0000047c 	andeq	r0, r0, ip, ror r4
    2a8c:	00251908 	eoreq	r1, r5, r8, lsl #18
    2a90:	0d140000 	ldceq	0, cr0, [r4, #-0]
    2a94:	00000294 	muleq	r0, r4, r2
    2a98:	00251a08 	eoreq	r1, r5, r8, lsl #20
    2a9c:	0d180000 	ldceq	0, cr0, [r8, #-0]
    2aa0:	000005e9 	andeq	r0, r0, r9, ror #11
    2aa4:	09f81b08 	ldmibeq	r8!, {r3, r8, r9, fp, ip}^
    2aa8:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    2aac:	000006fa 	strdeq	r0, [r0], -sl
    2ab0:	09f81c08 	ldmibeq	r8!, {r3, sl, fp, ip}^
    2ab4:	0d200000 	stceq	0, cr0, [r0, #-0]
    2ab8:	000000c5 	andeq	r0, r0, r5, asr #1
    2abc:	09f81d08 	ldmibeq	r8!, {r3, r8, sl, fp, ip}^
    2ac0:	0d240000 	stceq	0, cr0, [r4, #-0]
    2ac4:	00000080 	andeq	r0, r0, r0, lsl #1
    2ac8:	0a131e08 	beq	4ca2f0 <startup-0x1fb35d10>
    2acc:	00280000 	eoreq	r0, r8, r0
    2ad0:	0009f21e 	andeq	pc, r9, lr, lsl r2	; <UNPREDICTABLE>
    2ad4:	09f21600 	ldmibeq	r2!, {r9, sl, ip}^
    2ad8:	05000000 	streq	r0, [r0, #-0]
    2adc:	00095604 	andeq	r5, r9, r4, lsl #12
    2ae0:	e7040500 	str	r0, [r4, -r0, lsl #10]
    2ae4:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    2ae8:	00000a13 	andeq	r0, r0, r3, lsl sl
    2aec:	0009f216 	andeq	pc, r9, r6, lsl r2	; <UNPREDICTABLE>
    2af0:	00251600 	eoreq	r1, r5, r0, lsl #12
    2af4:	25160000 	ldrcs	r0, [r6, #-0]
    2af8:	00000000 	andeq	r0, r0, r0
    2afc:	09fe0405 	ldmibeq	lr!, {r0, r2, sl}^
    2b00:	02040000 	andeq	r0, r4, #0
    2b04:	08000004 	stmdaeq	r0, {r2}
    2b08:	0009561f 	andeq	r5, r9, pc, lsl r6
    2b0c:	04010400 	streq	r0, [r1], #-1024	; 0xfffffc00
    2b10:	1f080000 	svcne	0x00080000
    2b14:	000009f2 	strdeq	r0, [r0], -r2
    2b18:	00022d21 	andeq	r2, r2, r1, lsr #26
    2b1c:	19210800 	stmdbne	r1!, {fp}
    2b20:	2100000a 	tstcs	r0, sl
    2b24:	0000056f 	andeq	r0, r0, pc, ror #10
    2b28:	0a192208 	beq	64b350 <startup-0x1f9b4cb0>
    2b2c:	3b210000 	blcc	842b34 <startup-0x1f7bd4cc>
    2b30:	08000002 	stmdaeq	r0, {r1}
    2b34:	000a1923 	andeq	r1, sl, r3, lsr #18
    2b38:	01e62100 	mvneq	r2, r0, lsl #2
    2b3c:	06090000 	streq	r0, [r9], -r0
    2b40:	00000025 	andeq	r0, r0, r5, lsr #32
    2b44:	00031921 	andeq	r1, r3, r1, lsr #18
    2b48:	25070900 	strcs	r0, [r7, #-2304]	; 0xfffff700
    2b4c:	21000000 	mrscs	r0, (UNDEF: 0)
    2b50:	00000bd8 	ldrdeq	r0, [r0], -r8
    2b54:	08e71501 	stmiaeq	r7!, {r0, r8, sl, ip}^
    2b58:	e3220000 			; <UNDEFINED> instruction: 0xe3220000
    2b5c:	0100000b 	tsteq	r0, fp
    2b60:	00093abf 			; <UNDEFINED> instruction: 0x00093abf
    2b64:	c8030500 	stmdagt	r3, {r8, sl}
    2b68:	2220006c 	eorcs	r0, r0, #108	; 0x6c
    2b6c:	00000bf2 	strdeq	r0, [r0], -r2
    2b70:	093acc01 	ldmdbeq	sl!, {r0, sl, fp, lr, pc}
    2b74:	03050000 	movweq	r0, #20480	; 0x5000
    2b78:	20006d08 	andcs	r6, r0, r8, lsl #26
    2b7c:	000c0122 	andeq	r0, ip, r2, lsr #2
    2b80:	3ad90100 	bcc	ff642f88 <_global_impure_ptr+0xdf63baf8>
    2b84:	05000009 	streq	r0, [r0, #-9]
    2b88:	006d4803 	rsbeq	r4, sp, r3, lsl #16
    2b8c:	0c6d2220 	sfmeq	f2, 2, [sp], #-128	; 0xffffff80
    2b90:	e6010000 	str	r0, [r1], -r0
    2b94:	0000093a 	andeq	r0, r0, sl, lsr r9
    2b98:	6d880305 	stcvs	3, cr0, [r8, #20]
    2b9c:	10222000 	eorne	r2, r2, r0
    2ba0:	0100000c 	tsteq	r0, ip
    2ba4:	00093af3 	strdeq	r3, [r9], -r3	; <UNPREDICTABLE>
    2ba8:	c8030500 	stmdagt	r3, {r8, sl}
    2bac:	2320006d 			; <UNDEFINED> instruction: 0x2320006d
    2bb0:	00000c1f 	andeq	r0, r0, pc, lsl ip
    2bb4:	3a010001 	bcc	42bc0 <startup-0x1ffbd440>
    2bb8:	05000009 	streq	r0, [r0, #-9]
    2bbc:	006e0803 	rsbeq	r0, lr, r3, lsl #16
    2bc0:	0a2f2420 	beq	bcbc48 <startup-0x1f4343b8>
    2bc4:	0d010000 	stceq	0, cr0, [r1, #-0]
    2bc8:	48030501 	stmdami	r3, {r0, r8, sl}
    2bcc:	2420006e 	strtcs	r0, [r0], #-110	; 0xffffff92
    2bd0:	00000a3a 	andeq	r0, r0, sl, lsr sl
    2bd4:	05011a01 	streq	r1, [r1, #-2561]	; 0xfffff5ff
    2bd8:	006e7403 	rsbeq	r7, lr, r3, lsl #8
    2bdc:	0a452420 	beq	114bc64 <startup-0x1eeb439c>
    2be0:	27010000 	strcs	r0, [r1, -r0]
    2be4:	a0030501 	andge	r0, r3, r1, lsl #10
    2be8:	2520006e 	strcs	r0, [r0, #-110]!	; 0xffffff92
    2bec:	00000c4a 	andeq	r0, r0, sl, asr #24
    2bf0:	262cb801 	strtcs	fp, [ip], -r1, lsl #16
    2bf4:	005c2000 	subseq	r2, ip, r0
    2bf8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2bfc:	00000b3a 	andeq	r0, r0, sl, lsr fp
    2c00:	01006f26 	tsteq	r0, r6, lsr #30
    2c04:	000a24b8 			; <UNDEFINED> instruction: 0x000a24b8
    2c08:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2c0c:	00263427 	eoreq	r3, r6, r7, lsr #8
    2c10:	00004c20 	andeq	r4, r0, r0, lsr #24
    2c14:	00692800 	rsbeq	r2, r9, r0, lsl #16
    2c18:	0025b901 	eoreq	fp, r5, r1, lsl #18
    2c1c:	91020000 	mrsls	r0, (UNDEF: 2)
    2c20:	29000074 	stmdbcs	r0, {r2, r4, r5, r6}
    2c24:	00000c2f 	andeq	r0, r0, pc, lsr #24
    2c28:	25d0b201 	ldrbcs	fp, [r0, #513]	; 0x201
    2c2c:	005c2000 	subseq	r2, ip, r0
    2c30:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c34:	00000b72 	andeq	r0, r0, r2, ror fp
    2c38:	01006f26 	tsteq	r0, r6, lsr #30
    2c3c:	000a24b2 			; <UNDEFINED> instruction: 0x000a24b2
    2c40:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2c44:	0025d827 	eoreq	sp, r5, r7, lsr #16
    2c48:	00004c20 	andeq	r4, r0, r0, lsr #24
    2c4c:	00692800 	rsbeq	r2, r9, r0, lsl #16
    2c50:	0025b301 	eoreq	fp, r5, r1, lsl #6
    2c54:	91020000 	mrsls	r0, (UNDEF: 2)
    2c58:	2a000074 	bcs	2e30 <startup-0x1fffd1d0>
    2c5c:	00000ca6 	andeq	r0, r0, r6, lsr #25
    2c60:	25b0ac01 	ldrcs	sl, [r0, #3073]!	; 0xc01
    2c64:	00202000 	eoreq	r2, r0, r0
    2c68:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c6c:	00000bb0 			; <UNDEFINED> instruction: 0x00000bb0
    2c70:	01006f26 	tsteq	r0, r6, lsr #30
    2c74:	000a24ac 	andeq	r2, sl, ip, lsr #9
    2c78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2c7c:	00003f2b 	andeq	r3, r0, fp, lsr #30
    2c80:	25ac0100 	strcs	r0, [ip, #256]!	; 0x100
    2c84:	02000000 	andeq	r0, r0, #0
    2c88:	442b7091 	strtmi	r7, [fp], #-145	; 0xffffff6f
    2c8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c90:	000025ac 	andeq	r2, r0, ip, lsr #11
    2c94:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2c98:	0c9a2500 	cfldr32eq	mvfx2, [sl], {0}
    2c9c:	81010000 	mrshi	r0, (UNDEF: 1)
    2ca0:	20002494 	mulcs	r0, r4, r4
    2ca4:	0000011c 	andeq	r0, r0, ip, lsl r1
    2ca8:	0c2f9c01 	stceq	12, cr9, [pc], #-4	; 2cac <startup-0x1fffd354>
    2cac:	6f260000 	svcvs	0x00260000
    2cb0:	24810100 	strcs	r0, [r1], #256	; 0x100
    2cb4:	0200000a 	andeq	r0, r0, #10
    2cb8:	cc225c91 	stcgt	12, cr5, [r2], #-580	; 0xfffffdbc
    2cbc:	01000003 	tsteq	r0, r3
    2cc0:	00002582 	andeq	r2, r0, r2, lsl #11
    2cc4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2cc8:	7362612c 	cmnvc	r2, #44, 2
    2ccc:	25000a00 	strcs	r0, [r0, #-2560]	; 0xfffff600
    2cd0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    2cd4:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    2cd8:	04222200 	strteq	r2, [r2], #-512	; 0xfffffe00
    2cdc:	83010000 	movwhi	r0, #4096	; 0x1000
    2ce0:	00000025 	andeq	r0, r0, r5, lsr #32
    2ce4:	2e609102 	lgncss	f1, f2
    2ce8:	200024b4 			; <UNDEFINED> instruction: 0x200024b4
    2cec:	0000007a 	andeq	r0, r0, sl, ror r0
    2cf0:	00000c18 	andeq	r0, r0, r8, lsl ip
    2cf4:	01006928 	tsteq	r0, r8, lsr #18
    2cf8:	00002585 	andeq	r2, r0, r5, lsl #11
    2cfc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2d00:	252e2700 	strcs	r2, [lr, #-1792]!	; 0xfffff900
    2d04:	007a2000 	rsbseq	r2, sl, r0
    2d08:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2d0c:	25960100 	ldrcs	r0, [r6, #256]	; 0x100
    2d10:	02000000 	andeq	r0, r0, #0
    2d14:	00006891 	muleq	r0, r1, r8
    2d18:	000c7c2f 	andeq	r7, ip, pc, lsr #24
    2d1c:	25640100 	strbcs	r0, [r4, #-256]!	; 0xffffff00
    2d20:	e4000000 	str	r0, [r0], #-0
    2d24:	b0200023 	eorlt	r0, r0, r3, lsr #32
    2d28:	01000000 	mrseq	r0, (UNDEF: 0)
    2d2c:	000caf9c 	muleq	ip, ip, pc	; <UNPREDICTABLE>
    2d30:	006f2600 	rsbeq	r2, pc, r0, lsl #12
    2d34:	0a246401 	beq	91bd40 <startup-0x1f6e42c0>
    2d38:	91020000 	mrsls	r0, (UNDEF: 2)
    2d3c:	0228225c 	eoreq	r2, r8, #92, 4	; 0xc0000005
    2d40:	65010000 	strvs	r0, [r1, #-0]
    2d44:	00000025 	andeq	r0, r0, r5, lsr #32
    2d48:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    2d4c:	00000116 	andeq	r0, r0, r6, lsl r1
    2d50:	00256601 	eoreq	r6, r5, r1, lsl #12
    2d54:	91020000 	mrsls	r0, (UNDEF: 2)
    2d58:	06992268 	ldreq	r2, [r9], r8, ror #4
    2d5c:	67010000 	strvs	r0, [r1, -r0]
    2d60:	00000025 	andeq	r0, r0, r5, lsr #32
    2d64:	2e649102 	lgncss	f1, f2
    2d68:	2000241c 	andcs	r2, r0, ip, lsl r4
    2d6c:	0000002e 	andeq	r0, r0, lr, lsr #32
    2d70:	00000c98 	muleq	r0, r8, ip
    2d74:	01006928 	tsteq	r0, r8, lsr #18
    2d78:	0000256d 	andeq	r2, r0, sp, ror #10
    2d7c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2d80:	245e2700 	ldrbcs	r2, [lr], #-1792	; 0xfffff900
    2d84:	002c2000 	eoreq	r2, ip, r0
    2d88:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2d8c:	25770100 	ldrbcs	r0, [r7, #-256]!	; 0xffffff00
    2d90:	02000000 	andeq	r0, r0, #0
    2d94:	00007091 	muleq	r0, r1, r0
    2d98:	000c8b2f 	andeq	r8, ip, pc, lsr #22
    2d9c:	25470100 	strbcs	r0, [r7, #-256]	; 0xffffff00
    2da0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2da4:	ac200023 	stcge	0, cr0, [r0], #-140	; 0xffffff74
    2da8:	01000000 	mrseq	r0, (UNDEF: 0)
    2dac:	000d2f9c 	muleq	sp, ip, pc	; <UNPREDICTABLE>
    2db0:	006f2600 	rsbeq	r2, pc, r0, lsl #12
    2db4:	0a244701 	beq	9149c0 <startup-0x1f6eb640>
    2db8:	91020000 	mrsls	r0, (UNDEF: 2)
    2dbc:	0699225c 			; <UNDEFINED> instruction: 0x0699225c
    2dc0:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    2dc4:	00000025 	andeq	r0, r0, r5, lsr #32
    2dc8:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    2dcc:	0000003a 	andeq	r0, r0, sl, lsr r0
    2dd0:	00254901 	eoreq	r4, r5, r1, lsl #18
    2dd4:	91020000 	mrsls	r0, (UNDEF: 2)
    2dd8:	02282268 	eoreq	r2, r8, #104, 4	; 0x80000006
    2ddc:	4a010000 	bmi	42de4 <startup-0x1ffbd21c>
    2de0:	00000025 	andeq	r0, r0, r5, lsr #32
    2de4:	2e649102 	lgncss	f1, f2
    2de8:	20002370 	andcs	r2, r0, r0, ror r3
    2dec:	0000002c 	andeq	r0, r0, ip, lsr #32
    2df0:	00000d18 	andeq	r0, r0, r8, lsl sp
    2df4:	01006928 	tsteq	r0, r8, lsr #18
    2df8:	00002550 	andeq	r2, r0, r0, asr r5
    2dfc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2e00:	23b02700 	movscs	r2, #0, 14
    2e04:	002a2000 	eoreq	r2, sl, r0
    2e08:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2e0c:	255a0100 	ldrbcs	r0, [sl, #-256]	; 0xffffff00
    2e10:	02000000 	andeq	r0, r0, #0
    2e14:	00007091 	muleq	r0, r1, r0
    2e18:	000c5a30 	andeq	r5, ip, r0, lsr sl
    2e1c:	25320100 	ldrcs	r0, [r2, #-256]!	; 0xffffff00
    2e20:	70000000 	andvc	r0, r0, r0
    2e24:	c8200022 	stmdagt	r0!, {r1, r5}
    2e28:	01000000 	mrseq	r0, (UNDEF: 0)
    2e2c:	000daf9c 	muleq	sp, ip, pc	; <UNPREDICTABLE>
    2e30:	006f2600 	rsbeq	r2, pc, r0, lsl #12
    2e34:	0a243201 	beq	90f640 <startup-0x1f6f09c0>
    2e38:	91020000 	mrsls	r0, (UNDEF: 2)
    2e3c:	0699225c 			; <UNDEFINED> instruction: 0x0699225c
    2e40:	33010000 	movwcc	r0, #4096	; 0x1000
    2e44:	00000025 	andeq	r0, r0, r5, lsr #32
    2e48:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    2e4c:	00000228 	andeq	r0, r0, r8, lsr #4
    2e50:	00253401 	eoreq	r3, r5, r1, lsl #8
    2e54:	91020000 	mrsls	r0, (UNDEF: 2)
    2e58:	01162268 	tsteq	r6, r8, ror #4
    2e5c:	35010000 	strcc	r0, [r1, #-0]
    2e60:	00000025 	andeq	r0, r0, r5, lsr #32
    2e64:	2e649102 	lgncss	f1, f2
    2e68:	2000229c 	mulcs	r0, ip, r2
    2e6c:	00000044 	andeq	r0, r0, r4, asr #32
    2e70:	00000d98 	muleq	r0, r8, sp
    2e74:	01006928 	tsteq	r0, r8, lsr #18
    2e78:	00002538 	andeq	r2, r0, r8, lsr r5
    2e7c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2e80:	22e82700 	rsccs	r2, r8, #0, 14
    2e84:	00422000 	subeq	r2, r2, r0
    2e88:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2e8c:	253e0100 	ldrcs	r0, [lr, #-256]!	; 0xffffff00
    2e90:	02000000 	andeq	r0, r0, #0
    2e94:	00007091 	muleq	r0, r1, r0
    2e98:	000cb730 	andeq	fp, ip, r0, lsr r7
    2e9c:	251d0100 	ldrcs	r0, [sp, #-256]	; 0xffffff00
    2ea0:	a6000000 	strge	r0, [r0], -r0
    2ea4:	ca200021 	bgt	802f30 <startup-0x1f7fd0d0>
    2ea8:	01000000 	mrseq	r0, (UNDEF: 0)
    2eac:	000e2f9c 	muleq	lr, ip, pc	; <UNPREDICTABLE>
    2eb0:	006f2600 	rsbeq	r2, pc, r0, lsl #12
    2eb4:	0a241d01 	beq	90a2c0 <startup-0x1f6f5d40>
    2eb8:	91020000 	mrsls	r0, (UNDEF: 2)
    2ebc:	0699225c 			; <UNDEFINED> instruction: 0x0699225c
    2ec0:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2ec4:	00000025 	andeq	r0, r0, r5, lsr #32
    2ec8:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    2ecc:	0000003a 	andeq	r0, r0, sl, lsr r0
    2ed0:	00251f01 	eoreq	r1, r5, r1, lsl #30
    2ed4:	91020000 	mrsls	r0, (UNDEF: 2)
    2ed8:	02282268 	eoreq	r2, r8, #104, 4	; 0x80000006
    2edc:	20010000 	andcs	r0, r1, r0
    2ee0:	00000025 	andeq	r0, r0, r5, lsr #32
    2ee4:	2e649102 	lgncss	f1, f2
    2ee8:	200021d2 	ldrdcs	r2, [r0], -r2	; <UNPREDICTABLE>
    2eec:	00000044 	andeq	r0, r0, r4, asr #32
    2ef0:	00000e18 	andeq	r0, r0, r8, lsl lr
    2ef4:	01006928 	tsteq	r0, r8, lsr #18
    2ef8:	00002523 	andeq	r2, r0, r3, lsr #10
    2efc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2f00:	221e2700 	andscs	r2, lr, #0, 14
    2f04:	00422000 	subeq	r2, r2, r0
    2f08:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2f0c:	25290100 	strcs	r0, [r9, #-256]!	; 0xffffff00
    2f10:	02000000 	andeq	r0, r0, #0
    2f14:	00007091 	muleq	r0, r1, r0
    2f18:	000c3e31 	andeq	r3, ip, r1, lsr lr
    2f1c:	4c170100 	ldfmis	f0, [r7], {-0}
    2f20:	5a200021 	bpl	802fac <startup-0x1f7fd054>
    2f24:	01000000 	mrseq	r0, (UNDEF: 0)
    2f28:	006f269c 	mlseq	pc, ip, r6, r2	; <UNPREDICTABLE>
    2f2c:	0a241701 	beq	908b38 <startup-0x1f6f74c8>
    2f30:	91020000 	mrsls	r0, (UNDEF: 2)
    2f34:	2154276c 	cmpcs	r4, ip, ror #14
    2f38:	004a2000 	subeq	r2, sl, r0
    2f3c:	69280000 	stmdbvs	r8!, {}	; <UNPREDICTABLE>
    2f40:	25180100 	ldrcs	r0, [r8, #-256]	; 0xffffff00
    2f44:	02000000 	andeq	r0, r0, #0
    2f48:	00007491 	muleq	r0, r1, r4
    2f4c:	00052900 	andeq	r2, r5, r0, lsl #18
    2f50:	08000400 	stmdaeq	r0, {sl}
    2f54:	0400000c 	streq	r0, [r0], #-12
    2f58:	00012101 	andeq	r2, r1, r1, lsl #2
    2f5c:	0db40c00 	ldceq	12, cr0, [r4]
	...
    2f68:	0cba0000 	ldceq	0, cr0, [sl]
    2f6c:	b1020000 	mrslt	r0, (UNDEF: 2)
    2f70:	02000008 	andeq	r0, r0, #8
    2f74:	00002c0c 	andeq	r2, r0, ip, lsl #24
    2f78:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    2f7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2f80:	87060104 	strhi	r0, [r6, -r4, lsl #2]
    2f84:	02000004 	andeq	r0, r0, #4
    2f88:	0000077e 	andeq	r0, r0, lr, ror r7
    2f8c:	00450f02 	subeq	r0, r5, r2, lsl #30
    2f90:	01040000 	mrseq	r0, (UNDEF: 4)
    2f94:	00048508 	andeq	r8, r4, r8, lsl #10
    2f98:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    2f9c:	000004a1 	andeq	r0, r0, r1, lsr #9
    2fa0:	81070204 	tsthi	r7, r4, lsl #4
    2fa4:	02000003 	andeq	r0, r0, #3
    2fa8:	000007ef 	andeq	r0, r0, pc, ror #15
    2fac:	00651302 	rsbeq	r1, r5, r2, lsl #6
    2fb0:	04040000 	streq	r0, [r4], #-0
    2fb4:	00007307 	andeq	r7, r0, r7, lsl #6
    2fb8:	03020500 	movweq	r0, #9472	; 0x2500
    2fbc:	00008d11 	andeq	r8, r0, r1, lsl sp
    2fc0:	07c30600 	strbeq	r0, [r3, r0, lsl #12]
    2fc4:	12030000 	andne	r0, r3, #0
    2fc8:	0000003a 	andeq	r0, r0, sl, lsr r0
    2fcc:	07ab0600 	streq	r0, [fp, r0, lsl #12]!
    2fd0:	13030000 	movwne	r0, #12288	; 0x3000
    2fd4:	0000003a 	andeq	r0, r0, sl, lsr r0
    2fd8:	04070001 	streq	r0, [r7], #-1
    2fdc:	00a60f03 	adceq	r0, r6, r3, lsl #30
    2fe0:	69080000 	stmdbvs	r8, {}	; <UNPREDICTABLE>
    2fe4:	03007264 	movweq	r7, #612	; 0x264
    2fe8:	00005a10 	andeq	r5, r0, r0, lsl sl
    2fec:	006c0900 	rsbeq	r0, ip, r0, lsl #18
    2ff0:	05000000 	streq	r0, [r0, #-0]
    2ff4:	c7180302 	ldrgt	r0, [r8, -r2, lsl #6]
    2ff8:	06000000 	streq	r0, [r0], -r0
    2ffc:	00000786 	andeq	r0, r0, r6, lsl #15
    3000:	003a1903 	eorseq	r1, sl, r3, lsl #18
    3004:	06000000 	streq	r0, [r0], -r0
    3008:	000006cd 	andeq	r0, r0, sp, asr #13
    300c:	003a1a03 	eorseq	r1, sl, r3, lsl #20
    3010:	00010000 	andeq	r0, r1, r0
    3014:	16030407 	strne	r0, [r3], -r7, lsl #8
    3018:	000000e0 	andeq	r0, r0, r0, ror #1
    301c:	72646f08 	rsbvc	r6, r4, #8, 30
    3020:	5a170300 	bpl	5c3c28 <startup-0x1fa3c3d8>
    3024:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3028:	000000a6 	andeq	r0, r0, r6, lsr #1
    302c:	06ad0a00 	strteq	r0, [sp], r0, lsl #20
    3030:	03180000 	tsteq	r8, #0
    3034:	0001290a 	andeq	r2, r1, sl, lsl #18
    3038:	07f80600 	ldrbeq	r0, [r8, r0, lsl #12]!
    303c:	0b030000 	bleq	c3044 <startup-0x1ff3cfbc>
    3040:	0000005a 	andeq	r0, r0, sl, asr r0
    3044:	06c10600 	strbeq	r0, [r1], r0, lsl #12
    3048:	0c030000 	stceq	0, cr0, [r3], {-0}
    304c:	0000005a 	andeq	r0, r0, sl, asr r0
    3050:	07bb0604 	ldreq	r0, [fp, r4, lsl #12]!
    3054:	0d030000 	stceq	0, cr0, [r3, #-0]
    3058:	0000005a 	andeq	r0, r0, sl, asr r0
    305c:	07700608 	ldrbeq	r0, [r0, -r8, lsl #12]!
    3060:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    3064:	0000005a 	andeq	r0, r0, sl, asr r0
    3068:	008d0b0c 	addeq	r0, sp, ip, lsl #22
    306c:	0b100000 	bleq	403074 <startup-0x1fbfcf8c>
    3070:	000000c7 	andeq	r0, r0, r7, asr #1
    3074:	ef020014 	svc	0x00020014
    3078:	03000006 	movweq	r0, #6
    307c:	0000e01d 	andeq	lr, r0, sp, lsl r0
    3080:	01290c00 			; <UNDEFINED> instruction: 0x01290c00
    3084:	b3020000 	movwlt	r0, #8192	; 0x2000
    3088:	03000007 	movweq	r0, #7
    308c:	0001441e 	andeq	r4, r1, lr, lsl r4
    3090:	34040d00 	strcc	r0, [r4], #-3328	; 0xfffff300
    3094:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    3098:	0000003a 	andeq	r0, r0, sl, lsr r0
    309c:	00000155 	andeq	r0, r0, r5, asr r1
    30a0:	ee10000f 	cdp	0, 1, cr0, cr0, cr15, {0}
    30a4:	05000008 	streq	r0, [r0, #-8]
    30a8:	00014a0a 	andeq	r4, r1, sl, lsl #20
    30ac:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    30b0:	00017d0a 	andeq	r7, r1, sl, lsl #26
    30b4:	00781100 	rsbseq	r1, r8, r0, lsl #2
    30b8:	00450b04 	subeq	r0, r5, r4, lsl #22
    30bc:	11000000 	mrsne	r0, (UNDEF: 0)
    30c0:	0b040079 	bleq	1032ac <startup-0x1fefcd54>
    30c4:	00000045 	andeq	r0, r0, r5, asr #32
    30c8:	66020001 	strvs	r0, [r2], -r1
    30cc:	04000002 	streq	r0, [r0], #-2
    30d0:	0001600c 	andeq	r6, r1, ip
    30d4:	04400500 	strbeq	r0, [r0], #-1280	; 0xfffffb00
    30d8:	0001c00e 	andeq	ip, r1, lr
    30dc:	01050600 	tsteq	r5, r0, lsl #12
    30e0:	0f040000 	svceq	0x00040000
    30e4:	0000002c 	andeq	r0, r0, ip, lsr #32
    30e8:	06230600 	strteq	r0, [r3], -r0, lsl #12
    30ec:	10040000 	andne	r0, r4, r0
    30f0:	0000002c 	andeq	r0, r0, ip, lsr #32
    30f4:	067f0604 	ldrbteq	r0, [pc], -r4, lsl #12
    30f8:	11040000 	mrsne	r0, (UNDEF: 4)
    30fc:	0000002c 	andeq	r0, r0, ip, lsr #32
    3100:	78701108 	ldmdavc	r0!, {r3, r8, ip}^
    3104:	c0120400 	andsgt	r0, r2, r0, lsl #8
    3108:	0c000001 	stceq	0, cr0, [r0], {1}
    310c:	017d0e00 	cmneq	sp, r0, lsl #28
    3110:	01d00000 	bicseq	r0, r0, r0
    3114:	d0120000 	andsle	r0, r2, r0
    3118:	18000001 	stmdane	r0, {r0}
    311c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    3120:	000003ec 	andeq	r0, r0, ip, ror #7
    3124:	00043a02 	andeq	r3, r4, r2, lsl #20
    3128:	e2130400 	ands	r0, r3, #0, 8
    312c:	0d000001 	stceq	0, cr0, [r0, #-4]
    3130:	00018804 	andeq	r8, r1, r4, lsl #16
    3134:	05bf0a00 	ldreq	r0, [pc, #2560]!	; 3b3c <startup-0x1fffc4c4>
    3138:	042c0000 	strteq	r0, [ip], #-0
    313c:	00027915 	andeq	r7, r2, r5, lsl r9
    3140:	65671100 	strbvs	r1, [r7, #-256]!	; 0xffffff00
    3144:	1604006f 	strne	r0, [r4], -pc, rrx
    3148:	000001d7 	ldrdeq	r0, [r0], -r7
    314c:	003f0600 	eorseq	r0, pc, r0, lsl #12
    3150:	17040000 	strne	r0, [r4, -r0]
    3154:	0000002c 	andeq	r0, r0, ip, lsr #32
    3158:	00440604 	subeq	r0, r4, r4, lsl #12
    315c:	17040000 	strne	r0, [r4, -r0]
    3160:	0000002c 	andeq	r0, r0, ip, lsr #32
    3164:	06460608 	strbeq	r0, [r6], -r8, lsl #12
    3168:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    316c:	0000002c 	andeq	r0, r0, ip, lsr #32
    3170:	0659060c 	ldrbeq	r0, [r9], -ip, lsl #12
    3174:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    3178:	0000002c 	andeq	r0, r0, ip, lsr #32
    317c:	047c0610 	ldrbteq	r0, [ip], #-1552	; 0xfffff9f0
    3180:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    3184:	0000002c 	andeq	r0, r0, ip, lsr #32
    3188:	02940614 	addseq	r0, r4, #20, 12	; 0x1400000
    318c:	1a040000 	bne	103194 <startup-0x1fefce6c>
    3190:	0000002c 	andeq	r0, r0, ip, lsr #32
    3194:	05e90618 	strbeq	r0, [r9, #1560]!	; 0x618
    3198:	1b040000 	blne	1031a0 <startup-0x1fefce60>
    319c:	0000028a 	andeq	r0, r0, sl, lsl #5
    31a0:	06fa061c 	usateq	r0, #26, ip, lsl #12
    31a4:	1c040000 	stcne	0, cr0, [r4], {-0}
    31a8:	0000028a 	andeq	r0, r0, sl, lsl #5
    31ac:	00c50620 	sbceq	r0, r5, r0, lsr #12
    31b0:	1d040000 	stcne	0, cr0, [r4, #-0]
    31b4:	0000028a 	andeq	r0, r0, sl, lsl #5
    31b8:	00800624 	addeq	r0, r0, r4, lsr #12
    31bc:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    31c0:	000002a5 	andeq	r0, r0, r5, lsr #5
    31c4:	84130028 	ldrhi	r0, [r3], #-40	; 0xffffffd8
    31c8:	14000002 	strne	r0, [r0], #-2
    31cc:	00000284 	andeq	r0, r0, r4, lsl #5
    31d0:	e8040d00 	stmda	r4, {r8, sl, fp}
    31d4:	0d000001 	stceq	0, cr0, [r0, #-4]
    31d8:	00027904 	andeq	r7, r2, r4, lsl #18
    31dc:	02a51300 	adceq	r1, r5, #0, 6
    31e0:	84140000 	ldrhi	r0, [r4], #-0
    31e4:	14000002 	strne	r0, [r0], #-2
    31e8:	0000002c 	andeq	r0, r0, ip, lsr #32
    31ec:	00002c14 	andeq	r2, r0, r4, lsl ip
    31f0:	040d0000 	streq	r0, [sp], #-0
    31f4:	00000290 	muleq	r0, r0, r2
    31f8:	00040202 	andeq	r0, r4, r2, lsl #4
    31fc:	e81f0400 	ldmda	pc, {sl}	; <UNPREDICTABLE>
    3200:	02000001 	andeq	r0, r0, #1
    3204:	00000401 	andeq	r0, r0, r1, lsl #8
    3208:	02841f04 	addeq	r1, r4, #4, 30
    320c:	2d100000 	ldccs	0, cr0, [r0, #-0]
    3210:	04000002 	streq	r0, [r0], #-2
    3214:	0002ab21 	andeq	sl, r2, r1, lsr #22
    3218:	056f1000 	strbeq	r1, [pc, #-0]!	; 3220 <startup-0x1fffcde0>
    321c:	22040000 	andcs	r0, r4, #0
    3220:	000002ab 	andeq	r0, r0, fp, lsr #5
    3224:	00023b10 	andeq	r3, r2, r0, lsl fp
    3228:	ab230400 	blge	8c4230 <startup-0x1f73bdd0>
    322c:	10000002 	andne	r0, r0, r2
    3230:	000001e6 	andeq	r0, r0, r6, ror #3
    3234:	002c0606 	eoreq	r0, ip, r6, lsl #12
    3238:	19100000 	ldmdbne	r0, {}	; <UNPREDICTABLE>
    323c:	06000003 	streq	r0, [r0], -r3
    3240:	00002c07 	andeq	r2, r0, r7, lsl #24
    3244:	04f61500 	ldrbteq	r1, [r6], #1280	; 0x500
    3248:	1a010000 	bne	43250 <startup-0x1ffbcdb0>
    324c:	00000065 	andeq	r0, r0, r5, rrx
    3250:	6ecc0305 	cdpvs	3, 12, cr0, cr12, cr5, {0}
    3254:	72162000 	andsvc	r2, r6, #0
    3258:	2c1b0100 	ldfcss	f0, [fp], {-0}
    325c:	05000000 	streq	r0, [r0, #-0]
    3260:	005e4403 	subseq	r4, lr, r3, lsl #8
    3264:	0da31720 	stceq	7, cr1, [r3, #128]!	; 0x80
    3268:	02010000 	andeq	r0, r1, #0
    326c:	002ca401 	eoreq	sl, ip, r1, lsl #8
    3270:	00006020 	andeq	r6, r0, r0, lsr #32
    3274:	189c0100 	ldmne	ip, {r8}
    3278:	00000d77 	andeq	r0, r0, r7, ror sp
    327c:	2c04f001 	stccs	0, cr15, [r4], {1}
    3280:	00a02000 	adceq	r2, r0, r0
    3284:	9c010000 	stcls	0, cr0, [r1], {-0}
    3288:	000d4719 	andeq	r4, sp, r9, lsl r7
    328c:	0cd50100 	ldfeqe	f0, [r5], {0}
    3290:	f820002b 			; <UNDEFINED> instruction: 0xf820002b
    3294:	01000000 	mrseq	r0, (UNDEF: 0)
    3298:	0003799c 	muleq	r3, ip, r9
    329c:	31701a00 	cmncc	r0, r0, lsl #20
    32a0:	b6d50100 	ldrblt	r0, [r5], r0, lsl #2
    32a4:	02000002 	andeq	r0, r0, #2
    32a8:	701a5491 	mulsvc	sl, r1, r4
    32ac:	d5010032 	strle	r0, [r1, #-50]	; 0xffffffce
    32b0:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    32b4:	15509102 	ldrbne	r9, [r0, #-258]	; 0xfffffefe
    32b8:	00000d97 	muleq	r0, r7, sp
    32bc:	0379d601 	cmneq	r9, #1048576	; 0x100000
    32c0:	91020000 	mrsls	r0, (UNDEF: 2)
    32c4:	890e005c 	stmdbhi	lr, {r2, r3, r4, r6}
    32c8:	89000003 	stmdbhi	r0, {r0, r1}
    32cc:	12000003 	andne	r0, r0, #3
    32d0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    32d4:	01040011 	tsteq	r4, r1, lsl r0
    32d8:	00048e08 	andeq	r8, r4, r8, lsl #28
    32dc:	0d521900 	vldreq.16	s3, [r2, #-0]	; <UNPREDICTABLE>
    32e0:	bd010000 	stclt	0, cr0, [r1, #-0]
    32e4:	20002a64 	andcs	r2, r0, r4, ror #20
    32e8:	000000a8 	andeq	r0, r0, r8, lsr #1
    32ec:	03d59c01 	bicseq	r9, r5, #256	; 0x100
    32f0:	701a0000 	andsvc	r0, sl, r0
    32f4:	bd010032 	stclt	0, cr0, [r1, #-200]	; 0xffffff38
    32f8:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    32fc:	156c9102 	strbne	r9, [ip, #-258]!	; 0xfffffefe
    3300:	00000cfb 	strdeq	r0, [r0], -fp
    3304:	002cbe01 	eoreq	fp, ip, r1, lsl #28
    3308:	03050000 	movweq	r0, #20480	; 0x5000
    330c:	20005e50 	andcs	r5, r0, r0, asr lr
    3310:	000d1f15 	andeq	r1, sp, r5, lsl pc
    3314:	2cbf0100 	ldfcss	f0, [pc]	; 331c <startup-0x1fffcce4>
    3318:	05000000 	streq	r0, [r0, #-0]
    331c:	005e5403 	subseq	r5, lr, r3, lsl #8
    3320:	69190020 	ldmdbvs	r9, {r5}
    3324:	0100000d 	tsteq	r0, sp
    3328:	0029bca5 	eoreq	fp, r9, r5, lsr #25
    332c:	0000a820 	andeq	sl, r0, r0, lsr #16
    3330:	1a9c0100 	bne	fe703738 <_global_impure_ptr+0xde6fc2a8>
    3334:	1a000004 	bne	334c <startup-0x1fffccb4>
    3338:	01003170 	tsteq	r0, r0, ror r1
    333c:	0002b6a5 	andeq	fp, r2, r5, lsr #13
    3340:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3344:	000cf015 	andeq	pc, ip, r5, lsl r0	; <UNPREDICTABLE>
    3348:	2ca60100 	stfcss	f0, [r6]
    334c:	05000000 	streq	r0, [r0, #-0]
    3350:	005e4803 	subseq	r4, lr, r3, lsl #16
    3354:	0d061520 	cfstr32eq	mvfx1, [r6, #-128]	; 0xffffff80
    3358:	a7010000 	strge	r0, [r1, -r0]
    335c:	0000002c 	andeq	r0, r0, ip, lsr #32
    3360:	5e4c0305 	cdppl	3, 4, cr0, cr12, cr5, {0}
    3364:	1b002000 	blne	b36c <startup-0x1fff4c94>
    3368:	00000d8c 	andeq	r0, r0, ip, lsl #27
    336c:	29a0a101 	stmibcs	r0!, {r0, r8, sp, pc}
    3370:	001c2000 	andseq	r2, ip, r0
    3374:	9c010000 	stcls	0, cr0, [r1], {-0}
    3378:	0000043e 	andeq	r0, r0, lr, lsr r4
    337c:	00054d1c 	andeq	r4, r5, ip, lsl sp
    3380:	65a10100 	strvs	r0, [r1, #256]!	; 0x100
    3384:	02000000 	andeq	r0, r0, #0
    3388:	1d007491 	cfstrsne	mvf7, [r0, #-580]	; 0xfffffdbc
    338c:	00000609 	andeq	r0, r0, r9, lsl #12
    3390:	00659d01 	rsbeq	r9, r5, r1, lsl #26
    3394:	29700000 	ldmdbcs	r0!, {}^	; <UNPREDICTABLE>
    3398:	00302000 	eorseq	r2, r0, r0
    339c:	9c010000 	stcls	0, cr0, [r1], {-0}
    33a0:	000d921e 	andeq	r9, sp, lr, lsl r2
    33a4:	2c260100 	stfcss	f0, [r6], #-0
    33a8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    33ac:	e8200026 	stmda	r0!, {r1, r2, r5}
    33b0:	01000002 	tsteq	r0, r2
    33b4:	00050e9c 	muleq	r5, ip, lr
    33b8:	0dd61c00 	ldcleq	12, cr1, [r6]
    33bc:	26010000 	strcs	r0, [r1], -r0
    33c0:	0000002c 	andeq	r0, r0, ip, lsr #32
    33c4:	1c549102 	ldfnep	f1, [r4], {2}
    33c8:	00000ceb 	andeq	r0, r0, fp, ror #25
    33cc:	050e2601 	streq	r2, [lr, #-1537]	; 0xfffff9ff
    33d0:	91020000 	mrsls	r0, (UNDEF: 2)
    33d4:	0ddb1550 	cfldr64eq	mvdx1, [fp, #320]	; 0x140
    33d8:	27010000 	strcs	r0, [r1, -r0]
    33dc:	00000389 	andeq	r0, r0, r9, lsl #7
    33e0:	155f9102 	ldrbne	r9, [pc, #-258]	; 32e6 <startup-0x1fffcd1a>
    33e4:	00000d2a 	andeq	r0, r0, sl, lsr #26
    33e8:	002c2801 	eoreq	r2, ip, r1, lsl #16
    33ec:	91020000 	mrsls	r0, (UNDEF: 2)
    33f0:	0d351558 	cfldr32eq	mvfx1, [r5, #-352]!	; 0xfffffea0
    33f4:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    33f8:	0000002c 	andeq	r0, r0, ip, lsr #32
    33fc:	1f749102 	svcne	0x00749102
    3400:	01003170 	tsteq	r0, r0, ror r1
    3404:	0002b62d 	andeq	fp, r2, sp, lsr #12
    3408:	68910200 	ldmvs	r1, {r9}
    340c:	0032701f 	eorseq	r7, r2, pc, lsl r0
    3410:	02b62e01 	adcseq	r2, r6, #1, 28
    3414:	91020000 	mrsls	r0, (UNDEF: 2)
    3418:	49411f64 	stmdbmi	r1, {r2, r5, r6, r8, r9, sl, fp, ip}^
    341c:	2f010031 	svccs	0x00010031
    3420:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    3424:	15609102 	strbne	r9, [r0, #-258]!	; 0xfffffefe
    3428:	00000d11 	andeq	r0, r0, r1, lsl sp
    342c:	00213c01 	eoreq	r3, r1, r1, lsl #24
    3430:	91020000 	mrsls	r0, (UNDEF: 2)
    3434:	0d601570 	cfstr64eq	mvdx1, [r0, #-448]!	; 0xfffffe40
    3438:	5b010000 	blpl	43440 <startup-0x1ffbcbc0>
    343c:	00000021 	andeq	r0, r0, r1, lsr #32
    3440:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    3444:	200026d4 	ldrdcs	r2, [r0], -r4
    3448:	00000062 	andeq	r0, r0, r2, rrx
    344c:	000a6921 	andeq	r6, sl, r1, lsr #18
    3450:	2c3e0100 	ldfcss	f0, [lr], #-0
    3454:	22000000 	andcs	r0, r0, #0
    3458:	0d000000 	stceq	0, cr0, [r0, #-0]
    345c:	00051404 	andeq	r1, r5, r4, lsl #8
    3460:	89040d00 	stmdbhi	r4, {r8, sl, fp}
    3464:	23000003 	movwcs	r0, #3
    3468:	00000dac 	andeq	r0, r0, ip, lsr #27
    346c:	00011701 	andeq	r1, r1, r1, lsl #14
    3470:	0c200000 	stceq	0, cr0, [r0], #-0
    3474:	01000000 	mrseq	r0, (UNDEF: 0)
    3478:	Address 0x00003478 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  1c:	24030000 	strcs	r0, [r3], #-0
  20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  24:	000e030b 	andeq	r0, lr, fp, lsl #6
  28:	00160400 	andseq	r0, r6, r0, lsl #8
  2c:	0b3a0e03 	bleq	e83840 <startup-0x1f17c7c0>
  30:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  34:	0f050000 	svceq	0x00050000
  38:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  3c:	06000013 			; <UNDEFINED> instruction: 0x06000013
  40:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
  44:	0000193c 	andeq	r1, r0, ip, lsr r9
  48:	03001607 	movweq	r1, #1543	; 0x607
  4c:	3b0b3a0e 	blcc	2ce88c <startup-0x1fd31774>
  50:	00134905 	andseq	r4, r3, r5, lsl #18
  54:	01170800 	tsteq	r7, r0, lsl #16
  58:	0b3a0b0b 	bleq	e82c8c <startup-0x1f17d374>
  5c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  60:	0d090000 	stceq	0, cr0, [r9, #-0]
  64:	3a0e0300 	bcc	380c6c <startup-0x1fc7f394>
  68:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  6c:	0a000013 	beq	c0 <startup-0x1fffff40>
  70:	13490101 	movtne	r0, #37121	; 0x9101
  74:	00001301 	andeq	r1, r0, r1, lsl #6
  78:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
  7c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  80:	01130c00 	tsteq	r3, r0, lsl #24
  84:	0b3a0b0b 	bleq	e82cb8 <startup-0x1f17d348>
  88:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  8c:	0d0d0000 	stceq	0, cr0, [sp, #-0]
  90:	3a0e0300 	bcc	380c98 <startup-0x1fc7f368>
  94:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  98:	000b3813 	andeq	r3, fp, r3, lsl r8
  9c:	000f0e00 	andeq	r0, pc, r0, lsl #28
  a0:	00000b0b 	andeq	r0, r0, fp, lsl #22
  a4:	4900260f 	stmdbmi	r0, {r0, r1, r2, r3, r9, sl, sp}
  a8:	10000013 	andne	r0, r0, r3, lsl r0
  ac:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
  b0:	0b3a0b0b 	bleq	e82ce4 <startup-0x1f17d31c>
  b4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  b8:	0d110000 	ldceq	0, cr0, [r1, #-0]
  bc:	3a080300 	bcc	200cc4 <startup-0x1fdff33c>
  c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  c4:	000b3813 	andeq	r3, fp, r3, lsl r8
  c8:	01131200 	tsteq	r3, r0, lsl #4
  cc:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
  d0:	0b3b0b3a 	bleq	ec2dc0 <startup-0x1f13d240>
  d4:	00001301 	andeq	r1, r0, r1, lsl #6
  d8:	03000d13 	movweq	r0, #3347	; 0xd13
  dc:	3b0b3a0e 	blcc	2ce91c <startup-0x1fd316e4>
  e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  e4:	14000005 	strne	r0, [r0], #-5
  e8:	19270015 	stmdbne	r7!, {r0, r2, r4}
  ec:	15150000 	ldrne	r0, [r5, #-0]
  f0:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
  f4:	00130113 	andseq	r0, r3, r3, lsl r1
  f8:	00051600 	andeq	r1, r5, r0, lsl #12
  fc:	00001349 	andeq	r1, r0, r9, asr #6
 100:	03011317 	movweq	r1, #4887	; 0x1317
 104:	3a050b0e 	bcc	142d44 <startup-0x1febd2bc>
 108:	01053b0b 	tsteq	r5, fp, lsl #22
 10c:	18000013 	stmdane	r0, {r0, r1, r4}
 110:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 114:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 118:	0b381349 	bleq	e04e44 <startup-0x1f1fb1bc>
 11c:	0d190000 	ldceq	0, cr0, [r9, #-0]
 120:	3a0e0300 	bcc	380d28 <startup-0x1fc7f2d8>
 124:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 128:	00053813 	andeq	r3, r5, r3, lsl r8
 12c:	01131a00 	tsteq	r3, r0, lsl #20
 130:	0b0b0e03 	bleq	2c3944 <startup-0x1fd3c6bc>
 134:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 138:	00001301 	andeq	r1, r0, r1, lsl #6
 13c:	0b01131b 	bleq	44db0 <startup-0x1ffbb250>
 140:	3b0b3a0b 	blcc	2ce974 <startup-0x1fd3168c>
 144:	00130105 	andseq	r0, r3, r5, lsl #2
 148:	01171c00 	tsteq	r7, r0, lsl #24
 14c:	0b3a0b0b 	bleq	e82d80 <startup-0x1f17d280>
 150:	1301053b 	movwne	r0, #5435	; 0x153b
 154:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
 158:	3a0e0300 	bcc	380d60 <startup-0x1fc7f2a0>
 15c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 160:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 164:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 168:	00001301 	andeq	r1, r0, r1, lsl #6
 16c:	0300341f 	movweq	r3, #1055	; 0x41f
 170:	3b0b3a0e 	blcc	2ce9b0 <startup-0x1fd31650>
 174:	3f134905 	svccc	0x00134905
 178:	00193c19 	andseq	r3, r9, r9, lsl ip
 17c:	00342000 	eorseq	r2, r4, r0
 180:	0b3a0e03 	bleq	e83994 <startup-0x1f17c66c>
 184:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 188:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 18c:	34210000 	strtcc	r0, [r1], #-0
 190:	3a0e0300 	bcc	380d98 <startup-0x1fc7f268>
 194:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 198:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 19c:	22000018 	andcs	r0, r0, #24
 1a0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 1a4:	0b3a0e03 	bleq	e839b8 <startup-0x1f17c648>
 1a8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 1ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1b0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1b4:	00130119 	andseq	r0, r3, r9, lsl r1
 1b8:	00052300 	andeq	r2, r5, r0, lsl #6
 1bc:	0b3a0803 	bleq	e821d0 <startup-0x1f17de30>
 1c0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1c4:	00001802 	andeq	r1, r0, r2, lsl #16
 1c8:	03003424 	movweq	r3, #1060	; 0x424
 1cc:	3b0b3a08 	blcc	2ce9f4 <startup-0x1fd3160c>
 1d0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 1d4:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
 1d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 1dc:	0b3b0b3a 	bleq	ec2ecc <startup-0x1f13d134>
 1e0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 1e4:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
 1e8:	03193f01 	tsteq	r9, #1, 30
 1ec:	3b0b3a08 	blcc	2cea14 <startup-0x1fd315ec>
 1f0:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 1f4:	00130119 	andseq	r0, r3, r9, lsl r1
 1f8:	00182700 	andseq	r2, r8, r0, lsl #14
 1fc:	0b280000 	bleq	a00204 <startup-0x1f5ffdfc>
 200:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 204:	00130106 	andseq	r0, r3, r6, lsl #2
 208:	010b2900 	tsteq	fp, r0, lsl #18
 20c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 210:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
 214:	3a0e0301 	bcc	380e20 <startup-0x1fc7f1e0>
 218:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 21c:	11134919 	tstne	r3, r9, lsl r9
 220:	40061201 	andmi	r1, r6, r1, lsl #4
 224:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 228:	00001301 	andeq	r1, r0, r1, lsl #6
 22c:	0300052b 	movweq	r0, #1323	; 0x52b
 230:	3b0b3a0e 	blcc	2cea70 <startup-0x1fd31590>
 234:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 238:	2c000018 	stccs	0, cr0, [r0], {24}
 23c:	0e03012e 	adfeqsp	f0, f3, #0.5
 240:	0b3b0b3a 	bleq	ec2f30 <startup-0x1f13d0d0>
 244:	01111927 	tsteq	r1, r7, lsr #18
 248:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 24c:	01194296 			; <UNDEFINED> instruction: 0x01194296
 250:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 254:	0e03012e 	adfeqsp	f0, f3, #0.5
 258:	0b3b0b3a 	bleq	ec2f48 <startup-0x1f13d0b8>
 25c:	13491927 	movtne	r1, #39207	; 0x9927
 260:	06120111 			; <UNDEFINED> instruction: 0x06120111
 264:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 268:	00130119 	andseq	r0, r3, r9, lsl r1
 26c:	012e2e00 			; <UNDEFINED> instruction: 0x012e2e00
 270:	0b3a0e03 	bleq	e83a84 <startup-0x1f17c57c>
 274:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 278:	01111349 	tsteq	r1, r9, asr #6
 27c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 280:	00194296 	mulseq	r9, r6, r2
 284:	11010000 	mrsne	r0, (UNDEF: 1)
 288:	130e2501 	movwne	r2, #58625	; 0xe501
 28c:	110e030b 	tstne	lr, fp, lsl #6
 290:	10061201 	andne	r1, r6, r1, lsl #4
 294:	02000017 	andeq	r0, r0, #23
 298:	0b0b0024 	bleq	2c0330 <startup-0x1fd3fcd0>
 29c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 2a0:	24030000 	strcs	r0, [r3], #-0
 2a4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2a8:	000e030b 	andeq	r0, lr, fp, lsl #6
 2ac:	00160400 	andseq	r0, r6, r0, lsl #8
 2b0:	0b3a0e03 	bleq	e83ac4 <startup-0x1f17c53c>
 2b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2b8:	13050000 	movwne	r0, #20480	; 0x5000
 2bc:	3a0b0b01 	bcc	2c2ec8 <startup-0x1fd3d138>
 2c0:	010b3b0b 	tsteq	fp, fp, lsl #22
 2c4:	06000013 			; <UNDEFINED> instruction: 0x06000013
 2c8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 2cc:	0b3b0b3a 	bleq	ec2fbc <startup-0x1f13d044>
 2d0:	0b381349 	bleq	e04ffc <startup-0x1f1fb004>
 2d4:	17070000 	strne	r0, [r7, -r0]
 2d8:	3a0b0b01 	bcc	2c2ee4 <startup-0x1fd3d11c>
 2dc:	010b3b0b 	tsteq	fp, fp, lsl #22
 2e0:	08000013 	stmdaeq	r0, {r0, r1, r4}
 2e4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 2e8:	0b3b0b3a 	bleq	ec2fd8 <startup-0x1f13d028>
 2ec:	00001349 	andeq	r1, r0, r9, asr #6
 2f0:	49000d09 	stmdbmi	r0, {r0, r3, r8, sl, fp}
 2f4:	0a000013 	beq	348 <startup-0x1ffffcb8>
 2f8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 2fc:	0b3a0b0b 	bleq	e82f30 <startup-0x1f17d0d0>
 300:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 304:	0d0b0000 	stceq	0, cr0, [fp, #-0]
 308:	38134900 	ldmdacc	r3, {r8, fp, lr}
 30c:	0c00000b 	stceq	0, cr0, [r0], {11}
 310:	13490035 	movtne	r0, #36917	; 0x9035
 314:	0f0d0000 	svceq	0x000d0000
 318:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 31c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 320:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 324:	0b3a0e03 	bleq	e83b38 <startup-0x1f17c4c8>
 328:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 32c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 330:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 334:	00130119 	andseq	r0, r3, r9, lsl r1
 338:	00050f00 	andeq	r0, r5, r0, lsl #30
 33c:	0b3a0e03 	bleq	e83b50 <startup-0x1f17c4b0>
 340:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 344:	00001802 	andeq	r1, r0, r2, lsl #16
 348:	03003410 	movweq	r3, #1040	; 0x410
 34c:	3b0b3a08 	blcc	2ceb74 <startup-0x1fd3148c>
 350:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 354:	11000018 	tstne	r0, r8, lsl r0
 358:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 35c:	0b3a0e03 	bleq	e83b70 <startup-0x1f17c490>
 360:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 364:	06120111 			; <UNDEFINED> instruction: 0x06120111
 368:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 36c:	12000019 	andne	r0, r0, #25
 370:	0e03012e 	adfeqsp	f0, f3, #0.5
 374:	0b3b0b3a 	bleq	ec3064 <startup-0x1f13cf9c>
 378:	01111927 	tsteq	r1, r7, lsr #18
 37c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 380:	01194296 			; <UNDEFINED> instruction: 0x01194296
 384:	13000013 	movwne	r0, #19
 388:	08030005 	stmdaeq	r3, {r0, r2}
 38c:	0b3b0b3a 	bleq	ec307c <startup-0x1f13cf84>
 390:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 394:	34140000 	ldrcc	r0, [r4], #-0
 398:	3a0e0300 	bcc	380fa0 <startup-0x1fc7f060>
 39c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3a0:	00180213 	andseq	r0, r8, r3, lsl r2
 3a4:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
 3a8:	0b3a0e03 	bleq	e83bbc <startup-0x1f17c444>
 3ac:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 3b0:	01111349 	tsteq	r1, r9, asr #6
 3b4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 3b8:	01194296 			; <UNDEFINED> instruction: 0x01194296
 3bc:	16000013 			; <UNDEFINED> instruction: 0x16000013
 3c0:	0e03012e 	adfeqsp	f0, f3, #0.5
 3c4:	0b3b0b3a 	bleq	ec30b4 <startup-0x1f13cf4c>
 3c8:	01111927 	tsteq	r1, r7, lsr #18
 3cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 3d0:	01194297 			; <UNDEFINED> instruction: 0x01194297
 3d4:	17000013 	smladne	r0, r3, r0, r0
 3d8:	0e03012e 	adfeqsp	f0, f3, #0.5
 3dc:	0b3b0b3a 	bleq	ec30cc <startup-0x1f13cf34>
 3e0:	01111927 	tsteq	r1, r7, lsr #18
 3e4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 3e8:	00194297 	mulseq	r9, r7, r2
 3ec:	11010000 	mrsne	r0, (UNDEF: 1)
 3f0:	130e2501 	movwne	r2, #58625	; 0xe501
 3f4:	110e030b 	tstne	lr, fp, lsl #6
 3f8:	10061201 	andne	r1, r6, r1, lsl #4
 3fc:	02000017 	andeq	r0, r0, #23
 400:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 404:	0b3a0e03 	bleq	e83c18 <startup-0x1f17c3e8>
 408:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 40c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 410:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 414:	00130119 	andseq	r0, r3, r9, lsl r1
 418:	00050300 	andeq	r0, r5, r0, lsl #6
 41c:	0b3a0803 	bleq	e82430 <startup-0x1f17dbd0>
 420:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 424:	00001802 	andeq	r1, r0, r2, lsl #16
 428:	0b002404 	bleq	9440 <startup-0x1fff6bc0>
 42c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 430:	0500000e 	streq	r0, [r0, #-14]
 434:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 438:	0b3a0e03 	bleq	e83c4c <startup-0x1f17c3b4>
 43c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 440:	06120111 			; <UNDEFINED> instruction: 0x06120111
 444:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 448:	00000019 	andeq	r0, r0, r9, lsl r0
 44c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 450:	030b130e 	movweq	r1, #45838	; 0xb30e
 454:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 458:	00171006 	andseq	r1, r7, r6
 45c:	00160200 	andseq	r0, r6, r0, lsl #4
 460:	0b3a0e03 	bleq	e83c74 <startup-0x1f17c38c>
 464:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 468:	24030000 	strcs	r0, [r3], #-0
 46c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 470:	0008030b 	andeq	r0, r8, fp, lsl #6
 474:	00240400 	eoreq	r0, r4, r0, lsl #8
 478:	0b3e0b0b 	bleq	f830ac <startup-0x1f07cf54>
 47c:	00000e03 	andeq	r0, r0, r3, lsl #28
 480:	0b011305 	bleq	4509c <startup-0x1ffbaf64>
 484:	3b0b3a0b 	blcc	2cecb8 <startup-0x1fd31348>
 488:	0013010b 	andseq	r0, r3, fp, lsl #2
 48c:	000d0600 	andeq	r0, sp, r0, lsl #12
 490:	0b3a0e03 	bleq	e83ca4 <startup-0x1f17c35c>
 494:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 498:	00000b38 	andeq	r0, r0, r8, lsr fp
 49c:	0b011707 	bleq	460c0 <startup-0x1ffb9f40>
 4a0:	3b0b3a0b 	blcc	2cecd4 <startup-0x1fd3132c>
 4a4:	0013010b 	andseq	r0, r3, fp, lsl #2
 4a8:	000d0800 	andeq	r0, sp, r0, lsl #16
 4ac:	0b3a0803 	bleq	e824c0 <startup-0x1f17db40>
 4b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4b4:	0d090000 	stceq	0, cr0, [r9, #-0]
 4b8:	00134900 	andseq	r4, r3, r0, lsl #18
 4bc:	01130a00 	tsteq	r3, r0, lsl #20
 4c0:	0b0b0e03 	bleq	2c3cd4 <startup-0x1fd3c32c>
 4c4:	0b3b0b3a 	bleq	ec31b4 <startup-0x1f13ce4c>
 4c8:	00001301 	andeq	r1, r0, r1, lsl #6
 4cc:	49000d0b 	stmdbmi	r0, {r0, r1, r3, r8, sl, fp}
 4d0:	000b3813 	andeq	r3, fp, r3, lsl r8
 4d4:	00350c00 	eorseq	r0, r5, r0, lsl #24
 4d8:	00001349 	andeq	r1, r0, r9, asr #6
 4dc:	0b000f0d 	bleq	4118 <startup-0x1fffbee8>
 4e0:	0013490b 	andseq	r4, r3, fp, lsl #18
 4e4:	01010e00 	tsteq	r1, r0, lsl #28
 4e8:	13011349 	movwne	r1, #4937	; 0x1349
 4ec:	210f0000 	mrscs	r0, CPSR
 4f0:	2f134900 	svccs	0x00134900
 4f4:	10000005 	andne	r0, r0, r5
 4f8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 4fc:	0b3b0b3a 	bleq	ec31ec <startup-0x1f13ce14>
 500:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 504:	00001802 	andeq	r1, r0, r2, lsl #16
 508:	3f012e11 	svccc	0x00012e11
 50c:	3a0e0319 	bcc	381178 <startup-0x1fc7ee88>
 510:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
 514:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 518:	96184006 	ldrls	r4, [r8], -r6
 51c:	13011942 	movwne	r1, #6466	; 0x1942
 520:	34120000 	ldrcc	r0, [r2], #-0
 524:	3a080300 	bcc	20112c <startup-0x1fdfeed4>
 528:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 52c:	00180213 	andseq	r0, r8, r3, lsl r2
 530:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
 534:	0b3a0e03 	bleq	e83d48 <startup-0x1f17c2b8>
 538:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
 53c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 540:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 544:	00130119 	andseq	r0, r3, r9, lsl r1
 548:	00341400 	eorseq	r1, r4, r0, lsl #8
 54c:	0b3a0e03 	bleq	e83d60 <startup-0x1f17c2a0>
 550:	1349053b 	movtne	r0, #38203	; 0x953b
 554:	00001802 	andeq	r1, r0, r2, lsl #16
 558:	3f012e15 	svccc	0x00012e15
 55c:	3a0e0319 	bcc	3811c8 <startup-0x1fc7ee38>
 560:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 564:	11134919 	tstne	r3, r9, lsl r9
 568:	40061201 	andmi	r1, r6, r1, lsl #4
 56c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 570:	00001301 	andeq	r1, r0, r1, lsl #6
 574:	03000516 	movweq	r0, #1302	; 0x516
 578:	3b0b3a08 	blcc	2ceda0 <startup-0x1fd31260>
 57c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 580:	17000018 	smladne	r0, r8, r0, r0
 584:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 588:	0b3b0b3a 	bleq	ec3278 <startup-0x1f13cd88>
 58c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 590:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
 594:	03193f01 	tsteq	r9, #1, 30
 598:	3b0b3a0e 	blcc	2cedd8 <startup-0x1fd31228>
 59c:	1119270b 	tstne	r9, fp, lsl #14
 5a0:	40061201 	andmi	r1, r6, r1, lsl #4
 5a4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 5a8:	00001301 	andeq	r1, r0, r1, lsl #6
 5ac:	11010b19 	tstne	r1, r9, lsl fp
 5b0:	00061201 	andeq	r1, r6, r1, lsl #4
 5b4:	00341a00 	eorseq	r1, r4, r0, lsl #20
 5b8:	0b3a0803 	bleq	e825cc <startup-0x1f17da34>
 5bc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 5c0:	00001802 	andeq	r1, r0, r2, lsl #16
 5c4:	3f012e1b 	svccc	0x00012e1b
 5c8:	3a0e0319 	bcc	381234 <startup-0x1fc7edcc>
 5cc:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 5d0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 5d4:	96184006 	ldrls	r4, [r8], -r6
 5d8:	13011942 	movwne	r1, #6466	; 0x1942
 5dc:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
 5e0:	03193f00 	tsteq	r9, #0, 30
 5e4:	3b0b3a0e 	blcc	2cee24 <startup-0x1fd311dc>
 5e8:	1119270b 	tstne	r9, fp, lsl #14
 5ec:	40061201 	andmi	r1, r6, r1, lsl #4
 5f0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 5f4:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
 5f8:	3a0e0301 	bcc	381204 <startup-0x1fc7edfc>
 5fc:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 600:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 604:	96184006 	ldrls	r4, [r8], -r6
 608:	13011942 	movwne	r1, #6466	; 0x1942
 60c:	051e0000 	ldreq	r0, [lr, #-0]
 610:	3a0e0300 	bcc	381218 <startup-0x1fc7ede8>
 614:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 618:	00180213 	andseq	r0, r8, r3, lsl r2
 61c:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
 620:	0b3a0e03 	bleq	e83e34 <startup-0x1f17c1cc>
 624:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 628:	01111349 	tsteq	r1, r9, asr #6
 62c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 630:	01194296 			; <UNDEFINED> instruction: 0x01194296
 634:	20000013 	andcs	r0, r0, r3, lsl r0
 638:	0e03012e 	adfeqsp	f0, f3, #0.5
 63c:	0b3b0b3a 	bleq	ec332c <startup-0x1f13ccd4>
 640:	01111927 	tsteq	r1, r7, lsr #18
 644:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 648:	01194297 			; <UNDEFINED> instruction: 0x01194297
 64c:	21000013 	tstcs	r0, r3, lsl r0
 650:	0e03012e 	adfeqsp	f0, f3, #0.5
 654:	0b3b0b3a 	bleq	ec3344 <startup-0x1f13ccbc>
 658:	01111927 	tsteq	r1, r7, lsr #18
 65c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 660:	00194297 	mulseq	r9, r7, r2
 664:	11010000 	mrsne	r0, (UNDEF: 1)
 668:	130e2501 	movwne	r2, #58625	; 0xe501
 66c:	110e030b 	tstne	lr, fp, lsl #6
 670:	10061201 	andne	r1, r6, r1, lsl #4
 674:	02000017 	andeq	r0, r0, #23
 678:	0b0b0024 	bleq	2c0710 <startup-0x1fd3f8f0>
 67c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 680:	24030000 	strcs	r0, [r3], #-0
 684:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 688:	000e030b 	andeq	r0, lr, fp, lsl #6
 68c:	00160400 	andseq	r0, r6, r0, lsl #8
 690:	0b3a0e03 	bleq	e83ea4 <startup-0x1f17c15c>
 694:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 698:	13050000 	movwne	r0, #20480	; 0x5000
 69c:	3a0b0b01 	bcc	2c32a8 <startup-0x1fd3cd58>
 6a0:	010b3b0b 	tsteq	fp, fp, lsl #22
 6a4:	06000013 			; <UNDEFINED> instruction: 0x06000013
 6a8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 6ac:	0b3b0b3a 	bleq	ec339c <startup-0x1f13cc64>
 6b0:	0b381349 	bleq	e053dc <startup-0x1f1fac24>
 6b4:	17070000 	strne	r0, [r7, -r0]
 6b8:	3a0b0b01 	bcc	2c32c4 <startup-0x1fd3cd3c>
 6bc:	010b3b0b 	tsteq	fp, fp, lsl #22
 6c0:	08000013 	stmdaeq	r0, {r0, r1, r4}
 6c4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 6c8:	0b3b0b3a 	bleq	ec33b8 <startup-0x1f13cc48>
 6cc:	00001349 	andeq	r1, r0, r9, asr #6
 6d0:	49000d09 	stmdbmi	r0, {r0, r3, r8, sl, fp}
 6d4:	0a000013 	beq	728 <startup-0x1ffff8d8>
 6d8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 6dc:	0b3a0b0b 	bleq	e83310 <startup-0x1f17ccf0>
 6e0:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 6e4:	0d0b0000 	stceq	0, cr0, [fp, #-0]
 6e8:	38134900 	ldmdacc	r3, {r8, fp, lr}
 6ec:	0c00000b 	stceq	0, cr0, [r0], {11}
 6f0:	13490035 	movtne	r0, #36917	; 0x9035
 6f4:	0f0d0000 	svceq	0x000d0000
 6f8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 6fc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 700:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 704:	0b3a0e03 	bleq	e83f18 <startup-0x1f17c0e8>
 708:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 70c:	01111349 	tsteq	r1, r9, asr #6
 710:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 714:	01194296 			; <UNDEFINED> instruction: 0x01194296
 718:	0f000013 	svceq	0x00000013
 71c:	0111010b 	tsteq	r1, fp, lsl #2
 720:	00000612 	andeq	r0, r0, r2, lsl r6
 724:	03003410 	movweq	r3, #1040	; 0x410
 728:	3b0b3a08 	blcc	2cef50 <startup-0x1fd310b0>
 72c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 730:	11000018 	tstne	r0, r8, lsl r0
 734:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 738:	0b3b0b3a 	bleq	ec3428 <startup-0x1f13cbd8>
 73c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 740:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 744:	3a0e0301 	bcc	381350 <startup-0x1fc7ecb0>
 748:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 74c:	11134919 	tstne	r3, r9, lsl r9
 750:	40061201 	andmi	r1, r6, r1, lsl #4
 754:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 758:	00001301 	andeq	r1, r0, r1, lsl #6
 75c:	03012e13 	movweq	r2, #7699	; 0x1e13
 760:	3b0b3a0e 	blcc	2cefa0 <startup-0x1fd31060>
 764:	1119270b 	tstne	r9, fp, lsl #14
 768:	40061201 	andmi	r1, r6, r1, lsl #4
 76c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 770:	05140000 	ldreq	r0, [r4, #-0]
 774:	3a080300 	bcc	20137c <startup-0x1fdfec84>
 778:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 77c:	00180213 	andseq	r0, r8, r3, lsl r2
 780:	11010000 	mrsne	r0, (UNDEF: 1)
 784:	130e2501 	movwne	r2, #58625	; 0xe501
 788:	110e030b 	tstne	lr, fp, lsl #6
 78c:	10061201 	andne	r1, r6, r1, lsl #4
 790:	02000017 	andeq	r0, r0, #23
 794:	0b0b0024 	bleq	2c082c <startup-0x1fd3f7d4>
 798:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 79c:	24030000 	strcs	r0, [r3], #-0
 7a0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 7a4:	000e030b 	andeq	r0, lr, fp, lsl #6
 7a8:	00160400 	andseq	r0, r6, r0, lsl #8
 7ac:	0b3a0e03 	bleq	e83fc0 <startup-0x1f17c040>
 7b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 7b4:	01050000 	mrseq	r0, (UNDEF: 5)
 7b8:	01134901 	tsteq	r3, r1, lsl #18
 7bc:	06000013 			; <UNDEFINED> instruction: 0x06000013
 7c0:	00000021 	andeq	r0, r0, r1, lsr #32
 7c4:	03003407 	movweq	r3, #1031	; 0x407
 7c8:	3b0b3a0e 	blcc	2cf008 <startup-0x1fd30ff8>
 7cc:	3f13490b 	svccc	0x0013490b
 7d0:	00193c19 	andseq	r3, r9, r9, lsl ip
 7d4:	01130800 	tsteq	r3, r0, lsl #16
 7d8:	0b3a0b0b 	bleq	e8340c <startup-0x1f17cbf4>
 7dc:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 7e0:	0d090000 	stceq	0, cr0, [r9, #-0]
 7e4:	3a080300 	bcc	2013ec <startup-0x1fdfec14>
 7e8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 7ec:	000b3813 	andeq	r3, fp, r3, lsl r8
 7f0:	000d0a00 	andeq	r0, sp, r0, lsl #20
 7f4:	0b3a0e03 	bleq	e84008 <startup-0x1f17bff8>
 7f8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 7fc:	00000b38 	andeq	r0, r0, r8, lsr fp
 800:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
 804:	000b2f13 	andeq	r2, fp, r3, lsl pc
 808:	000f0c00 	andeq	r0, pc, r0, lsl #24
 80c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 810:	130d0000 	movwne	r0, #53248	; 0xd000
 814:	0b0e0301 	bleq	381420 <startup-0x1fc7ebe0>
 818:	3b0b3a0b 	blcc	2cf04c <startup-0x1fd30fb4>
 81c:	0013010b 	andseq	r0, r3, fp, lsl #2
 820:	01150e00 	tsteq	r5, r0, lsl #28
 824:	13011927 	movwne	r1, #6439	; 0x1927
 828:	050f0000 	streq	r0, [pc, #-0]	; 830 <startup-0x1ffff7d0>
 82c:	00134900 	andseq	r4, r3, r0, lsl #18
 830:	01131000 	tsteq	r3, r0
 834:	0b3a050b 	bleq	e81c68 <startup-0x1f17e398>
 838:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 83c:	34110000 	ldrcc	r0, [r1], #-0
 840:	3a0e0300 	bcc	381448 <startup-0x1fc7ebb8>
 844:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 848:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 84c:	12000018 	andne	r0, r0, #24
 850:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 854:	0b3b0b3a 	bleq	ec3544 <startup-0x1f13cabc>
 858:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 85c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 860:	03193f01 	tsteq	r9, #1, 30
 864:	3b0b3a0e 	blcc	2cf0a4 <startup-0x1fd30f5c>
 868:	11192705 	tstne	r9, r5, lsl #14
 86c:	40061201 	andmi	r1, r6, r1, lsl #4
 870:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 874:	00001301 	andeq	r1, r0, r1, lsl #6
 878:	03003414 	movweq	r3, #1044	; 0x414
 87c:	3b0b3a08 	blcc	2cf0a4 <startup-0x1fd30f5c>
 880:	02134905 	andseq	r4, r3, #81920	; 0x14000
 884:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 888:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 88c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 890:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 894:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
 898:	3a0e0301 	bcc	3814a4 <startup-0x1fc7eb5c>
 89c:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
 8a0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 8a4:	96184006 	ldrls	r4, [r8], -r6
 8a8:	13011942 	movwne	r1, #6466	; 0x1942
 8ac:	05170000 	ldreq	r0, [r7, #-0]
 8b0:	3a080300 	bcc	2014b8 <startup-0x1fdfeb48>
 8b4:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 8b8:	00180213 	andseq	r0, r8, r3, lsl r2
 8bc:	00051800 	andeq	r1, r5, r0, lsl #16
 8c0:	0b3a0e03 	bleq	e840d4 <startup-0x1f17bf2c>
 8c4:	1349053b 	movtne	r0, #38203	; 0x953b
 8c8:	00001802 	andeq	r1, r0, r2, lsl #16
 8cc:	3f012e19 	svccc	0x00012e19
 8d0:	3a0e0319 	bcc	38153c <startup-0x1fc7eac4>
 8d4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 8d8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 8dc:	96184006 	ldrls	r4, [r8], -r6
 8e0:	13011942 	movwne	r1, #6466	; 0x1942
 8e4:	0b1a0000 	bleq	6808ec <startup-0x1f97f714>
 8e8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 8ec:	1b000006 	blne	90c <startup-0x1ffff6f4>
 8f0:	08030034 	stmdaeq	r3, {r2, r4, r5}
 8f4:	0b3b0b3a 	bleq	ec35e4 <startup-0x1f13ca1c>
 8f8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 8fc:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
 900:	3a0e0301 	bcc	38150c <startup-0x1fc7eaf4>
 904:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 908:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 90c:	96184006 	ldrls	r4, [r8], -r6
 910:	13011942 	movwne	r1, #6466	; 0x1942
 914:	051d0000 	ldreq	r0, [sp, #-0]
 918:	3a080300 	bcc	201520 <startup-0x1fdfeae0>
 91c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 920:	00180213 	andseq	r0, r8, r3, lsl r2
 924:	00341e00 	eorseq	r1, r4, r0, lsl #28
 928:	0b3a0803 	bleq	e8293c <startup-0x1f17d6c4>
 92c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 930:	051f0000 	ldreq	r0, [pc, #-0]	; 938 <startup-0x1ffff6c8>
 934:	3a0e0300 	bcc	38153c <startup-0x1fc7eac4>
 938:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 93c:	00180213 	andseq	r0, r8, r3, lsl r2
 940:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
 944:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 948:	0b3b0b3a 	bleq	ec3638 <startup-0x1f13c9c8>
 94c:	01111927 	tsteq	r1, r7, lsr #18
 950:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 954:	00194297 	mulseq	r9, r7, r2
 958:	11010000 	mrsne	r0, (UNDEF: 1)
 95c:	130e2501 	movwne	r2, #58625	; 0xe501
 960:	1b0e030b 	blne	381594 <startup-0x1fc7ea6c>
 964:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 968:	00171006 	andseq	r1, r7, r6
 96c:	00240200 	eoreq	r0, r4, r0, lsl #4
 970:	0b3e0b0b 	bleq	f835a4 <startup-0x1f07ca5c>
 974:	00000803 	andeq	r0, r0, r3, lsl #16
 978:	0b002403 	bleq	998c <startup-0x1fff6674>
 97c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 980:	0400000e 	streq	r0, [r0], #-14
 984:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 988:	0b3b0b3a 	bleq	ec3678 <startup-0x1f13c988>
 98c:	00001349 	andeq	r1, r0, r9, asr #6
 990:	0b000f05 	bleq	45ac <startup-0x1fffba54>
 994:	0013490b 	andseq	r4, r3, fp, lsl #18
 998:	00130600 	andseq	r0, r3, r0, lsl #12
 99c:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
 9a0:	16070000 	strne	r0, [r7], -r0
 9a4:	3a0e0300 	bcc	3815ac <startup-0x1fc7ea54>
 9a8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 9ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
 9b0:	0b0b0117 	bleq	2c0e14 <startup-0x1fd3f1ec>
 9b4:	0b3b0b3a 	bleq	ec36a4 <startup-0x1f13c95c>
 9b8:	00001301 	andeq	r1, r0, r1, lsl #6
 9bc:	03000d09 	movweq	r0, #3337	; 0xd09
 9c0:	3b0b3a0e 	blcc	2cf200 <startup-0x1fd30e00>
 9c4:	0013490b 	andseq	r4, r3, fp, lsl #18
 9c8:	01010a00 	tsteq	r1, r0, lsl #20
 9cc:	13011349 	movwne	r1, #4937	; 0x1349
 9d0:	210b0000 	mrscs	r0, (UNDEF: 11)
 9d4:	2f134900 	svccs	0x00134900
 9d8:	0c00000b 	stceq	0, cr0, [r0], {11}
 9dc:	0b0b0113 	bleq	2c0e30 <startup-0x1fd3f1d0>
 9e0:	0b3b0b3a 	bleq	ec36d0 <startup-0x1f13c930>
 9e4:	00001301 	andeq	r1, r0, r1, lsl #6
 9e8:	03000d0d 	movweq	r0, #3341	; 0xd0d
 9ec:	3b0b3a0e 	blcc	2cf22c <startup-0x1fd30dd4>
 9f0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 9f4:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
 9f8:	0b0b000f 	bleq	2c0a3c <startup-0x1fd3f5c4>
 9fc:	260f0000 	strcs	r0, [pc], -r0
 a00:	00134900 	andseq	r4, r3, r0, lsl #18
 a04:	01131000 	tsteq	r3, r0
 a08:	0b0b0e03 	bleq	2c421c <startup-0x1fd3bde4>
 a0c:	0b3b0b3a 	bleq	ec36fc <startup-0x1f13c904>
 a10:	00001301 	andeq	r1, r0, r1, lsl #6
 a14:	03000d11 	movweq	r0, #3345	; 0xd11
 a18:	3b0b3a08 	blcc	2cf240 <startup-0x1fd30dc0>
 a1c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 a20:	1200000b 	andne	r0, r0, #11
 a24:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 a28:	0b3a050b 	bleq	e81e5c <startup-0x1f17e1a4>
 a2c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 a30:	0d130000 	ldceq	0, cr0, [r3, #-0]
 a34:	3a0e0300 	bcc	38163c <startup-0x1fc7e9c4>
 a38:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a3c:	00053813 	andeq	r3, r5, r3, lsl r8
 a40:	00151400 	andseq	r1, r5, r0, lsl #8
 a44:	00001927 	andeq	r1, r0, r7, lsr #18
 a48:	27011515 	smladcs	r1, r5, r5, r1
 a4c:	01134919 	tsteq	r3, r9, lsl r9
 a50:	16000013 			; <UNDEFINED> instruction: 0x16000013
 a54:	13490005 	movtne	r0, #36869	; 0x9005
 a58:	13170000 	tstne	r7, #0
 a5c:	0b0e0301 	bleq	381668 <startup-0x1fc7e998>
 a60:	3b0b3a05 	blcc	2cf27c <startup-0x1fd30d84>
 a64:	00130105 	andseq	r0, r3, r5, lsl #2
 a68:	000d1800 	andeq	r1, sp, r0, lsl #16
 a6c:	0b3a0e03 	bleq	e84280 <startup-0x1f17bd80>
 a70:	1349053b 	movtne	r0, #38203	; 0x953b
 a74:	00000b38 	andeq	r0, r0, r8, lsr fp
 a78:	03000d19 	movweq	r0, #3353	; 0xd19
 a7c:	3b0b3a0e 	blcc	2cf2bc <startup-0x1fd30d44>
 a80:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
 a84:	1a000005 	bne	aa0 <startup-0x1ffff560>
 a88:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 a8c:	0b3a0b0b 	bleq	e836c0 <startup-0x1f17c940>
 a90:	1301053b 	movwne	r0, #5435	; 0x153b
 a94:	131b0000 	tstne	fp, #0
 a98:	3a0b0b01 	bcc	2c36a4 <startup-0x1fd3c95c>
 a9c:	01053b0b 	tsteq	r5, fp, lsl #22
 aa0:	1c000013 	stcne	0, cr0, [r0], {19}
 aa4:	0b0b0117 	bleq	2c0f08 <startup-0x1fd3f0f8>
 aa8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 aac:	00001301 	andeq	r1, r0, r1, lsl #6
 ab0:	03000d1d 	movweq	r0, #3357	; 0xd1d
 ab4:	3b0b3a0e 	blcc	2cf2f4 <startup-0x1fd30d0c>
 ab8:	00134905 	andseq	r4, r3, r5, lsl #18
 abc:	01151e00 	tsteq	r5, r0, lsl #28
 ac0:	13011927 	movwne	r1, #6439	; 0x1927
 ac4:	341f0000 	ldrcc	r0, [pc], #-0	; acc <startup-0x1ffff534>
 ac8:	3a0e0300 	bcc	3816d0 <startup-0x1fc7e930>
 acc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 ad0:	3c193f13 	ldccc	15, cr3, [r9], {19}
 ad4:	20000019 	andcs	r0, r0, r9, lsl r0
 ad8:	00000021 	andeq	r0, r0, r1, lsr #32
 adc:	03003421 	movweq	r3, #1057	; 0x421
 ae0:	3b0b3a0e 	blcc	2cf320 <startup-0x1fd30ce0>
 ae4:	3f13490b 	svccc	0x0013490b
 ae8:	00193c19 	andseq	r3, r9, r9, lsl ip
 aec:	00342200 	eorseq	r2, r4, r0, lsl #4
 af0:	0b3a0e03 	bleq	e84304 <startup-0x1f17bcfc>
 af4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 af8:	00001802 	andeq	r1, r0, r2, lsl #16
 afc:	03003423 	movweq	r3, #1059	; 0x423
 b00:	3b0b3a0e 	blcc	2cf340 <startup-0x1fd30cc0>
 b04:	02134905 	andseq	r4, r3, #81920	; 0x14000
 b08:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
 b0c:	13470034 	movtne	r0, #28724	; 0x7034
 b10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 b14:	00001802 	andeq	r1, r0, r2, lsl #16
 b18:	03012e25 	movweq	r2, #7717	; 0x1e25
 b1c:	3b0b3a0e 	blcc	2cf35c <startup-0x1fd30ca4>
 b20:	1119270b 	tstne	r9, fp, lsl #14
 b24:	40061201 	andmi	r1, r6, r1, lsl #4
 b28:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 b2c:	00001301 	andeq	r1, r0, r1, lsl #6
 b30:	03000526 	movweq	r0, #1318	; 0x526
 b34:	3b0b3a08 	blcc	2cf35c <startup-0x1fd30ca4>
 b38:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 b3c:	27000018 	smladcs	r0, r8, r0, r0
 b40:	0111010b 	tsteq	r1, fp, lsl #2
 b44:	00000612 	andeq	r0, r0, r2, lsl r6
 b48:	03003428 	movweq	r3, #1064	; 0x428
 b4c:	3b0b3a08 	blcc	2cf374 <startup-0x1fd30c8c>
 b50:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 b54:	29000018 	stmdbcs	r0, {r3, r4}
 b58:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 b5c:	0b3a0e03 	bleq	e84370 <startup-0x1f17bc90>
 b60:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 b64:	06120111 			; <UNDEFINED> instruction: 0x06120111
 b68:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 b6c:	00130119 	andseq	r0, r3, r9, lsl r1
 b70:	012e2a00 			; <UNDEFINED> instruction: 0x012e2a00
 b74:	0b3a0e03 	bleq	e84388 <startup-0x1f17bc78>
 b78:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 b7c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 b80:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 b84:	00130119 	andseq	r0, r3, r9, lsl r1
 b88:	00052b00 	andeq	r2, r5, r0, lsl #22
 b8c:	0b3a0e03 	bleq	e843a0 <startup-0x1f17bc60>
 b90:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 b94:	00001802 	andeq	r1, r0, r2, lsl #16
 b98:	3f012e2c 	svccc	0x00012e2c
 b9c:	3a080319 	bcc	201808 <startup-0x1fdfe7f8>
 ba0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 ba4:	01193c13 	tsteq	r9, r3, lsl ip
 ba8:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
 bac:	00000018 	andeq	r0, r0, r8, lsl r0
 bb0:	11010b2e 	tstne	r1, lr, lsr #22
 bb4:	01061201 	tsteq	r6, r1, lsl #4
 bb8:	2f000013 	svccs	0x00000013
 bbc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 bc0:	0b3a0e03 	bleq	e843d4 <startup-0x1f17bc2c>
 bc4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 bc8:	01111349 	tsteq	r1, r9, asr #6
 bcc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 bd0:	01194296 			; <UNDEFINED> instruction: 0x01194296
 bd4:	30000013 	andcc	r0, r0, r3, lsl r0
 bd8:	0e03012e 	adfeqsp	f0, f3, #0.5
 bdc:	0b3b0b3a 	bleq	ec38cc <startup-0x1f13c734>
 be0:	13491927 	movtne	r1, #39207	; 0x9927
 be4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 be8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 bec:	00130119 	andseq	r0, r3, r9, lsl r1
 bf0:	012e3100 			; <UNDEFINED> instruction: 0x012e3100
 bf4:	0b3a0e03 	bleq	e84408 <startup-0x1f17bbf8>
 bf8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 bfc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 c00:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 c04:	00000019 	andeq	r0, r0, r9, lsl r0
 c08:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 c0c:	030b130e 	movweq	r1, #45838	; 0xb30e
 c10:	1117550e 	tstne	r7, lr, lsl #10
 c14:	00171001 	andseq	r1, r7, r1
 c18:	00160200 	andseq	r0, r6, r0, lsl #4
 c1c:	0b3a0e03 	bleq	e84430 <startup-0x1f17bbd0>
 c20:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 c24:	24030000 	strcs	r0, [r3], #-0
 c28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 c2c:	0008030b 	andeq	r0, r8, fp, lsl #6
 c30:	00240400 	eoreq	r0, r4, r0, lsl #8
 c34:	0b3e0b0b 	bleq	f83868 <startup-0x1f07c798>
 c38:	00000e03 	andeq	r0, r0, r3, lsl #28
 c3c:	0b011305 	bleq	45858 <startup-0x1ffba7a8>
 c40:	3b0b3a0b 	blcc	2cf474 <startup-0x1fd30b8c>
 c44:	0013010b 	andseq	r0, r3, fp, lsl #2
 c48:	000d0600 	andeq	r0, sp, r0, lsl #12
 c4c:	0b3a0e03 	bleq	e84460 <startup-0x1f17bba0>
 c50:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 c54:	00000b38 	andeq	r0, r0, r8, lsr fp
 c58:	0b011707 	bleq	4687c <startup-0x1ffb9784>
 c5c:	3b0b3a0b 	blcc	2cf490 <startup-0x1fd30b70>
 c60:	0013010b 	andseq	r0, r3, fp, lsl #2
 c64:	000d0800 	andeq	r0, sp, r0, lsl #16
 c68:	0b3a0803 	bleq	e82c7c <startup-0x1f17d384>
 c6c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 c70:	0d090000 	stceq	0, cr0, [r9, #-0]
 c74:	00134900 	andseq	r4, r3, r0, lsl #18
 c78:	01130a00 	tsteq	r3, r0, lsl #20
 c7c:	0b0b0e03 	bleq	2c4490 <startup-0x1fd3bb70>
 c80:	0b3b0b3a 	bleq	ec3970 <startup-0x1f13c690>
 c84:	00001301 	andeq	r1, r0, r1, lsl #6
 c88:	49000d0b 	stmdbmi	r0, {r0, r1, r3, r8, sl, fp}
 c8c:	000b3813 	andeq	r3, fp, r3, lsl r8
 c90:	00350c00 	eorseq	r0, r5, r0, lsl #24
 c94:	00001349 	andeq	r1, r0, r9, asr #6
 c98:	0b000f0d 	bleq	48d4 <startup-0x1fffb72c>
 c9c:	0013490b 	andseq	r4, r3, fp, lsl #18
 ca0:	01010e00 	tsteq	r1, r0, lsl #28
 ca4:	13011349 	movwne	r1, #4937	; 0x1349
 ca8:	210f0000 	mrscs	r0, CPSR
 cac:	10000000 	andne	r0, r0, r0
 cb0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 cb4:	0b3b0b3a 	bleq	ec39a4 <startup-0x1f13c65c>
 cb8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 cbc:	0000193c 	andeq	r1, r0, ip, lsr r9
 cc0:	03000d11 	movweq	r0, #3345	; 0xd11
 cc4:	3b0b3a08 	blcc	2cf4ec <startup-0x1fd30b14>
 cc8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 ccc:	1200000b 	andne	r0, r0, #11
 cd0:	13490021 	movtne	r0, #36897	; 0x9021
 cd4:	00000b2f 	andeq	r0, r0, pc, lsr #22
 cd8:	27011513 	smladcs	r1, r3, r5, r1
 cdc:	00130119 	andseq	r0, r3, r9, lsl r1
 ce0:	00051400 	andeq	r1, r5, r0, lsl #8
 ce4:	00001349 	andeq	r1, r0, r9, asr #6
 ce8:	03003415 	movweq	r3, #1045	; 0x415
 cec:	3b0b3a0e 	blcc	2cf52c <startup-0x1fd30ad4>
 cf0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 cf4:	16000018 			; <UNDEFINED> instruction: 0x16000018
 cf8:	08030034 	stmdaeq	r3, {r2, r4, r5}
 cfc:	0b3b0b3a 	bleq	ec39ec <startup-0x1f13c614>
 d00:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 d04:	00001802 	andeq	r1, r0, r2, lsl #16
 d08:	03002e17 	movweq	r2, #3607	; 0xe17
 d0c:	3b0b3a0e 	blcc	2cf54c <startup-0x1fd30ab4>
 d10:	11192705 	tstne	r9, r5, lsl #14
 d14:	40061201 	andmi	r1, r6, r1, lsl #4
 d18:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 d1c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
 d20:	3a0e0300 	bcc	381928 <startup-0x1fc7e6d8>
 d24:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 d28:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 d2c:	96184006 	ldrls	r4, [r8], -r6
 d30:	00001942 	andeq	r1, r0, r2, asr #18
 d34:	03012e19 	movweq	r2, #7705	; 0x1e19
 d38:	3b0b3a0e 	blcc	2cf578 <startup-0x1fd30a88>
 d3c:	1119270b 	tstne	r9, fp, lsl #14
 d40:	40061201 	andmi	r1, r6, r1, lsl #4
 d44:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 d48:	00001301 	andeq	r1, r0, r1, lsl #6
 d4c:	0300051a 	movweq	r0, #1306	; 0x51a
 d50:	3b0b3a08 	blcc	2cf578 <startup-0x1fd30a88>
 d54:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 d58:	1b000018 	blne	dc0 <startup-0x1ffff240>
 d5c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 d60:	0b3a0e03 	bleq	e84574 <startup-0x1f17ba8c>
 d64:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 d68:	06120111 			; <UNDEFINED> instruction: 0x06120111
 d6c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 d70:	00130119 	andseq	r0, r3, r9, lsl r1
 d74:	00051c00 	andeq	r1, r5, r0, lsl #24
 d78:	0b3a0e03 	bleq	e8458c <startup-0x1f17ba74>
 d7c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 d80:	00001802 	andeq	r1, r0, r2, lsl #16
 d84:	3f002e1d 	svccc	0x00002e1d
 d88:	3a0e0319 	bcc	3819f4 <startup-0x1fc7e60c>
 d8c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 d90:	11134919 	tstne	r3, r9, lsl r9
 d94:	40061201 	andmi	r1, r6, r1, lsl #4
 d98:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 d9c:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
 da0:	03193f01 	tsteq	r9, #1, 30
 da4:	3b0b3a0e 	blcc	2cf5e4 <startup-0x1fd30a1c>
 da8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 dac:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 db0:	96184006 	ldrls	r4, [r8], -r6
 db4:	13011942 	movwne	r1, #6466	; 0x1942
 db8:	341f0000 	ldrcc	r0, [pc], #-0	; dc0 <startup-0x1ffff240>
 dbc:	3a080300 	bcc	2019c4 <startup-0x1fdfe63c>
 dc0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 dc4:	00180213 	andseq	r0, r8, r3, lsl r2
 dc8:	010b2000 	mrseq	r2, (UNDEF: 11)
 dcc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 dd0:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
 dd4:	03193f01 	tsteq	r9, #1, 30
 dd8:	3b0b3a0e 	blcc	2cf618 <startup-0x1fd309e8>
 ddc:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 de0:	22000019 	andcs	r0, r0, #25
 de4:	00000018 	andeq	r0, r0, r8, lsl r0
 de8:	3f002e23 	svccc	0x00002e23
 dec:	3a0e0319 	bcc	381a58 <startup-0x1fc7e5a8>
 df0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
 df4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 df8:	97184006 	ldrls	r4, [r8, -r6]
 dfc:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000774 	andeq	r0, r0, r4, ror r7
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	0dbb0002 	ldceq	0, cr0, [fp, #8]!
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000784 	andcs	r0, r0, r4, lsl #15
  34:	00000346 	andeq	r0, r0, r6, asr #6
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	11310002 	teqne	r1, r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000acc 	andcs	r0, r0, ip, asr #21
  54:	000000da 	ldrdeq	r0, [r0], -sl
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	11c20002 	bicne	r0, r2, r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	20000ba8 	andcs	r0, r0, r8, lsr #23
  74:	00000888 	andeq	r0, r0, r8, lsl #17
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	17390002 	ldrne	r0, [r9, -r2]!
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	20001430 	andcs	r1, r0, r0, lsr r4
  94:	00000292 	muleq	r0, r2, r2
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	1a070002 	bne	1c00b4 <startup-0x1fe3ff4c>
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	200016c4 	andcs	r1, r0, r4, asr #13
  b4:	00000a88 	andeq	r0, r0, r8, lsl #21
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	20e90002 	rsccs	r0, r9, r2
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	2000214c 	andcs	r2, r0, ip, asr #2
  d4:	0000053c 	andeq	r0, r0, ip, lsr r5
	...
  e0:	00000024 	andeq	r0, r0, r4, lsr #32
  e4:	2f4d0002 	svccs	0x004d0002
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	20002688 	andcs	r2, r0, r8, lsl #13
  f4:	0000067c 	andeq	r0, r0, ip, ror r6
  f8:	20000000 	andcs	r0, r0, r0
  fc:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000021f 	andeq	r0, r0, pc, lsl r2
   4:	00fa0002 	rscseq	r0, sl, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	5a010000 	bpl	40020 <startup-0x1ffbffe0>
  1c:	6f4d2f3a 	svcvs	0x004d2f3a
  20:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  24:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  28:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  2c:	61672f72 	smcvs	29426	; 0x72f2
  30:	6300656d 	movwvs	r6, #1389	; 0x56d
  34:	73635c3a 	cmnvc	r3, #14848	; 0x3a00
  38:	70706165 	rsbsvc	r6, r0, r5, ror #2
  3c:	646f635c 	strbtvs	r6, [pc], #-860	; 44 <startup-0x1fffffbc>
  40:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  44:	6f745c65 	svcvs	0x00745c65
  48:	5c736c6f 	ldclpl	12, cr6, [r3], #-444	; 0xfffffe44
  4c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  50:	5c6d7261 	sfmpl	f7, 2, [sp], #-388	; 0xfffffe7c
  54:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  58:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  5c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  60:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
  64:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  68:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
  6c:	3a630073 	bcc	18c0240 <startup-0x1e73fdc0>
  70:	6573635c 	ldrbvs	r6, [r3, #-860]!	; 0xfffffca4
  74:	5c707061 	ldclpl	0, cr7, [r0], #-388	; 0xfffffe7c
  78:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  7c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
  80:	6f6f745c 	svcvs	0x006f745c
  84:	675c736c 	ldrbvs	r7, [ip, -ip, ror #6]
  88:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
  8c:	6c5c6d72 	mrrcvs	13, 7, r6, ip, cr2
  90:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
  94:	615c6363 	cmpvs	ip, r3, ror #6
  98:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  9c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  a4:	332e365c 			; <UNDEFINED> instruction: 0x332e365c
  a8:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
  ac:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  b0:	00006564 	andeq	r6, r0, r4, ror #10
  b4:	632e4941 			; <UNDEFINED> instruction: 0x632e4941
  b8:	00000100 	andeq	r0, r0, r0, lsl #2
  bc:	6b636f6c 	blvs	18dbe74 <startup-0x1e72418c>
  c0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  c4:	745f0000 	ldrbvc	r0, [pc], #-0	; cc <startup-0x1fffff34>
  c8:	73657079 	cmnvc	r5, #121	; 0x79
  cc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  d0:	74730000 	ldrbtvc	r0, [r3], #-0
  d4:	66656464 	strbtvs	r6, [r5], -r4, ror #8
  d8:	0300682e 	movweq	r6, #2094	; 0x82e
  dc:	65720000 	ldrbvs	r0, [r2, #-0]!
  e0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
  e4:	00020068 	andeq	r0, r2, r8, rrx
  e8:	6a626f00 	bvs	189bcf0 <startup-0x1e764310>
  ec:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
  f0:	00010068 	andeq	r0, r1, r8, rrx
  f4:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
  f8:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
  fc:	003e6e69 	eorseq	r6, lr, r9, ror #28
 100:	00000000 	andeq	r0, r0, r0
 104:	10020500 	andne	r0, r2, r0, lsl #10
 108:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 10c:	914b010b 	cmpls	fp, fp, lsl #2
 110:	834b4b59 	movthi	r4, #47961	; 0xbb59
 114:	914b4b59 	cmpls	fp, r9, asr fp
 118:	834b4b59 	movthi	r4, #47961	; 0xbb59
 11c:	67754d59 			; <UNDEFINED> instruction: 0x67754d59
 120:	2f556767 	svccs	0x00556767
 124:	673e222f 	ldrvs	r2, [lr, -pc, lsr #4]!
 128:	02132502 	andseq	r2, r3, #8388608	; 0x800000
 12c:	25021325 	strcs	r1, [r2, #-805]	; 0xfffffcdb
 130:	13240213 			; <UNDEFINED> instruction: 0x13240213
 134:	02132c02 	andseq	r2, r3, #512	; 0x200
 138:	4b59142c 	blmi	16451f0 <startup-0x1e9bae10>
 13c:	34036767 	strcc	r6, [r3], #-1895	; 0xfffff899
 140:	204e0390 	umaalcs	r0, lr, r0, r3
 144:	03903203 	orrseq	r3, r0, #805306368	; 0x30000000
 148:	03672050 	cmneq	r7, #80	; 0x50
 14c:	5303902f 	movwpl	r9, #12335	; 0x302f
 150:	902d0320 	eorls	r0, sp, r0, lsr #6
 154:	67205603 	strvs	r5, [r0, -r3, lsl #12]!
 158:	90280367 	eorls	r0, r8, r7, ror #6
 15c:	03205a03 			; <UNDEFINED> instruction: 0x03205a03
 160:	5c039026 	stcpl	0, cr9, [r3], {38}	; 0x26
 164:	23036720 	movwcs	r6, #14112	; 0x3720
 168:	205f0390 			; <UNDEFINED> instruction: 0x205f0390
 16c:	03902103 	orrseq	r2, r0, #-1073741824	; 0xc0000000
 170:	674b2065 	strbvs	r2, [fp, -r5, rrx]
 174:	90180367 	andsls	r0, r8, r7, ror #6
 178:	03206a03 			; <UNDEFINED> instruction: 0x03206a03
 17c:	6c039016 	stcvs	0, cr9, [r3], {22}
 180:	13036720 	movwne	r6, #14112	; 0x3720
 184:	206f0390 	mlscs	pc, r0, r3, r0	; <UNPREDICTABLE>
 188:	03901103 	orrseq	r1, r0, #-1073741824	; 0xc0000000
 18c:	67672072 			; <UNDEFINED> instruction: 0x67672072
 190:	03900c03 	orrseq	r0, r0, #768	; 0x300
 194:	0a032076 	beq	c8374 <startup-0x1ff37c8c>
 198:	20780390 			; <UNDEFINED> instruction: 0x20780390
 19c:	951b9767 	ldrls	r9, [fp, #-1895]	; 0xfffff899
 1a0:	833d59ca 	teqhi	sp, #3309568	; 0x328000
 1a4:	833d833d 	teqhi	sp, #-201326592	; 0xf4000000
 1a8:	0200843d 	andeq	r8, r0, #1023410176	; 0x3d000000
 1ac:	58060204 	stmdapl	r6, {r2, r9}
 1b0:	03040200 	movweq	r0, #16896	; 0x4200
 1b4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
 1b8:	4b064a04 	blmi	1929d0 <startup-0x1fe6d630>
 1bc:	594c2130 	stmdbpl	ip, {r4, r5, r8, sp}^
 1c0:	833d833d 	teqhi	sp, #-201326592	; 0xf4000000
 1c4:	843d833d 	ldrthi	r8, [sp], #-829	; 0xfffffcc3
 1c8:	02040200 	andeq	r0, r4, #0, 4
 1cc:	02005806 	andeq	r5, r0, #393216	; 0x60000
 1d0:	00580304 	subseq	r0, r8, r4, lsl #6
 1d4:	4a040402 	bmi	1011e4 <startup-0x1fefee1c>
 1d8:	21304b06 	teqcs	r0, r6, lsl #22
 1dc:	2f2f4b4c 	svccs	0x002f4b4c
 1e0:	673e6767 	ldrvs	r6, [lr, -r7, ror #14]!
 1e4:	83593d83 	cmphi	r9, #8384	; 0x20c0
 1e8:	24835a3d 	strcs	r5, [r3], #2621	; 0xa3d
 1ec:	004b674b 	subeq	r6, fp, fp, asr #14
 1f0:	03020402 	movweq	r0, #9218	; 0x2402
 1f4:	0200586e 	andeq	r5, r0, #7208960	; 0x6e0000
 1f8:	3c060104 	stfccs	f0, [r6], {4}
 1fc:	4a150306 	bmi	540e1c <startup-0x1fabf1e4>
 200:	3d83673e 	stccc	7, cr6, [r3, #248]	; 0xf8
 204:	5a3d8359 	bpl	f60f70 <startup-0x1f09f090>
 208:	674b2483 	strbvs	r2, [fp, -r3, lsl #9]
 20c:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 210:	586e0302 	stmdapl	lr!, {r1, r8, r9}^
 214:	01040200 	mrseq	r0, R12_usr
 218:	03063c06 	movweq	r3, #27654	; 0x6c06
 21c:	0c024a15 			; <UNDEFINED> instruction: 0x0c024a15
 220:	cc010100 	stfgts	f0, [r1], {-0}
 224:	02000000 	andeq	r0, r0, #0
 228:	00004c00 	andeq	r4, r0, r0, lsl #24
 22c:	fb010200 	blx	40a36 <startup-0x1ffbf5ca>
 230:	01000d0e 	tsteq	r0, lr, lsl #26
 234:	00010101 	andeq	r0, r1, r1, lsl #2
 238:	00010000 	andeq	r0, r1, r0
 23c:	3a5a0100 	bcc	1680644 <startup-0x1e97f9bc>
 240:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 244:	6f62616c 	svcvs	0x0062616c
 248:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 24c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 250:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 254:	61000065 	tstvs	r0, r5, rrx
 258:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 25c:	0100632e 	tsteq	r0, lr, lsr #6
 260:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
 264:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
 268:	00010068 	andeq	r0, r1, r8, rrx
 26c:	726f7000 	rsbvc	r7, pc, #0
 270:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
 274:	00000100 	andeq	r0, r0, r0, lsl #2
 278:	02050000 	andeq	r0, r5, #0
 27c:	20000784 	andcs	r0, r0, r4, lsl #15
 280:	68010f03 	stmdavs	r1, {r0, r1, r8, r9, sl, fp}
 284:	6859bb59 	ldmdavs	r9, {r0, r3, r4, r6, r8, r9, fp, ip, sp, pc}^
 288:	13085968 	movwne	r5, #35176	; 0x8968
 28c:	2f677659 	svccs	0x00677659
 290:	3d2f4b3d 	fstmdbxcc	pc!, {d4-d33}	;@ Deprecated
 294:	2f3d3e68 	svccs	0x003d3e68
 298:	3d4c4c2f 	stclcc	12, cr4, [ip, #-188]	; 0xffffff44
 29c:	3d67922f 	sfmcc	f1, 3, [r7, #-188]!	; 0xffffff44
 2a0:	674c593d 	smlaldxvs	r5, ip, sp, r9
 2a4:	4c593d3d 	mrrcmi	13, 3, r3, r9, cr13
 2a8:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 2ac:	a02f3d59 	eorge	r3, pc, r9, asr sp	; <UNPREDICTABLE>
 2b0:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 2b4:	a02f3d5a 	eorge	r3, pc, sl, asr sp	; <UNPREDICTABLE>
 2b8:	02003d75 	andeq	r3, r0, #7488	; 0x1d40
 2bc:	20060104 	andcs	r0, r6, r4, lsl #2
 2c0:	3d3d8406 	cfldrscc	mvf8, [sp, #-24]!	; 0xffffffe8
 2c4:	2f684b59 	svccs	0x00684b59
 2c8:	4b594b4b 	blmi	1652ffc <startup-0x1e9ad004>
 2cc:	3d3d595a 			; <UNDEFINED> instruction: 0x3d3d595a
 2d0:	674cad3e 	smlaldxvs	sl, ip, lr, sp
 2d4:	01040200 	mrseq	r0, R12_usr
 2d8:	84062006 	strhi	r2, [r6], #-6
 2dc:	4c3d593d 			; <UNDEFINED> instruction: 0x4c3d593d
 2e0:	5b68592f 	blpl	1a167a4 <startup-0x1e5e985c>
 2e4:	73212f4b 			; <UNDEFINED> instruction: 0x73212f4b
 2e8:	212f4b4d 			; <UNDEFINED> instruction: 0x212f4b4d
 2ec:	04024d73 	streq	r4, [r2], #-3443	; 0xfffff28d
 2f0:	75010100 	strvc	r0, [r1, #-256]	; 0xffffff00
 2f4:	02000000 	andeq	r0, r0, #0
 2f8:	00003600 	andeq	r3, r0, r0, lsl #12
 2fc:	fb010200 	blx	40b06 <startup-0x1ffbf4fa>
 300:	01000d0e 	tsteq	r0, lr, lsl #26
 304:	00010101 	andeq	r0, r1, r1, lsl #2
 308:	00010000 	andeq	r0, r1, r0
 30c:	3a5a0100 	bcc	1680714 <startup-0x1e97f8ec>
 310:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 314:	6f62616c 	svcvs	0x0062616c
 318:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 31c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 320:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 324:	64000065 	strvs	r0, [r0], #-101	; 0xffffff9b
 328:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 32c:	0100632e 	tsteq	r0, lr, lsr #6
 330:	00000000 	andeq	r0, r0, r0
 334:	0acc0205 	beq	ff300b50 <_global_impure_ptr+0xdf2f96c0>
 338:	09032000 	stmdbeq	r3, {sp}
 33c:	3d3d2f01 	ldccc	15, cr2, [sp, #-4]!
 340:	02003d3d 	andeq	r3, r0, #3904	; 0xf40
 344:	20060104 	andcs	r0, r6, r4, lsl #2
 348:	a03d6806 	eorsge	r6, sp, r6, lsl #16
 34c:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
 350:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 354:	06200601 	strteq	r0, [r0], -r1, lsl #12
 358:	4ba03d68 	blmi	fe80f900 <_global_impure_ptr+0xde808470>
 35c:	2f2f2f21 	svccs	0x002f2f21
 360:	4b4c5e2a 	blmi	1317c10 <startup-0x1ece83f0>
 364:	02605325 	rsbeq	r5, r0, #-1811939328	; 0x94000000
 368:	01010004 	tsteq	r1, r4
 36c:	000001f3 	strdeq	r0, [r0], -r3
 370:	00550002 	subseq	r0, r5, r2
 374:	01020000 	mrseq	r0, (UNDEF: 2)
 378:	000d0efb 	strdeq	r0, [sp], -fp
 37c:	01010101 	tsteq	r1, r1, lsl #2
 380:	01000000 	mrseq	r0, (UNDEF: 0)
 384:	5a010000 	bpl	4038c <startup-0x1ffbfc74>
 388:	6f4d2f3a 	svcvs	0x004d2f3a
 38c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 390:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 394:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 398:	61672f72 	smcvs	29426	; 0x72f2
 39c:	0000656d 	andeq	r6, r0, sp, ror #10
 3a0:	70617267 	rsbvc	r7, r1, r7, ror #4
 3a4:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
 3a8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 3ac:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 3b0:	00000100 	andeq	r0, r0, r0, lsl #2
 3b4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 3b8:	00682e73 	rsbeq	r2, r8, r3, ror lr
 3bc:	70000001 	andvc	r0, r0, r1
 3c0:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
 3c4:	0100682e 	tsteq	r0, lr, lsr #16
 3c8:	00000000 	andeq	r0, r0, r0
 3cc:	0ba80205 	bleq	fea00be8 <_global_impure_ptr+0xde9f9758>
 3d0:	1b032000 	blne	c83d8 <startup-0x1ff37c28>
 3d4:	83596801 	cmphi	r9, #65536	; 0x10000
 3d8:	687659e5 	ldmdavs	r6!, {r0, r2, r5, r6, r7, r8, fp, ip, lr}^
 3dc:	59d78359 	ldmibpl	r7, {r0, r3, r4, r6, r8, r9, pc}^
 3e0:	12036769 	andne	r6, r3, #27525120	; 0x1a40000
 3e4:	206e0374 	rsbcs	r0, lr, r4, ror r3
 3e8:	034a1203 	movteq	r1, #41475	; 0xa203
 3ec:	3d3d2070 	ldccc	0, cr2, [sp, #-448]!	; 0xfffffe40
 3f0:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
 3f4:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
 3f8:	3f4d223d 	svccc	0x004d223d
 3fc:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 400:	752f3d31 	strvc	r3, [pc, #-3377]!	; fffff6d7 <_global_impure_ptr+0xdfff8247>
 404:	25452f3d 	strbcs	r2, [r5, #-3901]	; 0xfffff0c3
 408:	af3d3d23 	svcge	0x003d3d23
 40c:	3d3d3d68 	ldccc	13, cr3, [sp, #-416]!	; 0xfffffe60
 410:	3d2f593d 			; <UNDEFINED> instruction: 0x3d2f593d
 414:	3e3d592f 	vaddcc.f16	s10, s26, s31	; <UNPREDICTABLE>
 418:	593d3d59 	ldmdbpl	sp!, {r0, r3, r4, r6, r8, sl, fp, ip, sp}
 41c:	ae3d303d 	mrcge	0, 1, r3, cr13, cr13, {1}
 420:	4d675967 			; <UNDEFINED> instruction: 0x4d675967
 424:	2f594b91 	svccs	0x00594b91
 428:	593d2f3d 	ldmdbpl	sp!, {r0, r2, r3, r4, r5, r8, r9, sl, fp, sp}
 42c:	3d59303d 	ldclcc	0, cr3, [r9, #-244]	; 0xffffff0c
 430:	3d3d3d30 	ldccc	13, cr3, [sp, #-192]!	; 0xffffff40
 434:	593d9168 	ldmdbpl	sp!, {r3, r5, r6, r8, ip, pc}
 438:	914c833d 	cmpls	ip, sp, lsr r3
 43c:	3d3d593d 			; <UNDEFINED> instruction: 0x3d3d593d
 440:	3d2f4c83 	stccc	12, cr4, [pc, #-524]!	; 23c <startup-0x1ffffdc4>
 444:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
 448:	4b4b4b3d 	blmi	12d3144 <startup-0x1ed2cebc>
 44c:	3e3d4b4b 	vsubcc.f64	d4, d13, d11
 450:	4b9f4b3e 	blmi	fe7d3150 <_global_impure_ptr+0xde7cbcc0>
 454:	03040200 	movweq	r0, #16896	; 0x4200
 458:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 45c:	02004903 	andeq	r4, r0, #49152	; 0xc000
 460:	58060104 	stmdapl	r6, {r2, r8}
 464:	02040200 	andeq	r0, r4, #0, 4
 468:	02004706 	andeq	r4, r0, #1572864	; 0x180000
 46c:	58060104 	stmdapl	r6, {r2, r8}
 470:	694d5106 	stmdbvs	sp, {r1, r2, r8, ip, lr}^
 474:	01040200 	mrseq	r0, R12_usr
 478:	02004a06 	andeq	r4, r0, #24576	; 0x6000
 47c:	004a0204 	subeq	r0, sl, r4, lsl #4
 480:	4a030402 	bmi	c1490 <startup-0x1ff3eb70>
 484:	3e3d4b06 	vaddcc.f64	d4, d13, d6
 488:	763df467 	ldrtvc	pc, [sp], -r7, ror #8	; <UNPREDICTABLE>
 48c:	4c4c4b3d 	vmovmi	d29, r4, ip
 490:	ca9fd7c9 	bgt	fe7f63bc <_global_impure_ptr+0xde7eef2c>
 494:	03a0ae3d 	moveq	sl, #976	; 0x3d0
 498:	1b03ac66 	blne	eb638 <startup-0x1ff149c8>
 49c:	003d6020 	eorseq	r6, sp, r0, lsr #32
 4a0:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 4a4:	03040200 	movweq	r0, #16896	; 0x4200
 4a8:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
 4ac:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 4b0:	003d924c 	eorseq	r9, sp, ip, asr #4
 4b4:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 4b8:	03040200 	movweq	r0, #16896	; 0x4200
 4bc:	040200b9 	streq	r0, [r2], #-185	; 0xffffff47
 4c0:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 4c4:	0059ae4c 	subseq	sl, r9, ip, asr #28
 4c8:	06010402 	streq	r0, [r1], -r2, lsl #8
 4cc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 4d0:	02003c02 	andeq	r3, r0, #512	; 0x200
 4d4:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
 4d8:	f43e3d3e 			; <UNDEFINED> instruction: 0xf43e3d3e
 4dc:	3e3d3d30 	mrccc	13, 1, r3, cr13, cr0, {1}
 4e0:	f27203ae 	vcgt.s<illegal width 64>	d16, d18, d30
 4e4:	84200f03 	strthi	r0, [r0], #-3843	; 0xfffff0fd
 4e8:	02002f5a 	andeq	r2, r0, #360	; 0x168
 4ec:	3c060104 	stfccs	f0, [r6], {4}
 4f0:	02040200 	andeq	r0, r4, #0, 4
 4f4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 4f8:	3d063c03 	stccc	12, cr3, [r6, #-12]
 4fc:	3df43e3d 	ldclcc	14, cr3, [r4, #244]!	; 0xf4
 500:	bbae3f3d 	bllt	feb901fc <_global_impure_ptr+0xdeb88d6c>
 504:	2e700330 	mrccs	3, 3, r0, cr0, cr0, {1}
 508:	922e1103 	eorls	r1, lr, #-1073741824	; 0xc0000000
 50c:	592f2f3e 	stmdbpl	pc!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 510:	01040200 	mrseq	r0, R12_usr
 514:	02005806 	andeq	r5, r0, #393216	; 0x60000
 518:	002e0204 	eoreq	r0, lr, r4, lsl #4
 51c:	20040402 	andcs	r0, r4, r2, lsl #8
 520:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
 524:	c9592f06 	ldmdbgt	r9, {r1, r2, r8, r9, sl, fp, sp}^
 528:	3dbb5a67 			; <UNDEFINED> instruction: 0x3dbb5a67
 52c:	003eadbb 	ldrhteq	sl, [lr], -fp
 530:	03020402 	movweq	r0, #9218	; 0x2402
 534:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
 538:	9e060104 	adflss	f0, f6, f4
 53c:	02040200 	andeq	r0, r4, #0, 4
 540:	02005506 	andeq	r5, r0, #25165824	; 0x1800000
 544:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
 548:	02040200 	andeq	r0, r4, #0, 4
 54c:	02005606 	andeq	r5, r0, #6291456	; 0x600000
 550:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
 554:	58120306 	ldmdapl	r2, {r1, r2, r8, r9}
 558:	3d2f3d92 	stccc	13, cr3, [pc, #-584]!	; 318 <startup-0x1ffffce8>
 55c:	09023d4b 	stmdbeq	r2, {r0, r1, r3, r6, r8, sl, fp, ip, sp}
 560:	10010100 	andne	r0, r1, r0, lsl #2
 564:	02000001 	andeq	r0, r0, #1
 568:	00004d00 	andeq	r4, r0, r0, lsl #26
 56c:	fb010200 	blx	40d76 <startup-0x1ffbf28a>
 570:	01000d0e 	tsteq	r0, lr, lsl #26
 574:	00010101 	andeq	r0, r1, r1, lsl #2
 578:	00010000 	andeq	r0, r1, r0
 57c:	3a5a0100 	bcc	1680984 <startup-0x1e97f67c>
 580:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 584:	6f62616c 	svcvs	0x0062616c
 588:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 58c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 590:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 594:	6b000065 	blvs	730 <startup-0x1ffff8d0>
 598:	61707965 	cmnvs	r0, r5, ror #18
 59c:	00632e64 	rsbeq	r2, r3, r4, ror #28
 5a0:	74000001 	strvc	r0, [r0], #-1
 5a4:	73657079 	cmnvc	r5, #121	; 0x79
 5a8:	0100682e 	tsteq	r0, lr, lsr #16
 5ac:	6f700000 	svcvs	0x00700000
 5b0:	2e737472 	mrccs	4, 3, r7, cr3, cr2, {3}
 5b4:	00010068 	andeq	r0, r1, r8, rrx
 5b8:	05000000 	streq	r0, [r0, #-0]
 5bc:	00143002 	andseq	r3, r4, r2
 5c0:	010a0320 	tsteq	sl, r0, lsr #6
 5c4:	69d7834b 	ldmibvs	r7, {r0, r1, r3, r6, r8, r9, pc}^
 5c8:	009f3d3d 	addseq	r3, pc, sp, lsr sp	; <UNPREDICTABLE>
 5cc:	2c020402 	cfstrscs	mvf0, [r2], {2}
 5d0:	01040200 	mrseq	r0, R12_usr
 5d4:	41063c06 	tstmi	r6, r6, lsl #24
 5d8:	3d3d7621 	ldccc	6, cr7, [sp, #-132]!	; 0xffffff7c
 5dc:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
 5e0:	02002c02 	andeq	r2, r0, #512	; 0x200
 5e4:	3c060104 	stfccs	f0, [r6], {4}
 5e8:	76214106 	strtvc	r4, [r1], -r6, lsl #2
 5ec:	009f3d3d 	addseq	r3, pc, sp, lsr sp	; <UNPREDICTABLE>
 5f0:	2c020402 	cfstrscs	mvf0, [r2], {2}
 5f4:	01040200 	mrseq	r0, R12_usr
 5f8:	41063c06 	tstmi	r6, r6, lsl #24
 5fc:	3d3d7721 	ldccc	7, cr7, [sp, #-132]!	; 0xffffff7c
 600:	003d4c4b 	eorseq	r4, sp, fp, asr #24
 604:	06010402 	streq	r0, [r1], -r2, lsl #8
 608:	c93d063c 	ldmdbgt	sp!, {r2, r3, r4, r5, r9, sl}
 60c:	2f3d5a3d 	svccs	0x003d5a3d
 610:	0200303d 	andeq	r3, r0, #61	; 0x3d
 614:	71030204 	tstvc	r3, r4, lsl #4
 618:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 61c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 620:	213c1503 	teqcs	ip, r3, lsl #10
 624:	4b3d3d4d 	blmi	f4fb60 <startup-0x1f0b04a0>
 628:	02003d4c 	andeq	r3, r0, #76, 26	; 0x1300
 62c:	3c060104 	stfccs	f0, [r6], {4}
 630:	3dc93d06 	stclcc	13, cr3, [r9, #24]
 634:	3d2f3d5a 	stccc	13, cr3, [pc, #-360]!	; 4d4 <startup-0x1ffffb2c>
 638:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
 63c:	2e710302 	cdpcs	3, 7, cr0, cr1, cr2, {0}
 640:	01040200 	mrseq	r0, R12_usr
 644:	03063c06 	movweq	r3, #27654	; 0x6c06
 648:	4d213c15 	stcmi	12, cr3, [r1, #-84]!	; 0xffffffac
 64c:	4c4b3d3d 	mcrrmi	13, 3, r3, fp, cr13
 650:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 654:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 658:	5a3dc93d 	bpl	f72b54 <startup-0x1f08d4ac>
 65c:	303d2f3d 	eorscc	r2, sp, sp, lsr pc
 660:	02040200 	andeq	r0, r4, #0, 4
 664:	002e7103 	eoreq	r7, lr, r3, lsl #2
 668:	06010402 	streq	r0, [r1], -r2, lsl #8
 66c:	1503063c 	strne	r0, [r3, #-1596]	; 0xfffff9c4
 670:	0402213c 	streq	r2, [r2], #-316	; 0xfffffec4
 674:	c9010100 	stmdbgt	r1, {r8}
 678:	02000003 	andeq	r0, r0, #3
 67c:	00006100 	andeq	r6, r0, r0, lsl #2
 680:	fb010200 	blx	40e8a <startup-0x1ffbf176>
 684:	01000d0e 	tsteq	r0, lr, lsl #26
 688:	00010101 	andeq	r0, r1, r1, lsl #2
 68c:	00010000 	andeq	r0, r1, r0
 690:	3a5a0100 	bcc	1680a98 <startup-0x1e97f568>
 694:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 698:	6f62616c 	svcvs	0x0062616c
 69c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 6a0:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 6a4:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 6a8:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
 6ac:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
 6b0:	0100632e 	tsteq	r0, lr, lsr #6
 6b4:	626f0000 	rsbvs	r0, pc, #0
 6b8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 6bc:	0100682e 	tsteq	r0, lr, lsr #16
 6c0:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
 6c4:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
 6c8:	00010068 	andeq	r0, r1, r8, rrx
 6cc:	61726700 	cmnvs	r2, r0, lsl #14
 6d0:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 6d4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 6d8:	2e79616c 	rpwcsez	f6, f1, #4.0
 6dc:	00010068 	andeq	r0, r1, r8, rrx
 6e0:	05000000 	streq	r0, [r0, #-0]
 6e4:	0016c402 	andseq	ip, r6, r2, lsl #8
 6e8:	00c10320 	sbceq	r0, r1, r0, lsr #6
 6ec:	3dbc4b01 			; <UNDEFINED> instruction: 0x3dbc4b01
 6f0:	3d223d22 	stccc	13, cr3, [r2, #-136]!	; 0xffffff78
 6f4:	3f223d22 	svccc	0x00223d22
 6f8:	bb9f4be6 	bllt	fe7d3698 <_global_impure_ptr+0xde7cc208>
 6fc:	3d3d3d84 	ldccc	13, cr3, [sp, #-528]!	; 0xfffffdf0
 700:	01040200 	mrseq	r0, R12_usr
 704:	02003c06 	andeq	r3, r0, #1536	; 0x600
 708:	003c0204 	eorseq	r0, ip, r4, lsl #4
 70c:	3c030402 	cfstrscc	mvf0, [r3], {2}
 710:	68674006 	stmdavs	r7!, {r1, r2, lr}^
 714:	83838383 	orrhi	r8, r3, #201326594	; 0xc000002
 718:	03907503 	orrseq	r7, r0, #12582912	; 0xc00000
 71c:	3f5a200c 	svccc	0x005a200c
 720:	03040200 	movweq	r0, #16896	; 0x4200
 724:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 728:	02005703 	andeq	r5, r0, #786432	; 0xc0000
 72c:	3c060104 	stfccs	f0, [r6], {4}
 730:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
 734:	003d0304 	eorseq	r0, sp, r4, lsl #6
 738:	59030402 	stmdbpl	r3, {r1, sl}
 73c:	03040200 	movweq	r0, #16896	; 0x4200
 740:	04020056 	streq	r0, [r2], #-86	; 0xffffffaa
 744:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 748:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
 74c:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 750:	00590304 	subseq	r0, r9, r4, lsl #6
 754:	56030402 	strpl	r0, [r3], -r2, lsl #8
 758:	01040200 	mrseq	r0, R12_usr
 75c:	40063c06 	andmi	r3, r6, r6, lsl #24
 760:	03040200 	movweq	r0, #16896	; 0x4200
 764:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 768:	02005903 	andeq	r5, r0, #49152	; 0xc000
 76c:	00560304 	subseq	r0, r6, r4, lsl #6
 770:	06010402 	streq	r0, [r1], -r2, lsl #8
 774:	4c40063c 	mcrrmi	6, 3, r0, r0, cr12
 778:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
 77c:	003c0601 	eorseq	r0, ip, r1, lsl #12
 780:	3c020402 	cfstrscc	mvf0, [r2], {2}
 784:	03040200 	movweq	r0, #16896	; 0x4200
 788:	6740063c 	smlaldxvs	r0, r0, ip, r6	; <UNPREDICTABLE>
 78c:	02003d68 	andeq	r3, r0, #104, 26	; 0x1a00
 790:	003d0304 	eorseq	r0, sp, r4, lsl #6
 794:	9d030402 	cfstrsls	mvf0, [r3, #-8]
 798:	01040200 	mrseq	r0, R12_usr
 79c:	02003c06 	andeq	r3, r0, #1536	; 0x600
 7a0:	3b060204 	blcc	180fb8 <startup-0x1fe7f048>
 7a4:	01040200 	mrseq	r0, R12_usr
 7a8:	03063c06 	movweq	r3, #27654	; 0x6c06
 7ac:	0c034a79 			; <UNDEFINED> instruction: 0x0c034a79
 7b0:	2f3d3e20 	svccs	0x003d3e20
 7b4:	03040200 	movweq	r0, #16896	; 0x4200
 7b8:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 7bc:	001f0803 	andseq	r0, pc, r3, lsl #16
 7c0:	06010402 	streq	r0, [r1], -r2, lsl #8
 7c4:	7668063c 			; <UNDEFINED> instruction: 0x7668063c
 7c8:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
 7cc:	02004b03 	andeq	r4, r0, #3072	; 0xc00
 7d0:	00730304 	rsbseq	r0, r3, r4, lsl #6
 7d4:	06010402 	streq	r0, [r1], -r2, lsl #8
 7d8:	0068063c 	rsbeq	r0, r8, ip, lsr r6
 7dc:	4b030402 	blmi	c17ec <startup-0x1ff3e814>
 7e0:	03040200 	movweq	r0, #16896	; 0x4200
 7e4:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
 7e8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 7ec:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 7f0:	02004b03 	andeq	r4, r0, #3072	; 0xc00
 7f4:	00730304 	rsbseq	r0, r3, r4, lsl #6
 7f8:	06010402 	streq	r0, [r1], -r2, lsl #8
 7fc:	0068063c 	rsbeq	r0, r8, ip, lsr r6
 800:	4b030402 	blmi	c1810 <startup-0x1ff3e7f0>
 804:	03040200 	movweq	r0, #16896	; 0x4200
 808:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
 80c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 810:	00594c68 	subseq	r4, r9, r8, ror #24
 814:	06010402 	streq	r0, [r1], -r2, lsl #8
 818:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 81c:	02003c02 	andeq	r3, r0, #512	; 0x200
 820:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
 824:	3d4c4b40 	vstrcc	d20, [ip, #-256]	; 0xffffff00
 828:	03040200 	movweq	r0, #16896	; 0x4200
 82c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 830:	02009d03 	andeq	r9, r0, #3, 26	; 0xc0
 834:	3c060104 	stfccs	f0, [r6], {4}
 838:	02040200 	andeq	r0, r4, #0, 4
 83c:	02003b06 	andeq	r3, r0, #6144	; 0x1800
 840:	3c060104 	stfccs	f0, [r6], {4}
 844:	4a790306 	bmi	1e41464 <startup-0x1e1beb9c>
 848:	3e200c03 	cdpcc	12, 2, cr0, cr0, cr3, {0}
 84c:	672f2f3f 			; <UNDEFINED> instruction: 0x672f2f3f
 850:	03040200 	movweq	r0, #16896	; 0x4200
 854:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 858:	00d50803 	sbcseq	r0, r5, r3, lsl #16
 85c:	06010402 	streq	r0, [r1], -r2, lsl #8
 860:	2f69063c 	svccs	0x0069063c
 864:	0200672f 	andeq	r6, r0, #12320768	; 0xbc0000
 868:	003d0304 	eorseq	r0, sp, r4, lsl #6
 86c:	08030402 	stmdaeq	r3, {r1, sl}
 870:	040200d5 	streq	r0, [r2], #-213	; 0xffffff2b
 874:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 878:	672f2f69 	strvs	r2, [pc, -r9, ror #30]!
 87c:	03040200 	movweq	r0, #16896	; 0x4200
 880:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 884:	00d50803 	sbcseq	r0, r5, r3, lsl #16
 888:	06010402 	streq	r0, [r1], -r2, lsl #8
 88c:	2f69063c 	svccs	0x0069063c
 890:	0200672f 	andeq	r6, r0, #12320768	; 0xbc0000
 894:	003d0304 	eorseq	r0, sp, r4, lsl #6
 898:	08030402 	stmdaeq	r3, {r1, sl}
 89c:	040200d5 	streq	r0, [r2], #-213	; 0xffffff2b
 8a0:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 8a4:	3d3dbd68 	ldccc	13, cr11, [sp, #-416]!	; 0xfffffe60
 8a8:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 8ac:	003c0601 	eorseq	r0, ip, r1, lsl #12
 8b0:	3c020402 	cfstrscc	mvf0, [r2], {2}
 8b4:	03040200 	movweq	r0, #16896	; 0x4200
 8b8:	6740063c 	smlaldxvs	r0, r0, ip, r6	; <UNPREDICTABLE>
 8bc:	83838368 	orrhi	r8, r3, #104, 6	; 0xa0000001
 8c0:	90750383 	rsbsls	r0, r5, r3, lsl #7
 8c4:	5a200c03 	bpl	8038d8 <startup-0x1f7fc728>
 8c8:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
 8cc:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 8d0:	00650304 	rsbeq	r0, r5, r4, lsl #6
 8d4:	06010402 	streq	r0, [r1], -r2, lsl #8
 8d8:	003e063c 	eorseq	r0, lr, ip, lsr r6
 8dc:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 8e0:	03040200 	movweq	r0, #16896	; 0x4200
 8e4:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
 8e8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 8ec:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 8f0:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 8f4:	00650304 	rsbeq	r0, r5, r4, lsl #6
 8f8:	06010402 	streq	r0, [r1], -r2, lsl #8
 8fc:	003e063c 	eorseq	r0, lr, ip, lsr r6
 900:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 904:	03040200 	movweq	r0, #16896	; 0x4200
 908:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
 90c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 910:	005a4c3e 	subseq	r4, sl, lr, lsr ip
 914:	06010402 	streq	r0, [r1], -r2, lsl #8
 918:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
 91c:	02003c02 	andeq	r3, r0, #512	; 0x200
 920:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
 924:	3d68673f 	stclcc	7, cr6, [r8, #-252]!	; 0xffffff04
 928:	03040200 	movweq	r0, #16896	; 0x4200
 92c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 930:	0200ab03 	andeq	sl, r0, #3072	; 0xc00
 934:	3c060104 	stfccs	f0, [r6], {4}
 938:	02040200 	andeq	r0, r4, #0, 4
 93c:	02003b06 	andeq	r3, r0, #6144	; 0x1800
 940:	3c060104 	stfccs	f0, [r6], {4}
 944:	4a7a0306 	bmi	1e81564 <startup-0x1e17ea9c>
 948:	3e200b03 	vmulcc.f64	d0, d0, d3
 94c:	02002f3d 	andeq	r2, r0, #61, 30	; 0xf4
 950:	003d0304 	eorseq	r0, sp, r4, lsl #6
 954:	08030402 	stmdaeq	r3, {r1, sl}
 958:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 95c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 960:	005b7668 	subseq	r7, fp, r8, ror #12
 964:	4b030402 	blmi	c1974 <startup-0x1ff3e68c>
 968:	03040200 	movweq	r0, #16896	; 0x4200
 96c:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
 970:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 974:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 978:	02004b03 	andeq	r4, r0, #3072	; 0xc00
 97c:	00730304 	rsbseq	r0, r3, r4, lsl #6
 980:	06010402 	streq	r0, [r1], -r2, lsl #8
 984:	0068063c 	rsbeq	r0, r8, ip, lsr r6
 988:	4b030402 	blmi	c1998 <startup-0x1ff3e668>
 98c:	03040200 	movweq	r0, #16896	; 0x4200
 990:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
 994:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 998:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 99c:	02004b03 	andeq	r4, r0, #3072	; 0xc00
 9a0:	00730304 	rsbseq	r0, r3, r4, lsl #6
 9a4:	06010402 	streq	r0, [r1], -r2, lsl #8
 9a8:	4c68063c 	stclmi	6, cr0, [r8], #-240	; 0xffffff10
 9ac:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
 9b0:	003c0601 	eorseq	r0, ip, r1, lsl #12
 9b4:	3c020402 	cfstrscc	mvf0, [r2], {2}
 9b8:	03040200 	movweq	r0, #16896	; 0x4200
 9bc:	4b40063c 	blmi	10022b4 <startup-0x1effdd4c>
 9c0:	02003d4c 	andeq	r3, r0, #76, 26	; 0x1300
 9c4:	003d0304 	eorseq	r0, sp, r4, lsl #6
 9c8:	ab030402 	blge	c19d8 <startup-0x1ff3e628>
 9cc:	01040200 	mrseq	r0, R12_usr
 9d0:	02003c06 	andeq	r3, r0, #1536	; 0x600
 9d4:	3b060204 	blcc	1811ec <startup-0x1fe7ee14>
 9d8:	01040200 	mrseq	r0, R12_usr
 9dc:	03063c06 	movweq	r3, #27654	; 0x6c06
 9e0:	0c034a79 			; <UNDEFINED> instruction: 0x0c034a79
 9e4:	2f3f3e20 	svccs	0x003f3e20
 9e8:	0200672f 	andeq	r6, r0, #12320768	; 0xbc0000
 9ec:	003d0304 	eorseq	r0, sp, r4, lsl #6
 9f0:	08030402 	stmdaeq	r3, {r1, sl}
 9f4:	040200d5 	streq	r0, [r2], #-213	; 0xffffff2b
 9f8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 9fc:	672f2f69 	strvs	r2, [pc, -r9, ror #30]!
 a00:	03040200 	movweq	r0, #16896	; 0x4200
 a04:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 a08:	00d50803 	sbcseq	r0, r5, r3, lsl #16
 a0c:	06010402 	streq	r0, [r1], -r2, lsl #8
 a10:	2f69063c 	svccs	0x0069063c
 a14:	0200672f 	andeq	r6, r0, #12320768	; 0xbc0000
 a18:	003d0304 	eorseq	r0, sp, r4, lsl #6
 a1c:	08030402 	stmdaeq	r3, {r1, sl}
 a20:	040200d5 	streq	r0, [r2], #-213	; 0xffffff2b
 a24:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 a28:	672f2f69 	strvs	r2, [pc, -r9, ror #30]!
 a2c:	03040200 	movweq	r0, #16896	; 0x4200
 a30:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 a34:	00d50803 	sbcseq	r0, r5, r3, lsl #16
 a38:	06010402 	streq	r0, [r1], -r2, lsl #8
 a3c:	0268063c 	rsbeq	r0, r8, #60, 12	; 0x3c00000
 a40:	0101000d 	tsteq	r1, sp
 a44:	00000272 	andeq	r0, r0, r2, ror r2
 a48:	01250002 			; <UNDEFINED> instruction: 0x01250002
 a4c:	01020000 	mrseq	r0, (UNDEF: 2)
 a50:	000d0efb 	strdeq	r0, [sp], -fp
 a54:	01010101 	tsteq	r1, r1, lsl #2
 a58:	01000000 	mrseq	r0, (UNDEF: 0)
 a5c:	5a010000 	bpl	40a64 <startup-0x1ffbf59c>
 a60:	6f4d2f3a 	svcvs	0x004d2f3a
 a64:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 a68:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 a6c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 a70:	61672f72 	smcvs	29426	; 0x72f2
 a74:	6300656d 	movwvs	r6, #1389	; 0x56d
 a78:	73635c3a 	cmnvc	r3, #14848	; 0x3a00
 a7c:	70706165 	rsbsvc	r6, r0, r5, ror #2
 a80:	646f635c 	strbtvs	r6, [pc], #-860	; a88 <startup-0x1ffff578>
 a84:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 a88:	6f745c65 	svcvs	0x00745c65
 a8c:	5c736c6f 	ldclpl	12, cr6, [r3], #-444	; 0xfffffe44
 a90:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 a94:	5c6d7261 	sfmpl	f7, 2, [sp], #-388	; 0xfffffe7c
 a98:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 a9c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 aa0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 aa4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
 aa8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 aac:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
 ab0:	3a630073 	bcc	18c0c84 <startup-0x1e73f37c>
 ab4:	6573635c 	ldrbvs	r6, [r3, #-860]!	; 0xfffffca4
 ab8:	5c707061 	ldclpl	0, cr7, [r0], #-388	; 0xfffffe7c
 abc:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 ac0:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 ac4:	6f6f745c 	svcvs	0x006f745c
 ac8:	675c736c 	ldrbvs	r7, [ip, -ip, ror #6]
 acc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
 ad0:	6c5c6d72 	mrrcvs	13, 7, r6, ip, cr2
 ad4:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
 ad8:	615c6363 	cmpvs	ip, r3, ror #6
 adc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 ae0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 ae4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 ae8:	332e365c 			; <UNDEFINED> instruction: 0x332e365c
 aec:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
 af0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 af4:	00006564 	andeq	r6, r0, r4, ror #10
 af8:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 afc:	632e7463 			; <UNDEFINED> instruction: 0x632e7463
 b00:	00000100 	andeq	r0, r0, r0, lsl #2
 b04:	6b636f6c 	blvs	18dc8bc <startup-0x1e723744>
 b08:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 b0c:	745f0000 	ldrbvc	r0, [pc], #-0	; b14 <startup-0x1ffff4ec>
 b10:	73657079 	cmnvc	r5, #121	; 0x79
 b14:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 b18:	74730000 	ldrbtvc	r0, [r3], #-0
 b1c:	66656464 	strbtvs	r6, [r5], -r4, ror #8
 b20:	0300682e 	movweq	r6, #2094	; 0x82e
 b24:	65720000 	ldrbvs	r0, [r2, #-0]!
 b28:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 b2c:	00020068 	andeq	r0, r2, r8, rrx
 b30:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 b34:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 b38:	00000100 	andeq	r0, r0, r0, lsl #2
 b3c:	70617267 	rsbvc	r7, r1, r7, ror #4
 b40:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
 b44:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 b48:	682e7961 	stmdavs	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
 b4c:	00000100 	andeq	r0, r0, r0, lsl #2
 b50:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 b54:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
 b58:	00000100 	andeq	r0, r0, r0, lsl #2
 b5c:	682e4941 	stmdavs	lr!, {r0, r6, r8, fp, lr}
 b60:	00000100 	andeq	r0, r0, r0, lsl #2
 b64:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
 b68:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
 b6c:	00003e6e 	andeq	r3, r0, lr, ror #28
 b70:	00000000 	andeq	r0, r0, r0
 b74:	214c0205 	cmpcs	ip, r5, lsl #4
 b78:	16032000 	strne	r2, [r3], -r0
 b7c:	02004b01 	andeq	r4, r0, #1024	; 0x400
 b80:	003d0304 	eorseq	r0, sp, r4, lsl #6
 b84:	08030402 	stmdaeq	r3, {r1, sl}
 b88:	04020081 	streq	r0, [r2], #-129	; 0xffffff7f
 b8c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 b90:	3d4b4c69 	stclcc	12, cr4, [fp, #-420]	; 0xfffffe5c
 b94:	3d4b3e83 	stclcc	14, cr3, [fp, #-524]	; 0xfffffdf4
 b98:	01040200 	mrseq	r0, R12_usr
 b9c:	ad06ac06 	stcge	12, cr10, [r6, #-24]	; 0xffffffe8
 ba0:	02040200 	andeq	r0, r4, #0, 4
 ba4:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
 ba8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 bac:	003d4b4f 	eorseq	r4, sp, pc, asr #22
 bb0:	06010402 	streq	r0, [r1], -r2, lsl #8
 bb4:	00ad06ac 	adceq	r0, sp, ip, lsr #13
 bb8:	2c020402 	cfstrscs	mvf0, [r2], {2}
 bbc:	01040200 	mrseq	r0, R12_usr
 bc0:	42063c06 	andmi	r3, r6, #1536	; 0x600
 bc4:	3d4b7621 	stclcc	6, cr7, [fp, #-132]	; 0xffffff7c
 bc8:	3d4b843d 	cfstrdcc	mvd8, [fp, #-244]	; 0xffffff0c
 bcc:	01040200 	mrseq	r0, R12_usr
 bd0:	9f06ba06 	svcls	0x0006ba06
 bd4:	02040200 	andeq	r0, r4, #0, 4
 bd8:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
 bdc:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 be0:	003d4b4f 	eorseq	r4, sp, pc, asr #22
 be4:	06010402 	streq	r0, [r1], -r2, lsl #8
 be8:	009f06ba 			; <UNDEFINED> instruction: 0x009f06ba
 bec:	2c020402 	cfstrscs	mvf0, [r2], {2}
 bf0:	01040200 	mrseq	r0, R12_usr
 bf4:	42063c06 	andmi	r3, r6, #1536	; 0x600
 bf8:	3d4b6821 	stclcc	8, cr6, [fp, #-132]	; 0xffffff7c
 bfc:	4b4b3e83 	blmi	12d0610 <startup-0x1ed2f9f0>
 c00:	009f3d30 	addseq	r3, pc, r0, lsr sp	; <UNPREDICTABLE>
 c04:	2c020402 	cfstrscs	mvf0, [r2], {2}
 c08:	01040200 	mrseq	r0, R12_usr
 c0c:	50063c06 	andpl	r3, r6, r6, lsl #24
 c10:	3d304b4b 	fldmdbxcc	r0!, {d4-d40}	;@ Deprecated
 c14:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
 c18:	02002c02 	andeq	r2, r0, #512	; 0x200
 c1c:	3c060104 	stfccs	f0, [r6], {4}
 c20:	4c214306 	stcmi	3, cr4, [r1], #-24	; 0xffffffe8
 c24:	3e833d4b 	cdpcc	13, 8, cr3, cr3, cr11, {2}
 c28:	3d304b4b 	fldmdbxcc	r0!, {d4-d40}	;@ Deprecated
 c2c:	040200ad 	streq	r0, [r2], #-173	; 0xffffff53
 c30:	02002c02 	andeq	r2, r0, #512	; 0x200
 c34:	3c060104 	stfccs	f0, [r6], {4}
 c38:	4b4b5006 	blmi	12d4c58 <startup-0x1ed2b3a8>
 c3c:	00ad3d30 	adceq	r3, sp, r0, lsr sp
 c40:	2c020402 	cfstrscs	mvf0, [r2], {2}
 c44:	01040200 	mrseq	r0, R12_usr
 c48:	43063c06 	movwmi	r3, #27654	; 0x6c06
 c4c:	674b4c21 	strbvs	r4, [fp, -r1, lsr #24]
 c50:	59673e68 	stmdbpl	r7!, {r3, r5, r6, r9, sl, fp, ip, sp}^
 c54:	23836768 	orrcs	r6, r3, #104, 14	; 0x1a00000
 c58:	004b674b 	subeq	r6, fp, fp, asr #14
 c5c:	03020402 	movweq	r0, #9218	; 0x2402
 c60:	02005872 	andeq	r5, r0, #7471104	; 0x720000
 c64:	3c060104 	stfccs	f0, [r6], {4}
 c68:	4a110306 	bmi	441888 <startup-0x1fbbe778>
 c6c:	6859673e 	ldmdavs	r9, {r1, r2, r3, r4, r5, r8, r9, sl, sp, lr}^
 c70:	4b238367 	blmi	8e1a14 <startup-0x1f71e5ec>
 c74:	02004b67 	andeq	r4, r0, #105472	; 0x19c00
 c78:	72030204 	andvc	r0, r3, #4, 4	; 0x40000000
 c7c:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
 c80:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 c84:	4f4a1103 	svcmi	0x004a1103
 c88:	4d3d3d67 	ldcmi	13, cr3, [sp, #-412]!	; 0xfffffe64
 c8c:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 c90:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 c94:	8f080304 	svchi	0x00080304
 c98:	01040200 	mrseq	r0, R12_usr
 c9c:	69063c06 	stmdbvs	r6, {r1, r2, sl, fp, ip, sp}
 ca0:	02004b4c 	andeq	r4, r0, #76, 22	; 0x13000
 ca4:	003d0304 	eorseq	r0, sp, r4, lsl #6
 ca8:	08030402 	stmdaeq	r3, {r1, sl}
 cac:	0402008f 	streq	r0, [r2], #-143	; 0xffffff71
 cb0:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 cb4:	00040269 	andeq	r0, r4, r9, ror #4
 cb8:	01ae0101 			; <UNDEFINED> instruction: 0x01ae0101
 cbc:	00020000 	andeq	r0, r2, r0
 cc0:	00000076 	andeq	r0, r0, r6, ror r0
 cc4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 cc8:	0101000d 	tsteq	r1, sp
 ccc:	00000101 	andeq	r0, r0, r1, lsl #2
 cd0:	00000100 	andeq	r0, r0, r0, lsl #2
 cd4:	2f3a5a01 	svccs	0x003a5a01
 cd8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
 cdc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 ce0:	6f697461 	svcvs	0x00697461
 ce4:	2f72656e 	svccs	0x0072656e
 ce8:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 cec:	74730000 	ldrbtvc	r0, [r3], #-0
 cf0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 cf4:	00632e70 	rsbeq	r2, r3, r0, ror lr
 cf8:	74000001 	strvc	r0, [r0], #-1
 cfc:	73657079 	cmnvc	r5, #121	; 0x79
 d00:	0100682e 	tsteq	r0, lr, lsr #16
 d04:	6f700000 	svcvs	0x00700000
 d08:	2e737472 	mrccs	4, 3, r7, cr3, cr2, {3}
 d0c:	00010068 	andeq	r0, r1, r8, rrx
 d10:	6a626f00 	bvs	189c918 <startup-0x1e7636e8>
 d14:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 d18:	00010068 	andeq	r0, r1, r8, rrx
 d1c:	61726700 	cmnvs	r2, r0, lsl #14
 d20:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 d24:	70736964 	rsbsvc	r6, r3, r4, ror #18
 d28:	2e79616c 	rpwcsez	f6, f1, #4.0
 d2c:	00010068 	andeq	r0, r1, r8, rrx
 d30:	2e494100 	dvfcse	f4, f1, f0
 d34:	00010068 	andeq	r0, r1, r8, rrx
 d38:	05000000 	streq	r0, [r0, #-0]
 d3c:	00000002 	andeq	r0, r0, r2
 d40:	02960320 	addseq	r0, r6, #32, 6	; 0x80000000
 d44:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
 d48:	01010003 	tsteq	r1, r3
 d4c:	88020500 	stmdahi	r2, {r8, sl}
 d50:	03200026 			; <UNDEFINED> instruction: 0x03200026
 d54:	325b0125 	subscc	r0, fp, #1073741833	; 0x40000009
 d58:	2f2f2f2f 	svccs	0x002f2f2f
 d5c:	31302f2f 	teqcc	r0, pc, lsr #30
 d60:	672f2f2f 	strvs	r2, [pc, -pc, lsr #30]!
 d64:	d767212f 	strble	r2, [r7, -pc, lsr #2]!
 d68:	3d212f3d 	stccc	15, cr2, [r1, #-244]!	; 0xffffff0c
 d6c:	2f3d212f 	svccs	0x003d212f
 d70:	222f3d21 	eorcs	r3, pc, #2112	; 0x840
 d74:	03587003 	cmpeq	r8, #3
 d78:	315a3c13 	cmpcc	sl, r3, lsl ip
 d7c:	67302f2f 	ldrvs	r2, [r0, -pc, lsr #30]!
 d80:	68213067 	stmdavs	r1!, {r0, r1, r2, r5, r6, ip, sp}
 d84:	59592f2f 	ldmdbpl	r9, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 d88:	592f2f5a 	stmdbpl	pc!, {r1, r3, r4, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 d8c:	2f2f5a59 	svccs	0x002f5a59
 d90:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
 d94:	4d4b312f 	stfmie	f3, [fp, #-188]	; 0xffffff44
 d98:	01040200 	mrseq	r0, R12_usr
 d9c:	4b064a06 	blmi	1935bc <startup-0x1fe6ca44>
 da0:	00688369 	rsbeq	r8, r8, r9, ror #6
 da4:	06010402 	streq	r0, [r1], -r2, lsl #8
 da8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
 dac:	02004a02 	andeq	r4, r0, #8192	; 0x2000
 db0:	064a0304 	strbeq	r0, [sl], -r4, lsl #6
 db4:	0031594b 	eorseq	r5, r1, fp, asr #18
 db8:	06010402 	streq	r0, [r1], -r2, lsl #8
 dbc:	30590658 	subscc	r0, r9, r8, asr r6
 dc0:	033c5403 	teqeq	ip, #50331648	; 0x3000000
 dc4:	00674a30 	rsbeq	r4, r7, r0, lsr sl
 dc8:	06020402 	streq	r0, [r2], -r2, lsl #8
 dcc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
 dd0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
 dd4:	064a0404 	strbeq	r0, [sl], -r4, lsl #8
 dd8:	0200754b 	andeq	r7, r0, #314572800	; 0x12c00000
 ddc:	4a060104 	bmi	1811f4 <startup-0x1fe7ee0c>
 de0:	00754b06 	rsbseq	r4, r5, r6, lsl #22
 de4:	06010402 	streq	r0, [r1], -r2, lsl #8
 de8:	764b064a 	strbvc	r0, [fp], -sl, asr #12
 dec:	08215969 	stmdaeq	r1!, {r0, r3, r5, r6, r8, fp, ip, lr}
 df0:	59832ff5 	stmibpl	r3, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 df4:	763d4b91 			; <UNDEFINED> instruction: 0x763d4b91
 df8:	3d4bd74d 	stclcc	7, cr13, [fp, #-308]	; 0xfffffecc
 dfc:	213d5921 	teqcs	sp, r1, lsr #18
 e00:	3d21593d 			; <UNDEFINED> instruction: 0x3d21593d
 e04:	0200224b 	andeq	r2, r0, #-1342177276	; 0xb0000004
 e08:	4a060104 	bmi	181220 <startup-0x1fe7ede0>
 e0c:	3d914b06 	vldrcc	d4, [r1, #24]
 e10:	d74d923e 	smlaldxle	r9, sp, lr, r2
 e14:	59213d4b 	stmdbpl	r1!, {r0, r1, r3, r6, r8, sl, fp, ip, sp}
 e18:	593d213d 	ldmdbpl	sp!, {r0, r2, r3, r4, r5, r8, sp}
 e1c:	224b3d21 	subcs	r3, fp, #2112	; 0x840
 e20:	01040200 	mrseq	r0, R12_usr
 e24:	4b064a06 	blmi	193644 <startup-0x1fe6c9bc>
 e28:	923e3d91 	eorsls	r3, lr, #9280	; 0x2440
 e2c:	4b309159 	blmi	c25398 <startup-0x1f3dac68>
 e30:	04020091 	streq	r0, [r2], #-145	; 0xffffff6f
 e34:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 e38:	4b914b4b 	blmi	fe453b6c <_global_impure_ptr+0xde44c6dc>
 e3c:	914b4d4b 	cmpls	fp, fp, asr #26
 e40:	01040200 	mrseq	r0, R12_usr
 e44:	4b064a06 	blmi	193664 <startup-0x1fe6c99c>
 e48:	4b4b914b 	blmi	12e537c <startup-0x1ed1ac84>
 e4c:	2f92754d 	svccs	0x0092754d
 e50:	2f59672f 	svccs	0x0059672f
 e54:	672f5967 	strvs	r5, [pc, -r7, ror #18]!
 e58:	59672f59 	stmdbpl	r7!, {r0, r3, r4, r6, r8, r9, sl, fp, sp}^
 e5c:	e63d672f 	ldrt	r6, [sp], -pc, lsr #14
 e60:	673f4034 			; <UNDEFINED> instruction: 0x673f4034
 e64:	02756777 	rsbseq	r6, r5, #31195136	; 0x1dc0000
 e68:	0101000e 	tsteq	r1, lr

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6f73645f 	svcvs	0x0073645f
   4:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
   8:	00656c64 	rsbeq	r6, r5, r4, ror #24
   c:	6f697270 	svcvs	0x00697270
  10:	735f0032 	cmpvc	pc, #50	; 0x32
  14:	00657a69 	rsbeq	r7, r5, r9, ror #20
  18:	6f697270 	svcvs	0x00697270
  1c:	725f0034 	subsvc	r0, pc, #52	; 0x34
  20:	34646e61 	strbtcc	r6, [r4], #-3681	; 0xfffff19f
  24:	655f0038 	ldrbvs	r0, [pc, #-56]	; fffffff4 <_global_impure_ptr+0xdfff8b64>
  28:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
  2c:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
  30:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
  34:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
  38:	6d787000 	ldclvs	0, cr7, [r8, #-0]
  3c:	64007861 	strvs	r7, [r0], #-2145	; 0xfffff79f
  40:	00787269 	rsbseq	r7, r8, r9, ror #4
  44:	79726964 	ldmdbvc	r2!, {r2, r5, r6, r8, fp, sp, lr}^
  48:	63775f00 	cmnvs	r7, #0, 30
  4c:	6d6f7472 	cfstrdvs	mvd7, [pc, #-456]!	; fffffe8c <_global_impure_ptr+0xdfff89fc>
  50:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
  54:	00657461 	rsbeq	r7, r5, r1, ror #8
  58:	7363775f 	cmnvc	r3, #24903680	; 0x17c0000
  5c:	6d6f7472 	cfstrdvs	mvd7, [pc, #-456]!	; fffffe9c <_global_impure_ptr+0xdfff8a0c>
  60:	735f7362 	cmpvc	pc, #-2013265919	; 0x88000001
  64:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
  68:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
  6c:	6f6c2067 	svcvs	0x006c2067
  70:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
  74:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  78:	2064656e 	rsbcs	r6, r4, lr, ror #10
  7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  80:	5f746573 	svcpl	0x00746573
  84:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
  88:	6c5f0064 	mrrcvs	0, 6, r0, pc, cr4	; <UNPREDICTABLE>
  8c:	69736662 	ldmdbvs	r3!, {r1, r5, r6, r9, sl, sp, lr}^
  90:	7000657a 	andvc	r6, r0, sl, ror r5
  94:	316f6972 	smccc	63122	; 0xf692
  98:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
  9c:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
  a0:	00745f65 	rsbseq	r5, r4, r5, ror #30
  a4:	6f697270 	svcvs	0x00697270
  a8:	6d5f0033 	ldclvs	0, cr0, [pc, #-204]	; ffffffe4 <_global_impure_ptr+0xdfff8b54>
  ac:	6f747262 	svcvs	0x00747262
  b0:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
  b4:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
  b8:	44317000 	ldrtmi	r7, [r1], #-0
  bc:	61747369 	cmnvs	r4, r9, ror #6
  c0:	7865636e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
  c4:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
  c8:	5f5f0065 	svcpl	0x005f0065
  cc:	735f6d74 	cmpvc	pc, #116, 26	; 0x1d00
  d0:	6c006365 	stcvs	3, cr6, [r0], {101}	; 0x65
  d4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  d8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
  dc:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  e0:	44317000 	ldrtmi	r7, [r1], #-0
  e4:	61747369 	cmnvs	r4, r9, ror #6
  e8:	7965636e 	stmdbvc	r5!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
  ec:	44327000 	ldrtmi	r7, [r2], #-0
  f0:	61747369 	cmnvs	r4, r9, ror #6
  f4:	7865636e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
  f8:	44327000 	ldrtmi	r7, [r2], #-0
  fc:	61747369 	cmnvs	r4, r9, ror #6
 100:	7965636e 	stmdbvc	r5!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 104:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
 108:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 10c:	5f007374 	svcpl	0x00007374
 110:	66756275 			; <UNDEFINED> instruction: 0x66756275
 114:	6d797000 	ldclvs	0, cr7, [r9, #-0]
 118:	5f007861 	svcpl	0x00007861
 11c:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 120:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
 124:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
 128:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
 12c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
 130:	30373130 	eorscc	r3, r7, r0, lsr r1
 134:	20353132 	eorscs	r3, r5, r2, lsr r1
 138:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
 13c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
 140:	415b2029 	cmpmi	fp, r9, lsr #32
 144:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff3fa <_global_impure_ptr+0xdfff7f6a>
 148:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
 14c:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
 150:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
 154:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
 158:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
 15c:	6f697369 	svcvs	0x00697369
 160:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
 164:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
 168:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
 16c:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
 170:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
 174:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 178:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
 17c:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
 180:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
 184:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
 188:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
 18c:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
 190:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
 194:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
 198:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
 19c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 1a0:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
 1a4:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
 1a8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 1ac:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 1b0:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 1b4:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 1b8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 1c0 <startup-0x1ffffe40>
 1bc:	6f685f6d 	svcvs	0x00685f6d
 1c0:	5f007275 	svcpl	0x00007275
 1c4:	0066735f 	rsbeq	r7, r6, pc, asr r3
 1c8:	5f6e6f5f 	svcpl	0x006e6f5f
 1cc:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 1d0:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
 1d4:	635f0073 	cmpvs	pc, #115	; 0x73
 1d8:	696b6f6f 	stmdbvs	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 1dc:	5f5f0065 	svcpl	0x005f0065
 1e0:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
 1e4:	6c700065 	ldclvs	0, cr0, [r0], #-404	; 0xfffffe6c
 1e8:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
 1ec:	74614531 	strbtvc	r4, [r1], #-1329	; 0xfffffacf
 1f0:	79006e65 	stmdbvc	r0, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
 1f4:	6c6c6f63 	stclvs	15, cr6, [ip], #-396	; 0xfffffe74
 1f8:	6f697369 	svcvs	0x00697369
 1fc:	7469576e 	strbtvc	r5, [r9], #-1902	; 0xfffff892
 200:	616c5068 	cmnvs	ip, r8, rrx
 204:	00726579 	rsbseq	r6, r2, r9, ror r5
 208:	616c665f 	cmnvs	ip, pc, asr r6
 20c:	5f007367 	svcpl	0x00007367
 210:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
 214:	5f006178 	svcpl	0x00006178
 218:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 21c:	625f006e 	subsvs	r0, pc, #110	; 0x6e
 220:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
 224:	7000657a 	andvc	r6, r0, sl, ror r5
 228:	6e696d79 	mcrvs	13, 3, r6, cr9, cr9, {3}
 22c:	616c7000 	cmnvs	ip, r0
 230:	31726579 	cmncc	r2, r9, ror r5
 234:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
 238:	41007463 	tstmi	r0, r3, ror #8
 23c:	624f3149 	subvs	r3, pc, #1073741842	; 0x40000012
 240:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 244:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 248:	66756274 			; <UNDEFINED> instruction: 0x66756274
 24c:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 250:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
 254:	626d5f00 	rsbvs	r5, sp, #0, 30
 258:	6f747273 	svcvs	0x00747273
 25c:	5f736377 	svcpl	0x00736377
 260:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 264:	4f500065 	svcmi	0x00500065
 268:	00544e49 	subseq	r4, r4, r9, asr #28
 26c:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 270:	5f6e656c 	svcpl	0x006e656c
 274:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 278:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
 27c:	49415f74 	stmdbmi	r1, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 280:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 284:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
 288:	00746665 	rsbseq	r6, r4, r5, ror #12
 28c:	616e665f 	cmnvs	lr, pc, asr r6
 290:	00736772 	rsbseq	r6, r3, r2, ror r7
 294:	726f6373 	rsbvc	r6, pc, #-872415231	; 0xcc000001
 298:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
 29c:	49415f74 	stmdbmi	r1, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 2a0:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 2a4:	645f6465 	ldrbvs	r6, [pc], #-1125	; 2ac <startup-0x1ffffd54>
 2a8:	006e776f 	rsbeq	r7, lr, pc, ror #14
 2ac:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
 2b0:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 2b4:	5f49415f 	svcpl	0x0049415f
 2b8:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 2bc:	69725f64 	ldmdbvs	r2!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 2c0:	00746867 	rsbseq	r6, r4, r7, ror #16
 2c4:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 2c8:	3a5a006e 	bcc	1680488 <startup-0x1e97fb78>
 2cc:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 2d0:	6f62616c 	svcvs	0x0062616c
 2d4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 2d8:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 2dc:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 2e0:	49412f65 	stmdbmi	r1, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 2e4:	5f00632e 	svcpl	0x0000632e
 2e8:	636f6c66 	cmnvs	pc, #26112	; 0x6600
 2ec:	00745f6b 	rsbseq	r5, r4, fp, ror #30
 2f0:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 2f4:	00727265 	rsbseq	r7, r2, r5, ror #4
 2f8:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
 2fc:	00746e69 	rsbseq	r6, r4, r9, ror #28
 300:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
 304:	735f616d 	cmpvc	pc, #1073741851	; 0x4000001b
 308:	676e6769 	strbvs	r6, [lr, -r9, ror #14]!
 30c:	5f006d61 	svcpl	0x00006d61
 310:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 314:	6b5f746c 	blvs	17dd4cc <startup-0x1e822b34>
 318:	616c7000 	cmnvs	ip, r0
 31c:	32726579 	rsbscc	r6, r2, #507510784	; 0x1e400000
 320:	65746145 	ldrbvs	r6, [r4, #-325]!	; 0xfffffebb
 324:	6573006e 	ldrbvs	r0, [r3, #-110]!	; 0xffffff92
 328:	49415f74 	stmdbmi	r1, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 32c:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 330:	755f6465 	ldrbvc	r6, [pc, #-1125]	; fffffed3 <_global_impure_ptr+0xdfff8a43>
 334:	5f5f0070 	svcpl	0x005f0070
 338:	5f006d74 	svcpl	0x00006d74
 33c:	6863775f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 340:	735f0062 	cmpvc	pc, #98	; 0x62
 344:	756f6474 	strbvc	r6, [pc, #-1140]!	; fffffed8 <_global_impure_ptr+0xdfff8a48>
 348:	3a5a0074 	bcc	1680520 <startup-0x1e97fae0>
 34c:	706f4d5c 	rsbvc	r4, pc, ip, asr sp	; <UNPREDICTABLE>
 350:	6f62616c 	svcvs	0x0062616c
 354:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 358:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 35c:	6d61675c 	stclvs	7, cr6, [r1, #-368]!	; 0xfffffe90
 360:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 364:	00656c69 	rsbeq	r6, r5, r9, ror #24
 368:	5f746573 	svcpl	0x00746573
 36c:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 370:	49415f64 	stmdbmi	r1, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 374:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 378:	6e5f006f 	cdpvs	0, 5, cr0, cr15, cr15, {3}
 37c:	73626f69 	cmnvc	r2, #420	; 0x1a4
 380:	6f687300 	svcvs	0x00687300
 384:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 388:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 38c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 390:	00746e69 	rsbseq	r6, r4, r9, ror #28
 394:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
 398:	30746978 	rsbscc	r6, r4, r8, ror r9
 39c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 3a0:	6c616e67 	stclvs	14, cr6, [r1], #-412	; 0xfffffe64
 3a4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 3a8:	73615f00 	cmnvc	r1, #0, 30
 3ac:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
 3b0:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
 3b4:	725f0066 	subsvc	r0, pc, #102	; 0x66
 3b8:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
 3bc:	5f5f0074 	svcpl	0x005f0074
 3c0:	00686377 	rsbeq	r6, r8, r7, ror r3
 3c4:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
 3c8:	00545f4b 	subseq	r5, r4, fp, asr #30
 3cc:	65747378 	ldrbvs	r7, [r4, #-888]!	; 0xfffffc88
 3d0:	77007370 	smlsdxvc	r0, r0, r3, r7
 3d4:	5f746e69 	svcpl	0x00746e69
 3d8:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 3dc:	7367616c 	cmnvc	r7, #108, 2
 3e0:	5f5f0032 	svcpl	0x005f0032
 3e4:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 3e8:	00726165 	rsbseq	r6, r2, r5, ror #2
 3ec:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 3f0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 3f4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 3f8:	6f642067 	svcvs	0x00642067
 3fc:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 400:	424f5000 	submi	r5, pc, #0
 404:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
 408:	6f686300 	svcvs	0x00686300
 40c:	4165736f 	cmnmi	r5, pc, ror #6
 410:	72694449 	rsbvc	r4, r9, #1224736768	; 0x49000000
 414:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 418:	5f006e6f 	svcpl	0x00006e6f
 41c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 420:	73790066 	cmnvc	r9, #102	; 0x66
 424:	73706574 	cmnvc	r0, #116, 10	; 0x1d000000
 428:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 430 <startup-0x1ffffbd0>
 42c:	6f6d5f6d 	svcvs	0x006d5f6d
 430:	615f006e 	cmpvs	pc, lr, rrx
 434:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 438:	47500074 			; <UNDEFINED> instruction: 0x47500074
 43c:	454d4f45 	strbmi	r4, [sp, #-3909]	; 0xfffff0bb
 440:	00595254 	subseq	r5, r9, r4, asr r2
 444:	64735f5f 	ldrbtvs	r5, [r3], #-3935	; 0xfffff0a1
 448:	6e696469 	cdpvs	4, 6, cr6, cr9, cr9, {3}
 44c:	5f007469 	svcpl	0x00007469
 450:	5f66666f 	svcpl	0x0066666f
 454:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
 458:	0074616f 	rsbseq	r6, r4, pc, ror #2
 45c:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
 460:	73696c65 	cmnvc	r9, #25856	; 0x6500
 464:	6f6d0074 	svcvs	0x006d0074
 468:	415f6576 	cmpmi	pc, r6, ror r5	; <UNPREDICTABLE>
 46c:	775f0049 	ldrbvc	r0, [pc, -r9, asr #32]
 470:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 2ec <startup-0x1ffffd14>
 474:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
 478:	00657461 	rsbeq	r7, r5, r1, ror #8
 47c:	5378616d 	cmnpl	r8, #1073741851	; 0x4000001b
 480:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 484:	736e7500 	cmnvc	lr, #0, 10
 488:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 48c:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 490:	5f007261 	svcpl	0x00007261
 494:	0077656e 	rsbseq	r6, r7, lr, ror #10
 498:	655f685f 	ldrbvs	r6, [pc, #-2143]	; fffffc41 <_global_impure_ptr+0xdfff87b1>
 49c:	6f6e7272 	svcvs	0x006e7272
 4a0:	6f687300 	svcvs	0x00687300
 4a4:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 4a8:	5f00746e 	svcpl	0x0000746e
 4ac:	5f6d745f 	svcpl	0x006d745f
 4b0:	79616479 	stmdbvc	r1!, {r0, r3, r4, r5, r6, sl, sp, lr}^
 4b4:	735f5f00 	cmpvc	pc, #0, 30
 4b8:	00667562 	rsbeq	r7, r6, r2, ror #10
 4bc:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
 4c0:	5f5f0073 	svcpl	0x005f0073
 4c4:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
 4c8:	626d5f00 	rsbvs	r5, sp, #0, 30
 4cc:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 4d0:	00745f65 	rsbseq	r5, r4, r5, ror #30
 4d4:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
 4d8:	00454c49 	subeq	r4, r5, r9, asr #24
 4dc:	69443170 	stmdbvs	r4, {r4, r5, r6, r8, ip, sp}^
 4e0:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
 4e4:	5f006563 	svcpl	0x00006563
 4e8:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
 4ec:	00657461 	rsbeq	r7, r5, r1, ror #8
 4f0:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
 4f4:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
 4f8:	5f007478 	svcpl	0x00007478
 4fc:	656c626d 	strbvs	r6, [ip, #-621]!	; 0xfffffd93
 500:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
 504:	00657461 	rsbeq	r7, r5, r1, ror #8
 508:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
 50c:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
 510:	6c5f0064 	mrrcvs	0, 6, r0, pc, cr4	; <UNPREDICTABLE>
 514:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 518:	5f5f0065 	svcpl	0x005f0065
 51c:	61656c63 	cmnvs	r5, r3, ror #24
 520:	0070756e 	rsbseq	r7, r0, lr, ror #10
 524:	736e755f 	cmnvc	lr, #398458880	; 0x17c00000
 528:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
 52c:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
 530:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 534:	5f656c61 	svcpl	0x00656c61
 538:	6f666e69 	svcvs	0x00666e69
 53c:	616d5f00 	cmnvs	sp, r0, lsl #30
 540:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
 544:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 548:	00746e65 	rsbseq	r6, r4, r5, ror #28
 54c:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
 550:	5f5f0064 	svcpl	0x005f0064
 554:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 558:	5f5f0074 	svcpl	0x005f0074
 55c:	6b636f6c 	blvs	18dc314 <startup-0x1e723cec>
 560:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
 564:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 568:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
 56c:	70006b65 	andvc	r6, r0, r5, ror #22
 570:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
 574:	624f3272 	subvs	r3, pc, #536870919	; 0x20000007
 578:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 57c:	70665f00 	rsbvc	r5, r6, r0, lsl #30
 580:	745f736f 	ldrbvc	r7, [pc], #-879	; 588 <startup-0x1ffffa78>
 584:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 58c <startup-0x1ffffa74>
 588:	696d5f6d 	stmdbvs	sp!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 58c:	6d5f006e 	ldclvs	0, cr0, [pc, #-440]	; 3dc <startup-0x1ffffc24>
 590:	00746c75 	rsbseq	r6, r4, r5, ror ip
 594:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
 598:	5f6b6f74 	svcpl	0x006b6f74
 59c:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
 5a0:	6f637800 	svcvs	0x00637800
 5a4:	73696c6c 	cmnvc	r9, #108, 24	; 0x6c00
 5a8:	576e6f69 	strbpl	r6, [lr, -r9, ror #30]!
 5ac:	50687469 	rsbpl	r7, r8, r9, ror #8
 5b0:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
 5b4:	665f0072 			; <UNDEFINED> instruction: 0x665f0072
 5b8:	7079746e 	rsbsvc	r7, r9, lr, ror #8
 5bc:	74007365 	strvc	r7, [r0], #-869	; 0xfffffc9b
 5c0:	006a624f 	rsbeq	r6, sl, pc, asr #4
 5c4:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
 5c8:	44327000 	ldrtmi	r7, [r2], #-0
 5cc:	61747369 	cmnvs	r4, r9, ror #6
 5d0:	0065636e 	rsbeq	r6, r5, lr, ror #6
 5d4:	4c555f5f 	mrrcmi	15, 5, r5, r5, cr15	; <UNPREDICTABLE>
 5d8:	00676e6f 	rsbeq	r6, r7, pc, ror #28
 5dc:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
 5e0:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 5e4:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
 5e8:	61726400 	cmnvs	r2, r0, lsl #8
 5ec:	675f0077 			; <UNDEFINED> instruction: 0x675f0077
 5f0:	61626f6c 	cmnvs	r2, ip, ror #30
 5f4:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
 5f8:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
 5fc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
 600:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 604:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
 608:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
 60c:	775f0064 	ldrbvc	r0, [pc, -r4, rrx]
 610:	5f007364 	svcpl	0x00007364
 614:	5f6d745f 	svcpl	0x006d745f
 618:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
 61c:	6c675f00 	stclvs	15, cr5, [r7], #-0
 620:	73006575 	movwvc	r6, #1397	; 0x575
 624:	78657a69 	stmdavc	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 628:	6d6e5f00 	stclvs	15, cr5, [lr, #-0]
 62c:	6f6c6c61 	svcvs	0x006c6c61
 630:	6c5f0063 	mrrcvs	0, 6, r0, pc, cr3	; <UNPREDICTABLE>
 634:	5f613436 	svcpl	0x00613436
 638:	00667562 	rsbeq	r7, r6, r2, ror #10
 63c:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 640:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
 644:	6f700063 	svcvs	0x00700063
 648:	5f007873 	svcpl	0x00007873
 64c:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
 650:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
 654:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
 658:	736f7000 	cmnvc	pc, #0
 65c:	5f5f0079 	svcpl	0x005f0079
 660:	695f6d74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 664:	74736473 	ldrbtvc	r6, [r3], #-1139	; 0xfffffb8d
 668:	6f6c5f00 	svcvs	0x006c5f00
 66c:	746c6163 	strbtvc	r6, [ip], #-355	; 0xfffffe9d
 670:	5f656d69 	svcpl	0x00656d69
 674:	00667562 	rsbeq	r7, r6, r2, ror #10
 678:	6f6c635f 	svcvs	0x006c635f
 67c:	73006573 	movwvc	r6, #1395	; 0x573
 680:	79657a69 	stmdbvc	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 684:	34725f00 	ldrbtcc	r5, [r2], #-3840	; 0xfffff100
 688:	6d5f0038 	ldclvs	0, cr0, [pc, #-224]	; 5b0 <startup-0x1ffffa50>
 68c:	776f7462 	strbvc	r7, [pc, -r2, ror #8]!
 690:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 694:	00657461 	rsbeq	r7, r5, r1, ror #8
 698:	696d7870 	stmdbvs	sp!, {r4, r5, r6, fp, ip, sp, lr}^
 69c:	705f006e 	subsvc	r0, pc, lr, rrx
 6a0:	5f007335 	svcpl	0x00007335
 6a4:	5f6d745f 	svcpl	0x006d745f
 6a8:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
 6ac:	70675f00 	rsbvc	r5, r7, r0, lsl #30
 6b0:	61006f69 	tstvs	r0, r9, ror #30
 6b4:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 6b8:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 544 <startup-0x1ffffabc>
 6bc:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
 6c0:	79746f00 	ldmdbvc	r4!, {r8, r9, sl, fp, sp, lr}^
 6c4:	00726570 	rsbseq	r6, r2, r0, ror r5
 6c8:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
 6cc:	72646f00 	rsbvc	r6, r4, #0, 30
 6d0:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 6d4:	64737500 	ldrbtvs	r7, [r3], #-1280	; 0xfffffb00
 6d8:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 6dc:	63736100 	cmnvs	r3, #0, 2
 6e0:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 6e4:	5f646165 	svcpl	0x00646165
 6e8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 6ec:	47007375 	smlsdxmi	r0, r5, r3, r7
 6f0:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
 6f4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 6f8:	6c635f69 	stclvs	15, cr5, [r3], #-420	; 0xfffffe5c
 6fc:	00726165 	rsbseq	r6, r2, r5, ror #2
 700:	4d2f3a5a 	vstmdbmi	pc!, {s6-s95}
 704:	616c706f 	cmnvs	ip, pc, rrx
 708:	61726f62 	cmnvs	r2, r2, ror #30
 70c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 710:	672f7265 	strvs	r7, [pc, -r5, ror #4]!
 714:	2f656d61 	svccs	0x00656d61
 718:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 71c:	00632e69 	rsbeq	r2, r3, r9, ror #28
 720:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 724:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 728:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
 72c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 730:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 734:	6e690072 	mcrvs	0, 3, r0, cr9, cr2, {3}
 738:	615f7469 	cmpvs	pc, r9, ror #8
 73c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 740:	63736100 	cmnvs	r3, #0, 2
 744:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 748:	5f6c7274 	svcpl	0x006c7274
 74c:	5f746962 	svcpl	0x00746962
 750:	00746573 	rsbseq	r6, r4, r3, ror r5
 754:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 758:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 75c:	00657469 	rsbeq	r7, r5, r9, ror #8
 760:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 764:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 768:	5f657469 	svcpl	0x00657469
 76c:	00646d63 	rsbeq	r6, r4, r3, ror #26
 770:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
 774:	64610072 	strbtvs	r0, [r1], #-114	; 0xffffff8e
 778:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 77c:	69750073 	ldmdbvs	r5!, {r0, r1, r4, r5, r6}^
 780:	5f38746e 	svcpl	0x0038746e
 784:	646f0074 	strbtvs	r0, [pc], #-116	; 78c <startup-0x1ffff874>
 788:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
 78c:	63736100 	cmnvs	r3, #0, 2
 790:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 794:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 798:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 79c:	73610061 	cmnvc	r1, #97	; 0x61
 7a0:	5f696963 	svcpl	0x00696963
 7a4:	6f746f67 	svcvs	0x00746f67
 7a8:	69007978 	stmdbvs	r0, {r3, r4, r5, r6, r8, fp, ip, sp, lr}
 7ac:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 7b0:	67006867 	strvs	r6, [r0, -r7, ror #16]
 7b4:	706f6970 	rsbvc	r6, pc, r0, ror r9	; <UNPREDICTABLE>
 7b8:	6f007274 	svcvs	0x00007274
 7bc:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 7c0:	69007264 	stmdbvs	r0, {r2, r5, r6, r9, ip, sp, lr}
 7c4:	6f4c7264 	svcvs	0x004c7264
 7c8:	73610077 	cmnvc	r1, #119	; 0x77
 7cc:	5f696963 	svcpl	0x00696963
 7d0:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 7d4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 7d8:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 7dc:	73007261 	movwvc	r7, #609	; 0x261
 7e0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 7e4:	73003167 	movwvc	r3, #359	; 0x167
 7e8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 7ec:	75003267 	strvc	r3, [r0, #-615]	; 0xfffffd99
 7f0:	33746e69 	cmncc	r4, #1680	; 0x690
 7f4:	00745f32 	rsbseq	r5, r4, r2, lsr pc
 7f8:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 7fc:	73610072 	cmnvc	r1, #114	; 0x72
 800:	5f696963 	svcpl	0x00696963
 804:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 808:	6f635f65 	svcvs	0x00635f65
 80c:	6f72746e 	svcvs	0x0072746e
 810:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 814:	63736100 	cmnvs	r3, #0, 2
 818:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 81c:	5f646165 	svcpl	0x00646165
 820:	61746164 	cmnvs	r4, r4, ror #2
 824:	63736100 	cmnvs	r3, #0, 2
 828:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 82c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 830:	6168635f 	cmnvs	r8, pc, asr r3
 834:	65640072 	strbvs	r0, [r4, #-114]!	; 0xffffff8e
 838:	5f79616c 	svcpl	0x0079616c
 83c:	6e303035 	mrcvs	0, 1, r3, cr0, cr5, {1}
 840:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
 844:	5f79616c 	svcpl	0x0079616c
 848:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
 84c:	65640069 	strbvs	r0, [r4, #-105]!	; 0xffffff97
 850:	5f79616c 	svcpl	0x0079616c
 854:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
 858:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
 85c:	5f79616c 	svcpl	0x0079616c
 860:	7263696d 	rsbvc	r6, r3, #1785856	; 0x1b4000
 864:	3a5a006f 	bcc	1680a28 <startup-0x1e97f5d8>
 868:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 86c:	6f62616c 	svcvs	0x0062616c
 870:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 874:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 878:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 87c:	65642f65 	strbvs	r2, [r4, #-3941]!	; 0xfffff09b
 880:	2e79616c 	rpwcsez	f6, f1, #4.0
 884:	61700063 	cmnvs	r0, r3, rrx
 888:	69006567 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
 88c:	5f74696e 	svcpl	0x0074696e
 890:	70617267 	rsbvc	r7, r1, r7, ror #4
 894:	00636968 	rsbeq	r6, r3, r8, ror #18
 898:	6e6f7266 	cdpvs	2, 6, cr7, cr15, cr6, {3}
 89c:	66754274 			; <UNDEFINED> instruction: 0x66754274
 8a0:	00726566 	rsbseq	r6, r2, r6, ror #10
 8a4:	61656c63 	cmnvs	r5, r3, ror #24
 8a8:	66754272 			; <UNDEFINED> instruction: 0x66754272
 8ac:	73726566 	cmnvc	r2, #427819008	; 0x19800000
 8b0:	6f6f6200 	svcvs	0x006f6200
 8b4:	7773006c 	ldrbvc	r0, [r3, -ip, rrx]!
 8b8:	75427061 	strbvc	r7, [r2, #-97]	; 0xffffff9f
 8bc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 8c0:	72670073 	rsbvc	r0, r7, #115	; 0x73
 8c4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 8c8:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
 8cc:	645f6461 	ldrbvs	r6, [pc], #-1121	; 8d4 <startup-0x1ffff72c>
 8d0:	00617461 	rsbeq	r7, r1, r1, ror #8
 8d4:	61656c63 	cmnvs	r5, r3, ror #24
 8d8:	66754272 			; <UNDEFINED> instruction: 0x66754272
 8dc:	00726566 	rsbseq	r6, r2, r6, ror #10
 8e0:	70617267 	rsbvc	r7, r1, r7, ror #4
 8e4:	5f636968 	svcpl	0x00636968
 8e8:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8ec:	61620065 	cmnvs	r2, r5, rrx
 8f0:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
 8f4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 8f8:	2f3a5a00 	svccs	0x003a5a00
 8fc:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
 900:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 904:	6f697461 	svcvs	0x00697461
 908:	2f72656e 	svccs	0x0072656e
 90c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 910:	6172672f 	cmnvs	r2, pc, lsr #14
 914:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 918:	70736964 	rsbsvc	r6, r3, r4, ror #18
 91c:	2e79616c 	rpwcsez	f6, f1, #4.0
 920:	65730063 	ldrbvs	r0, [r3, #-99]!	; 0xffffff9d
 924:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 928:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 92c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 764 <startup-0x1ffff89c>
 930:	0072656c 	rsbseq	r6, r2, ip, ror #10
 934:	70617267 	rsbvc	r7, r1, r7, ror #4
 938:	5f636968 	svcpl	0x00636968
 93c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 940:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 944:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 948:	67007261 	strvs	r7, [r0, -r1, ror #4]
 94c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 950:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 954:	5f6c7274 	svcpl	0x006c7274
 958:	5f746962 	svcpl	0x00746962
 95c:	00746573 	rsbseq	r6, r4, r3, ror r5
 960:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 964:	6d69536c 	stclvs	3, cr5, [r9, #-432]!	; 0xfffffe50
 968:	70556200 	subsvc	r6, r5, r0, lsl #4
 96c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 970:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
 974:	61657200 	cmnvs	r5, r0, lsl #4
 978:	69705f64 	ldmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 97c:	006c6578 	rsbeq	r6, ip, r8, ror r5
 980:	6b73616d 	blvs	1cd8f3c <startup-0x1e3270c4>
 984:	61726700 	cmnvs	r2, r0, lsl #14
 988:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 98c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 990:	645f6574 	ldrbvs	r6, [pc], #-1396	; 998 <startup-0x1ffff668>
 994:	00617461 	rsbeq	r7, r1, r1, ror #8
 998:	70617267 	rsbvc	r7, r1, r7, ror #4
 99c:	5f636968 	svcpl	0x00636968
 9a0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 9a4:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 9a8:	006e6565 	rsbeq	r6, lr, r5, ror #10
 9ac:	70617267 	rsbvc	r7, r1, r7, ror #4
 9b0:	5f636968 	svcpl	0x00636968
 9b4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 9b8:	6165725f 	cmnvs	r5, pc, asr r2
 9bc:	69007964 	stmdbvs	r0, {r2, r5, r6, r8, fp, ip, sp, lr}
 9c0:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 9c4:	61726600 	cmnvs	r2, r0, lsl #12
 9c8:	7542656d 	strbvc	r6, [r2, #-1389]	; 0xfffffa93
 9cc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 9d0:	72660030 	rsbvc	r0, r6, #48	; 0x30
 9d4:	42656d61 	rsbmi	r6, r5, #6208	; 0x1840
 9d8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
 9dc:	67003172 	smlsdxvs	r0, r2, r1, r3
 9e0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 9e4:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
 9e8:	00646165 	rsbeq	r6, r4, r5, ror #2
 9ec:	70617267 	rsbvc	r7, r1, r7, ror #4
 9f0:	5f636968 	svcpl	0x00636968
 9f4:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 9f8:	6f635f65 	svcvs	0x00635f65
 9fc:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 a00:	72670064 	rsbvc	r0, r7, #100	; 0x64
 a04:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 a08:	6c635f63 	stclvs	15, cr5, [r3], #-396	; 0xfffffe74
 a0c:	5f726165 	svcpl	0x00726165
 a10:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
 a14:	6b006e65 	blvs	1c3b0 <startup-0x1ffe3c50>
 a18:	31627965 	cmncc	r2, r5, ror #18
 a1c:	6b00325f 	blvs	d3a0 <startup-0x1fff2c60>
 a20:	33627965 	cmncc	r2, #1654784	; 0x194000
 a24:	5a00345f 	bpl	dba8 <startup-0x1fff2458>
 a28:	6f4d2f3a 	svcvs	0x004d2f3a
 a2c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 a30:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 a34:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 a38:	61672f72 	smcvs	29426	; 0x72f2
 a3c:	6b2f656d 	blvs	bd9ff8 <startup-0x1f426008>
 a40:	61707965 	cmnvs	r0, r5, ror #18
 a44:	00632e64 	rsbeq	r2, r3, r4, ror #28
 a48:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 a4c:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
 a50:	00776f52 	rsbseq	r6, r7, r2, asr pc
 a54:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 a58:	756c6f43 	strbvc	r6, [ip, #-3907]!	; 0xfffff0bd
 a5c:	5f316e6d 	svcpl	0x00316e6d
 a60:	6f630032 	svcvs	0x00630032
 a64:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 a68:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 a6c:	65720062 	ldrbvs	r0, [r2, #-98]!	; 0xffffff9e
 a70:	6f436461 	svcvs	0x00436461
 a74:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 a78:	00345f33 	eorseq	r5, r4, r3, lsr pc
 a7c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 a80:	756c6f43 	strbvc	r6, [ip, #-3907]!	; 0xfffff0bd
 a84:	64006e6d 	strvs	r6, [r0], #-3693	; 0xfffff193
 a88:	42776172 	rsbsmi	r6, r7, #-2147483620	; 0x8000001c
 a8c:	6b636f6c 	blvs	18dc844 <startup-0x1e7237bc>
 a90:	006d6953 	rsbeq	r6, sp, r3, asr r9
 a94:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
 a98:	7264006c 	rsbvc	r0, r4, #108	; 0x6c
 a9c:	72467761 	subvc	r7, r6, #25427968	; 0x1840000
 aa0:	4d656d61 	stclmi	13, cr6, [r5, #-388]!	; 0xfffffe7c
 aa4:	61696e69 	cmnvs	r9, r9, ror #28
 aa8:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 aac:	666f7900 	strbtvs	r7, [pc], -r0, lsl #18
 ab0:	72640066 	rsbvc	r0, r4, #102	; 0x66
 ab4:	6c427761 	mcrrvs	7, 6, r7, r2, cr1
 ab8:	4d6b636f 	stclmi	3, cr6, [fp, #-444]!	; 0xfffffe44
 abc:	61696e69 	cmnvs	r9, r9, ror #28
 ac0:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 ac4:	006d6953 	rsbeq	r6, sp, r3, asr r9
 ac8:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 acc:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
 ad0:	7264006c 	rsbvc	r0, r4, #108	; 0x6c
 ad4:	72467761 	subvc	r7, r6, #25427968	; 0x1840000
 ad8:	00656d61 	rsbeq	r6, r5, r1, ror #26
 adc:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 ae0:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
 ae4:	6d69536c 	stclvs	3, cr5, [r9, #-432]!	; 0xfffffe50
 ae8:	454c5000 	strbmi	r5, [ip, #-0]
 aec:	004c4556 	subeq	r4, ip, r6, asr r5
 af0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 af4:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 af8:	6d695365 	stclvs	3, cr5, [r9, #-404]!	; 0xfffffe6c
 afc:	61726400 	cmnvs	r2, r0, lsl #8
 b00:	746f4477 	strbtvc	r4, [pc], #-1143	; b08 <startup-0x1ffff4f8>
 b04:	61726400 	cmnvs	r2, r0, lsl #8
 b08:	61724677 	cmnvs	r2, r7, ror r6
 b0c:	694d656d 	stmdbvs	sp, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 b10:	7461696e 	strbtvc	r6, [r1], #-2414	; 0xfffff692
 b14:	53657275 	cmnpl	r5, #1342177287	; 0x50000007
 b18:	6c006d69 	stcvs	13, cr6, [r0], {105}	; 0x69
 b1c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
 b20:	656c0031 	strbvs	r0, [ip, #-49]!	; 0xffffffcf
 b24:	326c6576 	rsbcc	r6, ip, #494927872	; 0x1d800000
 b28:	76656c00 	strbtvc	r6, [r5], -r0, lsl #24
 b2c:	00336c65 	eorseq	r6, r3, r5, ror #24
 b30:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
 b34:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
 b38:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
 b3c:	76656c00 	strbtvc	r6, [r5], -r0, lsl #24
 b40:	00346c65 	eorseq	r6, r4, r5, ror #24
 b44:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 b48:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 b4c:	6e694d6b 	cdpvs	13, 6, cr4, cr9, cr11, {3}
 b50:	75746169 	ldrbvc	r6, [r4, #-361]!	; 0xfffffe97
 b54:	5a006572 	bpl	1a124 <startup-0x1ffe5edc>
 b58:	6f4d2f3a 	svcvs	0x004d2f3a
 b5c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 b60:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 b64:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 b68:	61672f72 	smcvs	29426	; 0x72f2
 b6c:	6c2f656d 	cfstr32vs	mvfx6, [pc], #-436	; 9c0 <startup-0x1ffff640>
 b70:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
 b74:	6400632e 	strvs	r6, [r0], #-814	; 0xfffffcd2
 b78:	4c776172 	ldfmie	f6, [r7], #-456	; 0xfffffe38
 b7c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
 b80:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
 b84:	63537463 	cmpvs	r3, #1660944384	; 0x63000000
 b88:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 b8c:	61726400 	cmnvs	r2, r0, lsl #8
 b90:	61745377 	cmnvs	r4, r7, ror r3
 b94:	63537472 	cmpvs	r3, #1912602624	; 0x72000000
 b98:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 b9c:	006d6953 	rsbeq	r6, sp, r3, asr r9
 ba0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 ba4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 ba8:	6863006b 	stmdavs	r3!, {r0, r1, r3, r5, r6}^
 bac:	65736f6f 	ldrbvs	r6, [r3, #-3951]!	; 0xfffff091
 bb0:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
 bb4:	7264006c 	rsbvc	r0, r4, #108	; 0x6c
 bb8:	6f447761 	svcvs	0x00447761
 bbc:	6d695374 	stclvs	3, cr5, [r9, #-464]!	; 0xfffffe30
 bc0:	6f686300 	svcvs	0x00686300
 bc4:	4465736f 	strbtmi	r7, [r5], #-879	; 0xfffffc91
 bc8:	7800746f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 bcc:	0066666f 	rsbeq	r6, r6, pc, ror #12
 bd0:	646d756e 	strbtvs	r7, [sp], #-1390	; 0xfffffa92
 bd4:	0073746f 	rsbseq	r7, r3, pc, ror #8
 bd8:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
 bdc:	44746e65 	ldrbtmi	r6, [r4], #-3685	; 0xfffff19b
 be0:	6200746f 	andvs	r7, r0, #1862270976	; 0x6f000000
 be4:	5f6c6c61 	svcpl	0x006c6c61
 be8:	6d6f6567 	cfstr64vs	mvdx6, [pc, #-412]!	; a54 <startup-0x1ffff5ac>
 bec:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 bf0:	61620030 	cmnvs	r2, r0, lsr r0
 bf4:	675f6c6c 	ldrbvs	r6, [pc, -ip, ror #24]
 bf8:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 bfc:	31797274 	cmncc	r9, r4, ror r2
 c00:	6c616200 	sfmvs	f6, 2, [r1], #-0
 c04:	65675f6c 	strbvs	r5, [r7, #-3948]!	; 0xfffff094
 c08:	74656d6f 	strbtvc	r6, [r5], #-3439	; 0xfffff291
 c0c:	00327972 	eorseq	r7, r2, r2, ror r9
 c10:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 c14:	6f65675f 	svcvs	0x0065675f
 c18:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
 c1c:	62003479 	andvs	r3, r0, #2030043136	; 0x79000000
 c20:	5f6c6c61 	svcpl	0x006c6c61
 c24:	6d6f6567 	cfstr64vs	mvdx6, [pc, #-412]!	; a90 <startup-0x1ffff570>
 c28:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 c2c:	64004941 	strvs	r4, [r0], #-2369	; 0xfffff6bf
 c30:	5f776172 	svcpl	0x00776172
 c34:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 c38:	69537463 	ldmdbvs	r3, {r0, r1, r5, r6, sl, ip, sp, lr}^
 c3c:	7264006d 	rsbvc	r0, r4, #109	; 0x6d
 c40:	6f5f7761 	svcvs	0x005f7761
 c44:	63656a62 	cmnvs	r5, #401408	; 0x62000
 c48:	6c630074 	stclvs	0, cr0, [r3], #-464	; 0xfffffe30
 c4c:	5f726165 	svcpl	0x00726165
 c50:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 c54:	69537463 	ldmdbvs	r3, {r0, r1, r5, r6, sl, ip, sp, lr}^
 c58:	6379006d 	cmnvs	r9, #109	; 0x6d
 c5c:	6b636568 	blvs	18da204 <startup-0x1e725dfc>
 c60:	43746f44 	cmnmi	r4, #68, 30	; 0x110
 c64:	696c6c6f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^
 c68:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 c6c:	6c616200 	sfmvs	f6, 2, [r1], #-0
 c70:	65675f6c 	strbvs	r5, [r7, #-3948]!	; 0xfffff094
 c74:	74656d6f 	strbtvc	r6, [r5], #-3439	; 0xfffff291
 c78:	00337972 	eorseq	r7, r3, r2, ror r9
 c7c:	65686379 	strbvs	r6, [r8, #-889]!	; 0xfffffc87
 c80:	6f436b63 	svcvs	0x00436b63
 c84:	73696c6c 	cmnvc	r9, #108, 24	; 0x6c00
 c88:	78006e6f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 c8c:	63656863 	cmnvs	r5, #6488064	; 0x630000
 c90:	6c6f436b 	stclvs	3, cr4, [pc], #-428	; aec <startup-0x1ffff514>
 c94:	6f73696c 	svcvs	0x0073696c
 c98:	6f6d006e 	svcvs	0x006d006e
 c9c:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 ca0:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
 ca4:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
 ca8:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 cac:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 cb0:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 cb4:	78006465 	stmdavc	r0, {r0, r2, r5, r6, sl, sp, lr}
 cb8:	63656863 	cmnvs	r5, #6488064	; 0x630000
 cbc:	746f446b 	strbtvc	r4, [pc], #-1131	; cc4 <startup-0x1ffff33c>
 cc0:	6c6c6f43 	stclvs	15, cr6, [ip], #-268	; 0xfffffef4
 cc4:	6f697369 	svcvs	0x00697369
 cc8:	3a5a006e 	bcc	1680e88 <startup-0x1e97f178>
 ccc:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 cd0:	6f62616c 	svcvs	0x0062616c
 cd4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 cd8:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 cdc:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
 ce0:	626f2f65 	rsbvs	r2, pc, #404	; 0x194
 ce4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 ce8:	6100632e 	tstvs	r0, lr, lsr #6
 cec:	00766772 	rsbseq	r6, r6, r2, ror r7
 cf0:	654e3170 	strbvs	r3, [lr, #-368]	; 0xfffffe90
 cf4:	69447478 	stmdbvs	r4, {r3, r4, r5, r6, sl, ip, sp, lr}^
 cf8:	70007872 	andvc	r7, r0, r2, ror r8
 cfc:	78654e32 	stmdavc	r5!, {r1, r4, r5, r9, sl, fp, lr}^
 d00:	72694474 	rsbvc	r4, r9, #116, 8	; 0x74000000
 d04:	31700078 	cmncc	r0, r8, ror r0
 d08:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
 d0c:	79726944 	ldmdbvc	r2!, {r2, r6, r8, fp, sp, lr}^
 d10:	76656c00 	strbtvc	r6, [r5], -r0, lsl #24
 d14:	65536c65 	ldrbvs	r6, [r3, #-3173]	; 0xfffff39b
 d18:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 d1c:	70006465 	andvc	r6, r0, r5, ror #8
 d20:	78654e32 	stmdavc	r5!, {r1, r4, r5, r9, sl, fp, lr}^
 d24:	72694474 	rsbvc	r4, r9, #116, 8	; 0x74000000
 d28:	72700079 	rsbsvc	r0, r0, #121	; 0x79
 d2c:	63537665 	cmpvs	r3, #105906176	; 0x6500000
 d30:	7365726f 	cmnvc	r5, #-268435450	; 0xf0000006
 d34:	6d616700 	stclvs	7, cr6, [r1, #-0]
 d38:	65766f65 	ldrbvs	r6, [r6, #-3941]!	; 0xfffff09b
 d3c:	756f4372 	strbvc	r4, [pc, #-882]!	; 9d2 <startup-0x1ffff62e>
 d40:	6f64746e 	svcvs	0x0064746e
 d44:	70006e77 	andvc	r6, r0, r7, ror lr
 d48:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 d4c:	726f6353 	rsbvc	r6, pc, #1275068417	; 0x4c000001
 d50:	70750065 	rsbsvc	r0, r5, r5, rrx
 d54:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
 d58:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 d5c:	00327265 	eorseq	r7, r2, r5, ror #4
 d60:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 d64:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
 d68:	64707500 	ldrbtvs	r7, [r0], #-1280	; 0xfffffb00
 d6c:	50657461 	rsbpl	r7, r5, r1, ror #8
 d70:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
 d74:	73003172 	movwvc	r3, #370	; 0x172
 d78:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 d7c:	4d676e69 	stclmi	14, cr6, [r7, #-420]!	; 0xfffffe5c
 d80:	61737365 	cmnvs	r3, r5, ror #6
 d84:	73416567 	movtvc	r6, #5479	; 0x1567
 d88:	00696963 	rsbeq	r6, r9, r3, ror #18
 d8c:	6e617273 	mcrvs	2, 3, r7, cr1, cr3, {3}
 d90:	616d0064 	cmnvs	sp, r4, rrx
 d94:	73006e69 	movwvc	r6, #3689	; 0xe69
 d98:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 d9c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 da0:	6900676e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 da4:	5f74696e 	svcpl	0x0074696e
 da8:	00707061 	rsbseq	r7, r0, r1, rrx
 dac:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 db0:	00707574 	rsbseq	r7, r0, r4, ror r5
 db4:	4d2f3a5a 	vstmdbmi	pc!, {s6-s95}
 db8:	616c706f 	cmnvs	ip, pc, rrx
 dbc:	61726f62 	cmnvs	r2, r2, ror #30
 dc0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 dc4:	672f7265 	strvs	r7, [pc, -r5, ror #4]!
 dc8:	2f656d61 	svccs	0x00656d61
 dcc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 dd0:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
 dd4:	72610063 	rsbvc	r0, r1, #99	; 0x63
 dd8:	6e006367 	cdpvs	3, 0, cr6, cr0, cr7, {3}
 ddc:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
 de0:	Address 0x00000de0 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000020 	andeq	r0, r0, r0, lsr #32
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	0000002c 	andeq	r0, r0, ip, lsr #32
  20:	400c0e41 	andmi	r0, ip, r1, asr #28
  24:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  28:	018e4002 	orreq	r4, lr, r2
  2c:	41180e41 	tstmi	r8, r1, asr #28
  30:	0000070d 	andeq	r0, r0, sp, lsl #14
  34:	00000020 	andeq	r0, r0, r0, lsr #32
  38:	00000000 	andeq	r0, r0, r0
  3c:	2000003c 	andcs	r0, r0, ip, lsr r0
  40:	0000002a 	andeq	r0, r0, sl, lsr #32
  44:	400c0e41 	andmi	r0, ip, r1, asr #28
  48:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  4c:	018e4002 	orreq	r4, lr, r2
  50:	41180e41 	tstmi	r8, r1, asr #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000020 	andeq	r0, r0, r0, lsr #32
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000066 	andcs	r0, r0, r6, rrx
  64:	0000002c 	andeq	r0, r0, ip, lsr #32
  68:	400c0e41 	andmi	r0, ip, r1, asr #28
  6c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  70:	018e4002 	orreq	r4, lr, r2
  74:	41180e41 	tstmi	r8, r1, asr #28
  78:	0000070d 	andeq	r0, r0, sp, lsl #14
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	20000092 	mulcs	r0, r2, r0
  88:	0000002a 	andeq	r0, r0, sl, lsr #32
  8c:	400c0e41 	andmi	r0, ip, r1, asr #28
  90:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  94:	018e4002 	orreq	r4, lr, r2
  98:	41180e41 	tstmi	r8, r1, asr #28
  9c:	0000070d 	andeq	r0, r0, sp, lsl #14
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	00000000 	andeq	r0, r0, r0
  a8:	200000bc 	strhcs	r0, [r0], -ip
  ac:	0000004c 	andeq	r0, r0, ip, asr #32
  b0:	40080e41 	andmi	r0, r8, r1, asr #28
  b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b8:	180e4101 	stmdane	lr, {r0, r8, lr}
  bc:	00070d41 	andeq	r0, r7, r1, asr #26
  c0:	00000028 	andeq	r0, r0, r8, lsr #32
  c4:	00000000 	andeq	r0, r0, r0
  c8:	20000108 	andcs	r0, r0, r8, lsl #2
  cc:	000003e4 	andeq	r0, r0, r4, ror #7
  d0:	40140e41 	andsmi	r0, r4, r1, asr #28
  d4:	85400584 	strbhi	r0, [r0, #-1412]	; 0xfffffa7c
  d8:	03864004 	orreq	r4, r6, #4
  dc:	40028740 	andmi	r8, r2, r0, asr #14
  e0:	0e41018e 	dvfeqd	f0, f1, #0.5
  e4:	070c4160 	streq	r4, [ip, -r0, ror #2]
  e8:	00000058 	andeq	r0, r0, r8, asr r0
  ec:	0000001c 	andeq	r0, r0, ip, lsl r0
  f0:	00000000 	andeq	r0, r0, r0
  f4:	200004ec 	andcs	r0, r0, ip, ror #9
  f8:	00000094 	muleq	r0, r4, r0
  fc:	40080e41 	andmi	r0, r8, r1, asr #28
 100:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 104:	300e4101 	andcc	r4, lr, r1, lsl #2
 108:	00070d41 	andeq	r0, r7, r1, asr #26
 10c:	0000001c 	andeq	r0, r0, ip, lsl r0
 110:	00000000 	andeq	r0, r0, r0
 114:	20000580 	andcs	r0, r0, r0, lsl #11
 118:	00000094 	muleq	r0, r4, r0
 11c:	40080e41 	andmi	r0, r8, r1, asr #28
 120:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 124:	300e4101 	andcc	r4, lr, r1, lsl #2
 128:	00070d41 	andeq	r0, r7, r1, asr #26
 12c:	00000020 	andeq	r0, r0, r0, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	20000614 	andcs	r0, r0, r4, lsl r6
 138:	00000170 	andeq	r0, r0, r0, ror r1
 13c:	400c0e41 	andmi	r0, ip, r1, asr #28
 140:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 144:	018e4002 	orreq	r4, lr, r2
 148:	41300e41 	teqmi	r0, r1, asr #28
 14c:	0000070d 	andeq	r0, r0, sp, lsl #14
 150:	0000000c 	andeq	r0, r0, ip
 154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 158:	7c020001 	stcvc	0, cr0, [r2], {1}
 15c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 160:	0000001c 	andeq	r0, r0, ip, lsl r0
 164:	00000150 	andeq	r0, r0, r0, asr r1
 168:	20000784 	andcs	r0, r0, r4, lsl #15
 16c:	00000044 	andeq	r0, r0, r4, asr #32
 170:	40080e41 	andmi	r0, r8, r1, asr #28
 174:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 178:	180e4101 	stmdane	lr, {r0, r8, lr}
 17c:	00070d41 	andeq	r0, r7, r1, asr #26
 180:	0000001c 	andeq	r0, r0, ip, lsl r0
 184:	00000150 	andeq	r0, r0, r0, asr r1
 188:	200007c8 	andcs	r0, r0, r8, asr #15
 18c:	00000050 	andeq	r0, r0, r0, asr r0
 190:	40080e41 	andmi	r0, r8, r1, asr #28
 194:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 198:	180e4101 	stmdane	lr, {r0, r8, lr}
 19c:	00070d41 	andeq	r0, r7, r1, asr #26
 1a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a4:	00000150 	andeq	r0, r0, r0, asr r1
 1a8:	20000818 	andcs	r0, r0, r8, lsl r8
 1ac:	00000034 	andeq	r0, r0, r4, lsr r0
 1b0:	40080e41 	andmi	r0, r8, r1, asr #28
 1b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1b8:	100e4101 	andne	r4, lr, r1, lsl #2
 1bc:	00070d41 	andeq	r0, r7, r1, asr #26
 1c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c4:	00000150 	andeq	r0, r0, r0, asr r1
 1c8:	2000084c 	andcs	r0, r0, ip, asr #16
 1cc:	00000040 	andeq	r0, r0, r0, asr #32
 1d0:	40080e41 	andmi	r0, r8, r1, asr #28
 1d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1d8:	100e4101 	andne	r4, lr, r1, lsl #2
 1dc:	00070d41 	andeq	r0, r7, r1, asr #26
 1e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1e4:	00000150 	andeq	r0, r0, r0, asr r1
 1e8:	2000088c 	andcs	r0, r0, ip, lsl #17
 1ec:	0000002a 	andeq	r0, r0, sl, lsr #32
 1f0:	40080e41 	andmi	r0, r8, r1, asr #28
 1f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1f8:	100e4101 	andne	r4, lr, r1, lsl #2
 1fc:	00070d41 	andeq	r0, r7, r1, asr #26
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
 204:	00000150 	andeq	r0, r0, r0, asr r1
 208:	200008b6 			; <UNDEFINED> instruction: 0x200008b6
 20c:	0000002a 	andeq	r0, r0, sl, lsr #32
 210:	40080e41 	andmi	r0, r8, r1, asr #28
 214:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 218:	100e4101 	andne	r4, lr, r1, lsl #2
 21c:	00070d41 	andeq	r0, r7, r1, asr #26
 220:	00000020 	andeq	r0, r0, r0, lsr #32
 224:	00000150 	andeq	r0, r0, r0, asr r1
 228:	200008e0 	andcs	r0, r0, r0, ror #17
 22c:	00000040 	andeq	r0, r0, r0, asr #32
 230:	400c0e41 	andmi	r0, ip, r1, asr #28
 234:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 238:	018e4002 	orreq	r4, lr, r2
 23c:	41180e41 	tstmi	r8, r1, asr #28
 240:	0000070d 	andeq	r0, r0, sp, lsl #14
 244:	00000020 	andeq	r0, r0, r0, lsr #32
 248:	00000150 	andeq	r0, r0, r0, asr r1
 24c:	20000920 	andcs	r0, r0, r0, lsr #18
 250:	00000040 	andeq	r0, r0, r0, asr #32
 254:	400c0e41 	andmi	r0, ip, r1, asr #28
 258:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 25c:	018e4002 	orreq	r4, lr, r2
 260:	41180e41 	tstmi	r8, r1, asr #28
 264:	0000070d 	andeq	r0, r0, sp, lsl #14
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	00000150 	andeq	r0, r0, r0, asr r1
 270:	20000960 	andcs	r0, r0, r0, ror #18
 274:	00000050 	andeq	r0, r0, r0, asr r0
 278:	40080e41 	andmi	r0, r8, r1, asr #28
 27c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 280:	100e4101 	andne	r4, lr, r1, lsl #2
 284:	00070d41 	andeq	r0, r7, r1, asr #26
 288:	00000018 	andeq	r0, r0, r8, lsl r0
 28c:	00000150 	andeq	r0, r0, r0, asr r1
 290:	200009b0 			; <UNDEFINED> instruction: 0x200009b0
 294:	00000030 	andeq	r0, r0, r0, lsr r0
 298:	40080e41 	andmi	r0, r8, r1, asr #28
 29c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2a0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 2a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2a8:	00000150 	andeq	r0, r0, r0, asr r1
 2ac:	200009e0 	andcs	r0, r0, r0, ror #19
 2b0:	0000003a 	andeq	r0, r0, sl, lsr r0
 2b4:	40080e41 	andmi	r0, r8, r1, asr #28
 2b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2bc:	180e4101 	stmdane	lr, {r0, r8, lr}
 2c0:	00070d41 	andeq	r0, r7, r1, asr #26
 2c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2c8:	00000150 	andeq	r0, r0, r0, asr r1
 2cc:	20000a1a 	andcs	r0, r0, sl, lsl sl
 2d0:	0000003c 	andeq	r0, r0, ip, lsr r0
 2d4:	40080e41 	andmi	r0, r8, r1, asr #28
 2d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2dc:	100e4101 	andne	r4, lr, r1, lsl #2
 2e0:	00070d41 	andeq	r0, r7, r1, asr #26
 2e4:	00000018 	andeq	r0, r0, r8, lsl r0
 2e8:	00000150 	andeq	r0, r0, r0, asr r1
 2ec:	20000a56 	andcs	r0, r0, r6, asr sl
 2f0:	0000001a 	andeq	r0, r0, sl, lsl r0
 2f4:	40080e41 	andmi	r0, r8, r1, asr #28
 2f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2fc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 300:	0000001c 	andeq	r0, r0, ip, lsl r0
 304:	00000150 	andeq	r0, r0, r0, asr r1
 308:	20000a70 	andcs	r0, r0, r0, ror sl
 30c:	0000005a 	andeq	r0, r0, sl, asr r0
 310:	40080e41 	andmi	r0, r8, r1, asr #28
 314:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 318:	180e4101 	stmdane	lr, {r0, r8, lr}
 31c:	00070d41 	andeq	r0, r7, r1, asr #26
 320:	0000000c 	andeq	r0, r0, ip
 324:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 328:	7c020001 	stcvc	0, cr0, [r2], {1}
 32c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 330:	00000018 	andeq	r0, r0, r8, lsl r0
 334:	00000320 	andeq	r0, r0, r0, lsr #6
 338:	20000acc 	andcs	r0, r0, ip, asr #21
 33c:	00000044 	andeq	r0, r0, r4, asr #32
 340:	40080e41 	andmi	r0, r8, r1, asr #28
 344:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 348:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 34c:	00000018 	andeq	r0, r0, r8, lsl r0
 350:	00000320 	andeq	r0, r0, r0, lsr #6
 354:	20000b10 	andcs	r0, r0, r0, lsl fp
 358:	00000044 	andeq	r0, r0, r4, asr #32
 35c:	40080e41 	andmi	r0, r8, r1, asr #28
 360:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 364:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 368:	0000001c 	andeq	r0, r0, ip, lsl r0
 36c:	00000320 	andeq	r0, r0, r0, lsr #6
 370:	20000b54 	andcs	r0, r0, r4, asr fp
 374:	0000002c 	andeq	r0, r0, ip, lsr #32
 378:	40080e41 	andmi	r0, r8, r1, asr #28
 37c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 380:	100e4101 	andne	r4, lr, r1, lsl #2
 384:	00070d41 	andeq	r0, r7, r1, asr #26
 388:	0000001c 	andeq	r0, r0, ip, lsl r0
 38c:	00000320 	andeq	r0, r0, r0, lsr #6
 390:	20000b80 	andcs	r0, r0, r0, lsl #23
 394:	00000026 	andeq	r0, r0, r6, lsr #32
 398:	40080e41 	andmi	r0, r8, r1, asr #28
 39c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3a0:	100e4101 	andne	r4, lr, r1, lsl #2
 3a4:	00070d41 	andeq	r0, r7, r1, asr #26
 3a8:	0000000c 	andeq	r0, r0, ip
 3ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3b0:	7c020001 	stcvc	0, cr0, [r2], {1}
 3b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	000003a8 	andeq	r0, r0, r8, lsr #7
 3c0:	20000ba8 	andcs	r0, r0, r8, lsr #23
 3c4:	0000005c 	andeq	r0, r0, ip, asr r0
 3c8:	40080e41 	andmi	r0, r8, r1, asr #28
 3cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3d0:	180e4101 	stmdane	lr, {r0, r8, lr}
 3d4:	00070d41 	andeq	r0, r7, r1, asr #26
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	000003a8 	andeq	r0, r0, r8, lsr #7
 3e0:	20000c04 	andcs	r0, r0, r4, lsl #24
 3e4:	00000058 	andeq	r0, r0, r8, asr r0
 3e8:	40080e41 	andmi	r0, r8, r1, asr #28
 3ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3f0:	180e4101 	stmdane	lr, {r0, r8, lr}
 3f4:	00070d41 	andeq	r0, r7, r1, asr #26
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	000003a8 	andeq	r0, r0, r8, lsr #7
 400:	20000c5c 	andcs	r0, r0, ip, asr ip
 404:	00000066 	andeq	r0, r0, r6, rrx
 408:	40080e41 	andmi	r0, r8, r1, asr #28
 40c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 410:	100e4101 	andne	r4, lr, r1, lsl #2
 414:	00070d41 	andeq	r0, r7, r1, asr #26
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	000003a8 	andeq	r0, r0, r8, lsr #7
 420:	20000cc2 	andcs	r0, r0, r2, asr #25
 424:	00000072 	andeq	r0, r0, r2, ror r0
 428:	40080e41 	andmi	r0, r8, r1, asr #28
 42c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 430:	100e4101 	andne	r4, lr, r1, lsl #2
 434:	00070d41 	andeq	r0, r7, r1, asr #26
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	000003a8 	andeq	r0, r0, r8, lsr #7
 440:	20000d34 	andcs	r0, r0, r4, lsr sp
 444:	00000098 	muleq	r0, r8, r0
 448:	40080e41 	andmi	r0, r8, r1, asr #28
 44c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 450:	180e4101 	stmdane	lr, {r0, r8, lr}
 454:	00070d41 	andeq	r0, r7, r1, asr #26
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	000003a8 	andeq	r0, r0, r8, lsr #7
 460:	20000dcc 	andcs	r0, r0, ip, asr #27
 464:	0000002a 	andeq	r0, r0, sl, lsr #32
 468:	40080e41 	andmi	r0, r8, r1, asr #28
 46c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 470:	100e4101 	andne	r4, lr, r1, lsl #2
 474:	00070d41 	andeq	r0, r7, r1, asr #26
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	000003a8 	andeq	r0, r0, r8, lsr #7
 480:	20000df6 	strdcs	r0, [r0], -r6
 484:	0000007e 	andeq	r0, r0, lr, ror r0
 488:	40080e41 	andmi	r0, r8, r1, asr #28
 48c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 490:	100e4101 	andne	r4, lr, r1, lsl #2
 494:	00070d41 	andeq	r0, r7, r1, asr #26
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	000003a8 	andeq	r0, r0, r8, lsr #7
 4a0:	20000e74 	andcs	r0, r0, r4, ror lr
 4a4:	00000040 	andeq	r0, r0, r0, asr #32
 4a8:	40080e41 	andmi	r0, r8, r1, asr #28
 4ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4b0:	100e4101 	andne	r4, lr, r1, lsl #2
 4b4:	00070d41 	andeq	r0, r7, r1, asr #26
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	000003a8 	andeq	r0, r0, r8, lsr #7
 4c0:	20000eb4 			; <UNDEFINED> instruction: 0x20000eb4
 4c4:	00000046 	andeq	r0, r0, r6, asr #32
 4c8:	40080e41 	andmi	r0, r8, r1, asr #28
 4cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4d0:	100e4101 	andne	r4, lr, r1, lsl #2
 4d4:	00070d41 	andeq	r0, r7, r1, asr #26
 4d8:	00000018 	andeq	r0, r0, r8, lsl r0
 4dc:	000003a8 	andeq	r0, r0, r8, lsr #7
 4e0:	20000efa 	strdcs	r0, [r0], -sl
 4e4:	0000005c 	andeq	r0, r0, ip, asr r0
 4e8:	40080e41 	andmi	r0, r8, r1, asr #28
 4ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4f0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 4f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4f8:	000003a8 	andeq	r0, r0, r8, lsr #7
 4fc:	20000f56 	andcs	r0, r0, r6, asr pc
 500:	00000066 	andeq	r0, r0, r6, rrx
 504:	40080e41 	andmi	r0, r8, r1, asr #28
 508:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 50c:	100e4101 	andne	r4, lr, r1, lsl #2
 510:	00070d41 	andeq	r0, r7, r1, asr #26
 514:	00000020 	andeq	r0, r0, r0, lsr #32
 518:	000003a8 	andeq	r0, r0, r8, lsr #7
 51c:	20000fbc 			; <UNDEFINED> instruction: 0x20000fbc
 520:	0000014c 	andeq	r0, r0, ip, asr #2
 524:	400c0e41 	andmi	r0, ip, r1, asr #28
 528:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 52c:	018e4002 	orreq	r4, lr, r2
 530:	41300e41 	teqmi	r0, r1, asr #28
 534:	0000070d 	andeq	r0, r0, sp, lsl #14
 538:	0000001c 	andeq	r0, r0, ip, lsl r0
 53c:	000003a8 	andeq	r0, r0, r8, lsr #7
 540:	20001108 	andcs	r1, r0, r8, lsl #2
 544:	00000038 	andeq	r0, r0, r8, lsr r0
 548:	40080e41 	andmi	r0, r8, r1, asr #28
 54c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 550:	100e4101 	andne	r4, lr, r1, lsl #2
 554:	00070d41 	andeq	r0, r7, r1, asr #26
 558:	0000001c 	andeq	r0, r0, ip, lsl r0
 55c:	000003a8 	andeq	r0, r0, r8, lsr #7
 560:	20001140 	andcs	r1, r0, r0, asr #2
 564:	00000048 	andeq	r0, r0, r8, asr #32
 568:	40080e41 	andmi	r0, r8, r1, asr #28
 56c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 570:	100e4101 	andne	r4, lr, r1, lsl #2
 574:	00070d41 	andeq	r0, r7, r1, asr #26
 578:	0000001c 	andeq	r0, r0, ip, lsl r0
 57c:	000003a8 	andeq	r0, r0, r8, lsr #7
 580:	20001188 	andcs	r1, r0, r8, lsl #3
 584:	000000ac 	andeq	r0, r0, ip, lsr #1
 588:	40080e41 	andmi	r0, r8, r1, asr #28
 58c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 590:	180e4101 	stmdane	lr, {r0, r8, lr}
 594:	00070d41 	andeq	r0, r7, r1, asr #26
 598:	0000001c 	andeq	r0, r0, ip, lsl r0
 59c:	000003a8 	andeq	r0, r0, r8, lsr #7
 5a0:	20001234 	andcs	r1, r0, r4, lsr r2
 5a4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 5a8:	40080e41 	andmi	r0, r8, r1, asr #28
 5ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5b0:	180e4101 	stmdane	lr, {r0, r8, lr}
 5b4:	00070d41 	andeq	r0, r7, r1, asr #26
 5b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 5bc:	000003a8 	andeq	r0, r0, r8, lsr #7
 5c0:	200012e4 	andcs	r1, r0, r4, ror #5
 5c4:	0000011c 	andeq	r0, r0, ip, lsl r1
 5c8:	40080e41 	andmi	r0, r8, r1, asr #28
 5cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5d0:	180e4101 	stmdane	lr, {r0, r8, lr}
 5d4:	00070d41 	andeq	r0, r7, r1, asr #26
 5d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 5dc:	000003a8 	andeq	r0, r0, r8, lsr #7
 5e0:	20001400 	andcs	r1, r0, r0, lsl #8
 5e4:	00000030 	andeq	r0, r0, r0, lsr r0
 5e8:	40080e41 	andmi	r0, r8, r1, asr #28
 5ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5f0:	100e4101 	andne	r4, lr, r1, lsl #2
 5f4:	00070d41 	andeq	r0, r7, r1, asr #26
 5f8:	0000000c 	andeq	r0, r0, ip
 5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 600:	7c020001 	stcvc	0, cr0, [r2], {1}
 604:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 608:	0000001c 	andeq	r0, r0, ip, lsl r0
 60c:	000005f8 	strdeq	r0, [r0], -r8
 610:	20001430 	andcs	r1, r0, r0, lsr r4
 614:	00000040 	andeq	r0, r0, r0, asr #32
 618:	40080e41 	andmi	r0, r8, r1, asr #28
 61c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 620:	100e4101 	andne	r4, lr, r1, lsl #2
 624:	00070d41 	andeq	r0, r7, r1, asr #26
 628:	0000001c 	andeq	r0, r0, ip, lsl r0
 62c:	000005f8 	strdeq	r0, [r0], -r8
 630:	20001470 	andcs	r1, r0, r0, ror r4
 634:	00000040 	andeq	r0, r0, r0, asr #32
 638:	40080e41 	andmi	r0, r8, r1, asr #28
 63c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 640:	100e4101 	andne	r4, lr, r1, lsl #2
 644:	00070d41 	andeq	r0, r7, r1, asr #26
 648:	0000001c 	andeq	r0, r0, ip, lsl r0
 64c:	000005f8 	strdeq	r0, [r0], -r8
 650:	200014b0 			; <UNDEFINED> instruction: 0x200014b0
 654:	00000040 	andeq	r0, r0, r0, asr #32
 658:	40080e41 	andmi	r0, r8, r1, asr #28
 65c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 660:	100e4101 	andne	r4, lr, r1, lsl #2
 664:	00070d41 	andeq	r0, r7, r1, asr #26
 668:	0000001c 	andeq	r0, r0, ip, lsl r0
 66c:	000005f8 	strdeq	r0, [r0], -r8
 670:	200014f0 	strdcs	r1, [r0], -r0
 674:	00000040 	andeq	r0, r0, r0, asr #32
 678:	40080e41 	andmi	r0, r8, r1, asr #28
 67c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 680:	100e4101 	andne	r4, lr, r1, lsl #2
 684:	00070d41 	andeq	r0, r7, r1, asr #26
 688:	0000001c 	andeq	r0, r0, ip, lsl r0
 68c:	000005f8 	strdeq	r0, [r0], -r8
 690:	20001530 	andcs	r1, r0, r0, lsr r5
 694:	00000086 	andeq	r0, r0, r6, lsl #1
 698:	40080e41 	andmi	r0, r8, r1, asr #28
 69c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6a0:	100e4101 	andne	r4, lr, r1, lsl #2
 6a4:	00070d41 	andeq	r0, r7, r1, asr #26
 6a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 6ac:	000005f8 	strdeq	r0, [r0], -r8
 6b0:	200015b6 			; <UNDEFINED> instruction: 0x200015b6
 6b4:	00000086 	andeq	r0, r0, r6, lsl #1
 6b8:	40080e41 	andmi	r0, r8, r1, asr #28
 6bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6c0:	100e4101 	andne	r4, lr, r1, lsl #2
 6c4:	00070d41 	andeq	r0, r7, r1, asr #26
 6c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 6cc:	000005f8 	strdeq	r0, [r0], -r8
 6d0:	2000163c 	andcs	r1, r0, ip, lsr r6
 6d4:	00000086 	andeq	r0, r0, r6, lsl #1
 6d8:	40080e41 	andmi	r0, r8, r1, asr #28
 6dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6e0:	100e4101 	andne	r4, lr, r1, lsl #2
 6e4:	00070d41 	andeq	r0, r7, r1, asr #26
 6e8:	0000000c 	andeq	r0, r0, ip
 6ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 6f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 6f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 6f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 6fc:	000006e8 	andeq	r0, r0, r8, ror #13
 700:	200016c4 	andcs	r1, r0, r4, asr #13
 704:	00000064 	andeq	r0, r0, r4, rrx
 708:	40080e41 	andmi	r0, r8, r1, asr #28
 70c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 710:	100e4101 	andne	r4, lr, r1, lsl #2
 714:	00070d41 	andeq	r0, r7, r1, asr #26
 718:	0000001c 	andeq	r0, r0, ip, lsl r0
 71c:	000006e8 	andeq	r0, r0, r8, ror #13
 720:	20001728 	andcs	r1, r0, r8, lsr #14
 724:	00000044 	andeq	r0, r0, r4, asr #32
 728:	40080e41 	andmi	r0, r8, r1, asr #28
 72c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 730:	180e4101 	stmdane	lr, {r0, r8, lr}
 734:	00070d41 	andeq	r0, r7, r1, asr #26
 738:	0000001c 	andeq	r0, r0, ip, lsl r0
 73c:	000006e8 	andeq	r0, r0, r8, ror #13
 740:	2000176c 	andcs	r1, r0, ip, ror #14
 744:	000000a0 	andeq	r0, r0, r0, lsr #1
 748:	40080e41 	andmi	r0, r8, r1, asr #28
 74c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 750:	180e4101 	stmdane	lr, {r0, r8, lr}
 754:	00070d41 	andeq	r0, r7, r1, asr #26
 758:	0000001c 	andeq	r0, r0, ip, lsl r0
 75c:	000006e8 	andeq	r0, r0, r8, ror #13
 760:	2000180c 	andcs	r1, r0, ip, lsl #16
 764:	0000009c 	muleq	r0, ip, r0
 768:	40080e41 	andmi	r0, r8, r1, asr #28
 76c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 770:	100e4101 	andne	r4, lr, r1, lsl #2
 774:	00070d41 	andeq	r0, r7, r1, asr #26
 778:	0000001c 	andeq	r0, r0, ip, lsl r0
 77c:	000006e8 	andeq	r0, r0, r8, ror #13
 780:	200018a8 	andcs	r1, r0, r8, lsr #17
 784:	0000007c 	andeq	r0, r0, ip, ror r0
 788:	40080e41 	andmi	r0, r8, r1, asr #28
 78c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 790:	200e4101 	andcs	r4, lr, r1, lsl #2
 794:	00070d41 	andeq	r0, r7, r1, asr #26
 798:	0000001c 	andeq	r0, r0, ip, lsl r0
 79c:	000006e8 	andeq	r0, r0, r8, ror #13
 7a0:	20001924 	andcs	r1, r0, r4, lsr #18
 7a4:	00000054 	andeq	r0, r0, r4, asr r0
 7a8:	40080e41 	andmi	r0, r8, r1, asr #28
 7ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7b0:	100e4101 	andne	r4, lr, r1, lsl #2
 7b4:	00070d41 	andeq	r0, r7, r1, asr #26
 7b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7bc:	000006e8 	andeq	r0, r0, r8, ror #13
 7c0:	20001978 	andcs	r1, r0, r8, ror r9
 7c4:	000000b2 	strheq	r0, [r0], -r2
 7c8:	40080e41 	andmi	r0, r8, r1, asr #28
 7cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7d0:	180e4101 	stmdane	lr, {r0, r8, lr}
 7d4:	00070d41 	andeq	r0, r7, r1, asr #26
 7d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7dc:	000006e8 	andeq	r0, r0, r8, ror #13
 7e0:	20001a2a 	andcs	r1, r0, sl, lsr #20
 7e4:	00000074 	andeq	r0, r0, r4, ror r0
 7e8:	40080e41 	andmi	r0, r8, r1, asr #28
 7ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7f0:	200e4101 	andcs	r4, lr, r1, lsl #2
 7f4:	00070d41 	andeq	r0, r7, r1, asr #26
 7f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7fc:	000006e8 	andeq	r0, r0, r8, ror #13
 800:	20001a9e 	mulcs	r0, lr, sl
 804:	000001c6 	andeq	r0, r0, r6, asr #3
 808:	40080e41 	andmi	r0, r8, r1, asr #28
 80c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 810:	180e4101 	stmdane	lr, {r0, r8, lr}
 814:	00070d41 	andeq	r0, r7, r1, asr #26
 818:	0000001c 	andeq	r0, r0, ip, lsl r0
 81c:	000006e8 	andeq	r0, r0, r8, ror #13
 820:	20001c64 	andcs	r1, r0, r4, ror #24
 824:	000000a0 	andeq	r0, r0, r0, lsr #1
 828:	40080e41 	andmi	r0, r8, r1, asr #28
 82c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 830:	180e4101 	stmdane	lr, {r0, r8, lr}
 834:	00070d41 	andeq	r0, r7, r1, asr #26
 838:	0000001c 	andeq	r0, r0, ip, lsl r0
 83c:	000006e8 	andeq	r0, r0, r8, ror #13
 840:	20001d04 	andcs	r1, r0, r4, lsl #26
 844:	00000086 	andeq	r0, r0, r6, lsl #1
 848:	40080e41 	andmi	r0, r8, r1, asr #28
 84c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 850:	100e4101 	andne	r4, lr, r1, lsl #2
 854:	00070d41 	andeq	r0, r7, r1, asr #26
 858:	0000001c 	andeq	r0, r0, ip, lsl r0
 85c:	000006e8 	andeq	r0, r0, r8, ror #13
 860:	20001d8a 	andcs	r1, r0, sl, lsl #27
 864:	0000007e 	andeq	r0, r0, lr, ror r0
 868:	40080e41 	andmi	r0, r8, r1, asr #28
 86c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 870:	200e4101 	andcs	r4, lr, r1, lsl #2
 874:	00070d41 	andeq	r0, r7, r1, asr #26
 878:	0000001c 	andeq	r0, r0, ip, lsl r0
 87c:	000006e8 	andeq	r0, r0, r8, ror #13
 880:	20001e08 	andcs	r1, r0, r8, lsl #28
 884:	00000054 	andeq	r0, r0, r4, asr r0
 888:	40080e41 	andmi	r0, r8, r1, asr #28
 88c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 890:	100e4101 	andne	r4, lr, r1, lsl #2
 894:	00070d41 	andeq	r0, r7, r1, asr #26
 898:	0000001c 	andeq	r0, r0, ip, lsl r0
 89c:	000006e8 	andeq	r0, r0, r8, ror #13
 8a0:	20001e5c 	andcs	r1, r0, ip, asr lr
 8a4:	000000b2 	strheq	r0, [r0], -r2
 8a8:	40080e41 	andmi	r0, r8, r1, asr #28
 8ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8b0:	180e4101 	stmdane	lr, {r0, r8, lr}
 8b4:	00070d41 	andeq	r0, r7, r1, asr #26
 8b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8bc:	000006e8 	andeq	r0, r0, r8, ror #13
 8c0:	20001f0e 	andcs	r1, r0, lr, lsl #30
 8c4:	00000076 	andeq	r0, r0, r6, ror r0
 8c8:	40080e41 	andmi	r0, r8, r1, asr #28
 8cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8d0:	200e4101 	andcs	r4, lr, r1, lsl #2
 8d4:	00070d41 	andeq	r0, r7, r1, asr #26
 8d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8dc:	000006e8 	andeq	r0, r0, r8, ror #13
 8e0:	20001f84 	andcs	r1, r0, r4, lsl #31
 8e4:	000001c8 	andeq	r0, r0, r8, asr #3
 8e8:	40080e41 	andmi	r0, r8, r1, asr #28
 8ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8f0:	180e4101 	stmdane	lr, {r0, r8, lr}
 8f4:	00070d41 	andeq	r0, r7, r1, asr #26
 8f8:	0000000c 	andeq	r0, r0, ip
 8fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 900:	7c020001 	stcvc	0, cr0, [r2], {1}
 904:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 908:	0000001c 	andeq	r0, r0, ip, lsl r0
 90c:	000008f8 	strdeq	r0, [r0], -r8
 910:	2000214c 	andcs	r2, r0, ip, asr #2
 914:	0000005a 	andeq	r0, r0, sl, asr r0
 918:	40080e41 	andmi	r0, r8, r1, asr #28
 91c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 920:	180e4101 	stmdane	lr, {r0, r8, lr}
 924:	00070d41 	andeq	r0, r7, r1, asr #26
 928:	0000001c 	andeq	r0, r0, ip, lsl r0
 92c:	000008f8 	strdeq	r0, [r0], -r8
 930:	200021a6 	andcs	r2, r0, r6, lsr #3
 934:	000000ca 	andeq	r0, r0, sl, asr #1
 938:	40080e41 	andmi	r0, r8, r1, asr #28
 93c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 940:	280e4101 	stmdacs	lr, {r0, r8, lr}
 944:	00070d41 	andeq	r0, r7, r1, asr #26
 948:	0000001c 	andeq	r0, r0, ip, lsl r0
 94c:	000008f8 	strdeq	r0, [r0], -r8
 950:	20002270 	andcs	r2, r0, r0, ror r2
 954:	000000c8 	andeq	r0, r0, r8, asr #1
 958:	40080e41 	andmi	r0, r8, r1, asr #28
 95c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 960:	280e4101 	stmdacs	lr, {r0, r8, lr}
 964:	00070d41 	andeq	r0, r7, r1, asr #26
 968:	0000001c 	andeq	r0, r0, ip, lsl r0
 96c:	000008f8 	strdeq	r0, [r0], -r8
 970:	20002338 	andcs	r2, r0, r8, lsr r3
 974:	000000ac 	andeq	r0, r0, ip, lsr #1
 978:	40080e41 	andmi	r0, r8, r1, asr #28
 97c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 980:	280e4101 	stmdacs	lr, {r0, r8, lr}
 984:	00070d41 	andeq	r0, r7, r1, asr #26
 988:	0000001c 	andeq	r0, r0, ip, lsl r0
 98c:	000008f8 	strdeq	r0, [r0], -r8
 990:	200023e4 	andcs	r2, r0, r4, ror #7
 994:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 998:	40080e41 	andmi	r0, r8, r1, asr #28
 99c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9a0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 9a4:	00070d41 	andeq	r0, r7, r1, asr #26
 9a8:	00000020 	andeq	r0, r0, r0, lsr #32
 9ac:	000008f8 	strdeq	r0, [r0], -r8
 9b0:	20002494 	mulcs	r0, r4, r4
 9b4:	0000011c 	andeq	r0, r0, ip, lsl r1
 9b8:	400c0e41 	andmi	r0, ip, r1, asr #28
 9bc:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 9c0:	018e4002 	orreq	r4, lr, r2
 9c4:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
 9c8:	0000070d 	andeq	r0, r0, sp, lsl #14
 9cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 9d0:	000008f8 	strdeq	r0, [r0], -r8
 9d4:	200025b0 			; <UNDEFINED> instruction: 0x200025b0
 9d8:	00000020 	andeq	r0, r0, r0, lsr #32
 9dc:	40080e41 	andmi	r0, r8, r1, asr #28
 9e0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9e4:	180e4101 	stmdane	lr, {r0, r8, lr}
 9e8:	00070d41 	andeq	r0, r7, r1, asr #26
 9ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 9f0:	000008f8 	strdeq	r0, [r0], -r8
 9f4:	200025d0 	ldrdcs	r2, [r0], -r0
 9f8:	0000005c 	andeq	r0, r0, ip, asr r0
 9fc:	40080e41 	andmi	r0, r8, r1, asr #28
 a00:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a04:	180e4101 	stmdane	lr, {r0, r8, lr}
 a08:	00070d41 	andeq	r0, r7, r1, asr #26
 a0c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a10:	000008f8 	strdeq	r0, [r0], -r8
 a14:	2000262c 	andcs	r2, r0, ip, lsr #12
 a18:	0000005c 	andeq	r0, r0, ip, asr r0
 a1c:	40080e41 	andmi	r0, r8, r1, asr #28
 a20:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a24:	180e4101 	stmdane	lr, {r0, r8, lr}
 a28:	00070d41 	andeq	r0, r7, r1, asr #26
 a2c:	0000000c 	andeq	r0, r0, ip
 a30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a34:	7c020001 	stcvc	0, cr0, [r2], {1}
 a38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a3c:	0000000c 	andeq	r0, r0, ip
 a40:	00000a2c 	andeq	r0, r0, ip, lsr #20
 a44:	20000000 	andcs	r0, r0, r0
 a48:	0000000c 	andeq	r0, r0, ip
 a4c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a50:	00000a2c 	andeq	r0, r0, ip, lsr #20
 a54:	20002688 	andcs	r2, r0, r8, lsl #13
 a58:	000002e8 	andeq	r0, r0, r8, ror #5
 a5c:	40080e41 	andmi	r0, r8, r1, asr #28
 a60:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a64:	300e4101 	andcc	r4, lr, r1, lsl #2
 a68:	00070d41 	andeq	r0, r7, r1, asr #26
 a6c:	00000018 	andeq	r0, r0, r8, lsl r0
 a70:	00000a2c 	andeq	r0, r0, ip, lsr #20
 a74:	20002970 	andcs	r2, r0, r0, ror r9
 a78:	00000030 	andeq	r0, r0, r0, lsr r0
 a7c:	40080e41 	andmi	r0, r8, r1, asr #28
 a80:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a84:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 a88:	0000001c 	andeq	r0, r0, ip, lsl r0
 a8c:	00000a2c 	andeq	r0, r0, ip, lsr #20
 a90:	200029a0 	andcs	r2, r0, r0, lsr #19
 a94:	0000001c 	andeq	r0, r0, ip, lsl r0
 a98:	40080e41 	andmi	r0, r8, r1, asr #28
 a9c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 aa0:	100e4101 	andne	r4, lr, r1, lsl #2
 aa4:	00070d41 	andeq	r0, r7, r1, asr #26
 aa8:	00000020 	andeq	r0, r0, r0, lsr #32
 aac:	00000a2c 	andeq	r0, r0, ip, lsr #20
 ab0:	200029bc 			; <UNDEFINED> instruction: 0x200029bc
 ab4:	000000a8 	andeq	r0, r0, r8, lsr #1
 ab8:	400c0e41 	andmi	r0, ip, r1, asr #28
 abc:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 ac0:	018e4002 	orreq	r4, lr, r2
 ac4:	41180e41 	tstmi	r8, r1, asr #28
 ac8:	0000070d 	andeq	r0, r0, sp, lsl #14
 acc:	00000020 	andeq	r0, r0, r0, lsr #32
 ad0:	00000a2c 	andeq	r0, r0, ip, lsr #20
 ad4:	20002a64 	andcs	r2, r0, r4, ror #20
 ad8:	000000a8 	andeq	r0, r0, r8, lsr #1
 adc:	400c0e41 	andmi	r0, ip, r1, asr #28
 ae0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 ae4:	018e4002 	orreq	r4, lr, r2
 ae8:	41180e41 	tstmi	r8, r1, asr #28
 aec:	0000070d 	andeq	r0, r0, sp, lsl #14
 af0:	00000020 	andeq	r0, r0, r0, lsr #32
 af4:	00000a2c 	andeq	r0, r0, ip, lsr #20
 af8:	20002b0c 	andcs	r2, r0, ip, lsl #22
 afc:	000000f8 	strdeq	r0, [r0], -r8
 b00:	400c0e41 	andmi	r0, ip, r1, asr #28
 b04:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b08:	018e4002 	orreq	r4, lr, r2
 b0c:	41300e41 	teqmi	r0, r1, asr #28
 b10:	0000070d 	andeq	r0, r0, sp, lsl #14
 b14:	00000018 	andeq	r0, r0, r8, lsl r0
 b18:	00000a2c 	andeq	r0, r0, ip, lsr #20
 b1c:	20002c04 	andcs	r2, r0, r4, lsl #24
 b20:	000000a0 	andeq	r0, r0, r0, lsr #1
 b24:	40080e41 	andmi	r0, r8, r1, asr #28
 b28:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b2c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 b30:	00000018 	andeq	r0, r0, r8, lsl r0
 b34:	00000a2c 	andeq	r0, r0, ip, lsr #20
 b38:	20002ca4 	andcs	r2, r0, r4, lsr #25
 b3c:	00000060 	andeq	r0, r0, r0, rrx
 b40:	40080e41 	andmi	r0, r8, r1, asr #28
 b44:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b48:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 b4c:	0000000c 	andeq	r0, r0, ip
 b50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b54:	7c010001 	stcvc	0, cr0, [r1], {1}
 b58:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b5c:	0000000c 	andeq	r0, r0, ip
 b60:	00000b4c 	andeq	r0, r0, ip, asr #22
 b64:	20002d05 	andcs	r2, r0, r5, lsl #26
 b68:	000001cc 	andeq	r0, r0, ip, asr #3
 b6c:	0000000c 	andeq	r0, r0, ip
 b70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b74:	7c020001 	stcvc	0, cr0, [r2], {1}
 b78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b7c:	00000028 	andeq	r0, r0, r8, lsr #32
 b80:	00000b6c 	andeq	r0, r0, ip, ror #22
 b84:	20002edc 	ldrdcs	r2, [r0], -ip
 b88:	00000620 	andeq	r0, r0, r0, lsr #12
 b8c:	83180e41 	tsthi	r8, #1040	; 0x410
 b90:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 b94:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 b98:	46018e02 	strmi	r8, [r1], -r2, lsl #28
 b9c:	0a88280e 	beq	fe20abdc <_global_impure_ptr+0xde20374c>
 ba0:	088a0989 	stmeq	sl, {r0, r3, r7, r8, fp}
 ba4:	0000078b 	andeq	r0, r0, fp, lsl #15
 ba8:	0000000c 	andeq	r0, r0, ip
 bac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 bb0:	7c020001 	stcvc	0, cr0, [r2], {1}
 bb4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 bb8:	00000018 	andeq	r0, r0, r8, lsl r0
 bbc:	00000ba8 	andeq	r0, r0, r8, lsr #23
 bc0:	200034fc 	strdcs	r3, [r0], -ip
 bc4:	00000068 	andeq	r0, r0, r8, rrx
 bc8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 bcc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	0000000c 	andeq	r0, r0, ip
 bd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 bdc:	7c020001 	stcvc	0, cr0, [r2], {1}
 be0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 be4:	00000018 	andeq	r0, r0, r8, lsl r0
 be8:	00000bd4 	ldrdeq	r0, [r0], -r4
 bec:	20003564 	andcs	r3, r0, r4, ror #10
 bf0:	00000084 	andeq	r0, r0, r4, lsl #1
 bf4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 bf8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
 c00:	0000000c 	andeq	r0, r0, ip
 c04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c08:	7c020001 	stcvc	0, cr0, [r2], {1}
 c0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c10:	00000014 	andeq	r0, r0, r4, lsl r0
 c14:	00000c00 	andeq	r0, r0, r0, lsl #24
 c18:	20004b88 	andcs	r4, r0, r8, lsl #23
 c1c:	00000012 	andeq	r0, r0, r2, lsl r0
 c20:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 c24:	00018e02 	andeq	r8, r1, r2, lsl #28
 c28:	0000000c 	andeq	r0, r0, ip
 c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c30:	7c020001 	stcvc	0, cr0, [r2], {1}
 c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c38:	00000028 	andeq	r0, r0, r8, lsr #32
 c3c:	00000c28 	andeq	r0, r0, r8, lsr #24
 c40:	20004b9c 	mulcs	r0, ip, fp
 c44:	00000358 	andeq	r0, r0, r8, asr r3
 c48:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 c4c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 c50:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 c54:	240e4501 	strcs	r4, [lr], #-1281	; 0xfffffaff
 c58:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 c5c:	068b078a 	streq	r0, [fp], sl, lsl #15
 c60:	00600e41 	rsbeq	r0, r0, r1, asr #28
 c64:	0000000c 	andeq	r0, r0, ip
 c68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c6c:	7c020001 	stcvc	0, cr0, [r2], {1}
 c70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c74:	00000024 	andeq	r0, r0, r4, lsr #32
 c78:	00000c64 	andeq	r0, r0, r4, ror #24
 c7c:	20004ef4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 c80:	000000c0 	andeq	r0, r0, r0, asr #1
 c84:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 c88:	86048505 	strhi	r8, [r4], -r5, lsl #10
 c8c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 c90:	1c0e4301 	stcne	3, cr4, [lr], {1}
 c94:	06890788 	streq	r0, [r9], r8, lsl #15
 c98:	00500e41 	subseq	r0, r0, r1, asr #28
 c9c:	0000000c 	andeq	r0, r0, ip
 ca0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ca4:	7c020001 	stcvc	0, cr0, [r2], {1}
 ca8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 cac:	00000028 	andeq	r0, r0, r8, lsr #32
 cb0:	00000c9c 	muleq	r0, ip, ip
 cb4:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
 cb8:	00000a6c 	andeq	r0, r0, ip, ror #20
 cbc:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 cc0:	86048505 	strhi	r8, [r4], -r5, lsl #10
 cc4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 cc8:	240e4701 	strcs	r4, [lr], #-1793	; 0xfffff8ff
 ccc:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 cd0:	068b078a 	streq	r0, [fp], sl, lsl #15
 cd4:	00680e42 	rsbeq	r0, r8, r2, asr #28
 cd8:	0000000c 	andeq	r0, r0, ip
 cdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ce0:	7c020001 	stcvc	0, cr0, [r2], {1}
 ce4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ce8:	00000024 	andeq	r0, r0, r4, lsr #32
 cec:	00000cd8 	ldrdeq	r0, [r0], -r8
 cf0:	20005a20 	andcs	r5, r0, r0, lsr #20
 cf4:	000001c0 	andeq	r0, r0, r0, asr #3
 cf8:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xfffff1be
 cfc:	86048505 	strhi	r8, [r4], -r5, lsl #10
 d00:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 d04:	200e4701 	andcs	r4, lr, r1, lsl #14
 d08:	07890888 	streq	r0, [r9, r8, lsl #17]
 d0c:	0000068a 	andeq	r0, r0, sl, lsl #13
 d10:	0000000c 	andeq	r0, r0, ip
 d14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d18:	7c020001 	stcvc	0, cr0, [r2], {1}
 d1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d20:	0000000c 	andeq	r0, r0, ip
 d24:	00000d10 	andeq	r0, r0, r0, lsl sp
 d28:	20005be0 	andcs	r5, r0, r0, ror #23
 d2c:	00000008 	andeq	r0, r0, r8
 d30:	0000000c 	andeq	r0, r0, ip
 d34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d38:	7c020001 	stcvc	0, cr0, [r2], {1}
 d3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d40:	0000000c 	andeq	r0, r0, ip
 d44:	00000d30 	andeq	r0, r0, r0, lsr sp
 d48:	20005be8 	andcs	r5, r0, r8, ror #23
 d4c:	00000014 	andeq	r0, r0, r4, lsl r0
 d50:	0000000c 	andeq	r0, r0, ip
 d54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d58:	7c020001 	stcvc	0, cr0, [r2], {1}
 d5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d60:	0000000c 	andeq	r0, r0, ip
 d64:	00000d50 	andeq	r0, r0, r0, asr sp
 d68:	20005bfc 	strdcs	r5, [r0], -ip
 d6c:	00000004 	andeq	r0, r0, r4
 d70:	0000000c 	andeq	r0, r0, ip
 d74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d78:	7c020001 	stcvc	0, cr0, [r2], {1}
 d7c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d80:	0000000c 	andeq	r0, r0, ip
 d84:	00000d70 	andeq	r0, r0, r0, ror sp
 d88:	20005c00 	andcs	r5, r0, r0, lsl #24
 d8c:	0000000c 	andeq	r0, r0, ip
 d90:	0000000c 	andeq	r0, r0, ip
 d94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d98:	7c020001 	stcvc	0, cr0, [r2], {1}
 d9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 da0:	00000024 	andeq	r0, r0, r4, lsr #32
 da4:	00000d90 	muleq	r0, r0, sp
 da8:	20005c0c 	andcs	r5, r0, ip, lsl #24
 dac:	00000144 	andeq	r0, r0, r4, asr #2
 db0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 db4:	86048505 	strhi	r8, [r4], -r5, lsl #10
 db8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 dbc:	180e4201 	stmdane	lr, {r0, r9, lr}
 dc0:	0e470688 	cdpeq	6, 4, cr0, cr7, cr8, {4}
 dc4:	00000020 	andeq	r0, r0, r0, lsr #32
 dc8:	0000000c 	andeq	r0, r0, ip
 dcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 dd0:	7c020001 	stcvc	0, cr0, [r2], {1}
 dd4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 dd8:	00000018 	andeq	r0, r0, r8, lsl r0
 ddc:	00000dc8 	andeq	r0, r0, r8, asr #27
 de0:	20005d50 	andcs	r5, r0, r0, asr sp
 de4:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 de8:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
 dec:	86038504 	strhi	r8, [r3], -r4, lsl #10
 df0:	00018e02 	andeq	r8, r1, r2, lsl #28
 df4:	0000000c 	andeq	r0, r0, ip
 df8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 dfc:	7c020001 	stcvc	0, cr0, [r2], {1}
 e00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e04:	00000018 	andeq	r0, r0, r8, lsl r0
 e08:	00000df4 	strdeq	r0, [r0], -r4
 e0c:	20005e20 	andcs	r5, r0, r0, lsr #28
 e10:	00000010 	andeq	r0, r0, r0, lsl r0
 e14:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 e18:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 e1c:	00000001 	andeq	r0, r0, r1
 e20:	0000000c 	andeq	r0, r0, ip
 e24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e28:	7c020001 	stcvc	0, cr0, [r2], {1}
 e2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e30:	00000028 	andeq	r0, r0, r8, lsr #32
 e34:	00000e20 	andeq	r0, r0, r0, lsr #28
 e38:	200036a0 	andcs	r3, r0, r0, lsr #13
 e3c:	00000668 	andeq	r0, r0, r8, ror #12
 e40:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 e44:	86048505 	strhi	r8, [r4], -r5, lsl #10
 e48:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 e4c:	240e4501 	strcs	r4, [lr], #-1281	; 0xfffffaff
 e50:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 e54:	068b078a 	streq	r0, [fp], sl, lsl #15
 e58:	00400e43 	subeq	r0, r0, r3, asr #28
 e5c:	0000000c 	andeq	r0, r0, ip
 e60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e64:	7c020001 	stcvc	0, cr0, [r2], {1}
 e68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e6c:	00000024 	andeq	r0, r0, r4, lsr #32
 e70:	00000e5c 	andeq	r0, r0, ip, asr lr
 e74:	20003d08 	andcs	r3, r0, r8, lsl #26
 e78:	00000074 	andeq	r0, r0, r4, ror r0
 e7c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 e80:	86048505 	strhi	r8, [r4], -r5, lsl #10
 e84:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 e88:	200e4501 	andcs	r4, lr, r1, lsl #10
 e8c:	07890888 	streq	r0, [r9, r8, lsl #17]
 e90:	0000068a 	andeq	r0, r0, sl, lsl #13
 e94:	0000000c 	andeq	r0, r0, ip
 e98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e9c:	7c020001 	stcvc	0, cr0, [r2], {1}
 ea0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ea4:	00000024 	andeq	r0, r0, r4, lsr #32
 ea8:	00000e94 	muleq	r0, r4, lr
 eac:	20003d7c 	andcs	r3, r0, ip, ror sp
 eb0:	000000c8 	andeq	r0, r0, r8, asr #1
 eb4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 eb8:	86048505 	strhi	r8, [r4], -r5, lsl #10
 ebc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 ec0:	240e4501 	strcs	r4, [lr], #-1281	; 0xfffffaff
 ec4:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 ec8:	068b078a 	streq	r0, [fp], sl, lsl #15
 ecc:	0000000c 	andeq	r0, r0, ip
 ed0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ed4:	7c020001 	stcvc	0, cr0, [r2], {1}
 ed8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 edc:	00000024 	andeq	r0, r0, r4, lsr #32
 ee0:	00000ecc 	andeq	r0, r0, ip, asr #29
 ee4:	20003e44 	andcs	r3, r0, r4, asr #28
 ee8:	000000c4 	andeq	r0, r0, r4, asr #1
 eec:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 ef0:	86048505 	strhi	r8, [r4], -r5, lsl #10
 ef4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 ef8:	240e4601 	strcs	r4, [lr], #-1537	; 0xfffff9ff
 efc:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 f00:	068b078a 	streq	r0, [fp], sl, lsl #15
 f04:	0000000c 	andeq	r0, r0, ip
 f08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 f0c:	7c020001 	stcvc	0, cr0, [r2], {1}
 f10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 f14:	00000028 	andeq	r0, r0, r8, lsr #32
 f18:	00000f04 	andeq	r0, r0, r4, lsl #30
 f1c:	20003f08 	andcs	r3, r0, r8, lsl #30
 f20:	00000500 	andeq	r0, r0, r0, lsl #10
 f24:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 f28:	86048505 	strhi	r8, [r4], -r5, lsl #10
 f2c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 f30:	240e4501 	strcs	r4, [lr], #-1281	; 0xfffffaff
 f34:	08890988 	stmeq	r9, {r3, r7, r8, fp}
 f38:	068b078a 	streq	r0, [fp], sl, lsl #15
 f3c:	00400e45 	subeq	r0, r0, r5, asr #28
 f40:	0000000c 	andeq	r0, r0, ip
 f44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 f48:	7c020001 	stcvc	0, cr0, [r2], {1}
 f4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 f50:	00000024 	andeq	r0, r0, r4, lsr #32
 f54:	00000f40 	andeq	r0, r0, r0, asr #30
 f58:	20004408 	andcs	r4, r0, r8, lsl #8
 f5c:	0000062c 	andeq	r0, r0, ip, lsr #12
 f60:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 f64:	86048505 	strhi	r8, [r4], -r5, lsl #10
 f68:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 f6c:	200e4501 	andcs	r4, lr, r1, lsl #10
 f70:	07890888 	streq	r0, [r9, r8, lsl #17]
 f74:	0000068a 	andeq	r0, r0, sl, lsl #13
 f78:	0000000c 	andeq	r0, r0, ip
 f7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 f80:	7c020001 	stcvc	0, cr0, [r2], {1}
 f84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 f88:	00000018 	andeq	r0, r0, r8, lsl r0
 f8c:	00000f78 	andeq	r0, r0, r8, ror pc
 f90:	20004a34 	andcs	r4, r0, r4, lsr sl
 f94:	00000040 	andeq	r0, r0, r0, asr #32
 f98:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 f9c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 fa0:	00018e02 	andeq	r8, r1, r2, lsl #28
 fa4:	0000000c 	andeq	r0, r0, ip
 fa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 fac:	7c010001 	stcvc	0, cr0, [r1], {1}
 fb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 fb4:	0000000c 	andeq	r0, r0, ip
 fb8:	00000fa4 	andeq	r0, r0, r4, lsr #31
 fbc:	20004a75 	andcs	r4, r0, r5, ror sl
 fc0:	0000010a 	andeq	r0, r0, sl, lsl #2
 fc4:	0000000c 	andeq	r0, r0, ip
 fc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 fcc:	7c020001 	stcvc	0, cr0, [r2], {1}
 fd0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 fd4:	0000000c 	andeq	r0, r0, ip
 fd8:	00000fc4 	andeq	r0, r0, r4, asr #31
 fdc:	20005e30 	andcs	r5, r0, r0, lsr lr
 fe0:	0000000c 	andeq	r0, r0, ip

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20002688 	andcs	r2, r0, r8, lsl #13
   4:	20002d04 	andcs	r2, r0, r4, lsl #26
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
